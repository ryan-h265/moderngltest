================================================================================
PYTHON PROJECT STRUCTURE OVERVIEW
Project: 3dlibtesting
================================================================================

MODULE-LEVEL FUNCTIONS:
--------------------------------------------------------------------------------
├─ get_area_texture_data() -> None @ assets/textures/smaa_textures.py [L3193]
│  ⮕ Get decoded area texture data.
│  ⤷ Uses: AREA_TEX_DATA, base64, base64.b64decode
├─ get_search_texture_data() -> None @ assets/textures/smaa_textures.py [L3198]
│  ⮕ Get decoded search texture data.
│  ⤷ Uses: SEARCH_TEX_DATA, base64, base64.b64decode
├─ calculate_importance(light, camera_pos) -> None @ check_shadow_resolutions.py [L17]
│  ⮕ Calculate light importance score
│  ⤷ Uses: camera_pos, distance, importance, light, light.intensity (+5 more)
├─ main() -> None @ check_shadow_resolutions.py [L24]
│  ⤷ Uses: Light, SHADOW_MAP_SIZE_HIGH, SHADOW_MAP_SIZE_LOW, SHADOW_MAP_SIZE_MED, Vector3 (+30 more)
├─ test_frustum_culling() -> None @ debug_frustum.py [L13]
│  ⮕ Test frustum culling with test positions
│  ⤷ Uses: Camera, Vector3, aspect_ratio, behind, camera (+26 more)
├─ main() -> None @ debug_gltf_model.py [L289]
│  ⮕ Main entry point.
│  ⤷ Uses: GltfDiagnostics, diagnostics, diagnostics.analyze_model, model_path, success (+3 more)
├─ main() -> None @ examples/generate_fractal_scene.py [L53]
│  ⤷ Uses: PRESETS, PRESETS.keys, Path, argparse, argparse.ArgumentParser (+31 more)
├─ make_scene_json(scene_path: str, heightmap_relpath: str, metadata: dict) -> None @ examples/generate_fractal_scene.py [L22]
│  ⤷ Uses: fh, heightmap_relpath, json, json.dump, metadata (+8 more)
├─ build_terrain_mesh_data(heights, world_size) -> None @ examples/load_fractal_terrain.py [L44]
│  ⮕ Build vertex and index arrays for rendering a heightmap terrain.
│  ⤷ Uses: dx, dz, heights, heights.shape, i (+28 more)
├─ example_usage() -> None @ examples/load_fractal_terrain.py [L147]
│  ⮕ Example of loading and processing a fractal terrain.
│  ⤷ Uses: Path, Path(scene_path).parent, build_terrain_mesh_data, heightmap_path, heights (+12 more)
├─ load_heightmap(npz_path) -> None @ examples/load_fractal_terrain.py [L18]
│  ⮕ Load heightmap and metadata from .npz file.
│  ⤷ Uses: FileNotFoundError, data, heights, heights.max, heights.min (+9 more)
├─ load_scene_json(scene_path) -> None @ examples/load_fractal_terrain.py [L128]
│  ⮕ Load a fractal terrain scene JSON.
│  ⤷ Uses: fh, json, json.load, open, scene (+1 more)
├─ main() -> None @ project_overview_generator.py [L367]
│  ⮕ Main entry point.
│  ⤷ Uses: ProjectAnalyzer, analyzer, analyzer.generate_compact_overview, analyzer.project_path, analyzer.scan_project (+15 more)
├─ cone(radius, height, segments) -> None @ src/gamelib/core/geometry_utils.py [L89]
│  ⮕ Create a cone geometry.
│  ⤷ Uses: VAO, angle, apex, base_center, base_normal (+26 more)
├─ donut_terrain(resolution, outer_radius, inner_radius, height, rim_width, seed) -> None @ src/gamelib/core/geometry_utils.py [L170]
│  ⮕ Create a donut-shaped terrain mesh with procedurally generated heights.
│  ⤷ Uses: VAO, bottom_left, bottom_right, dx, dz (+35 more)
├─ heightmap_terrain(heightmap_path) -> None @ src/gamelib/core/geometry_utils.py [L295]
│  ⮕ Create a terrain mesh from a pre-generated heightmap file.
│  ⤷ Uses: VAO, data, di, dj, dx (+38 more)
├─ pyramid(base_size, height) -> None @ src/gamelib/core/geometry_utils.py [L13]
│  ⮕ Create a pyramid geometry (square base with 4 triangular faces).
│  ⤷ Uses: VAO, base_normal, base_size, calc_normal, edge1 (+21 more)
├─ _vec3(value, fallback: Tuple[float, float, float]) -> Tuple[float, float, float] @ src/gamelib/core/light.py [L28]
│  ⮕ Utility to coerce JSON vectors into tuples.
│  ⤷ Uses: Tuple, ValueError, fallback, v, value
├─ _opt_vec3(value: Optional[List[float]]) -> Optional[Tuple[float, float, float]] @ src/gamelib/core/scene.py [L31]
│  ⮕ Convert an optional JSON vector to a tuple of floats.
│  ⤷ Uses: List, Optional, Tuple, ValueError, v (+1 more)
├─ _vec3(value, fallback: Tuple[float, float, float]) -> Tuple[float, float, float] @ src/gamelib/core/scene.py [L21]
│  ⮕ Convert a JSON vector to a tuple of floats.
│  ⤷ Uses: Tuple, ValueError, fallback, v, value
├─ fractal_noise(x, y, octaves, persistence, lacunarity, seed, use_perlin) -> None @ src/gamelib/core/terrain_generation.py [L43]
│  ⮕ Generate fractal noise by combining multiple octaves.
│  ⤷ Uses: HAS_PERLIN, amplitude, frequency, i, lacunarity (+10 more)
├─ generate_donut_height_data(resolution, outer_radius, inner_radius, height, rim_width, seed, use_perlin) -> None @ src/gamelib/core/terrain_generation.py [L79]
│  ⮕ Generate height data for a donut-shaped terrain with a thick, walkable top surface.
│  ⤷ Uses: angle, angle_variation, base_height, center_dist, fractal_noise (+26 more)
├─ generate_fractal_terrain(resolution, world_size, preset, seed, octaves, persistence, lacunarity, amplitude, scale) -> None @ src/gamelib/core/terrain_generation.py [L180]
│  ⮕ Generate natural fractal terrain using Perlin-based noise.
│  ⤷ Uses: HAS_PERLIN, ImportError, amplitude, generate_noise_grid, heights (+8 more)
├─ simple_noise(x, y, seed) -> None @ src/gamelib/core/terrain_generation.py [L18]
│  ⮕ Simple pseudo-noise function using sine waves and random-like behavior.
│  ⤷ Uses: math, math.sin, math.sqrt, n, seed (+2 more)
├─ _fade(t: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L34]
│  ⤷ Uses: np, np.ndarray, t
├─ _grad(hash_vals: np.ndarray, x: np.ndarray, y: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L42]
│  ⤷ Uses: g, h, hash_vals, np, np.array (+4 more)
├─ _lerp(a: np.ndarray, b: np.ndarray, t: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L38]
│  ⤷ Uses: a, b, np, np.ndarray, t
├─ _make_perm(seed: int) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L26]
│  ⤷ Uses: np, np.arange, np.concatenate, np.ndarray, np.random (+5 more)
├─ export_obj(path: str, heights: np.ndarray, world_size: float) -> None @ src/gamelib/fractal_perlin/__init__.py [L190]
│  ⮕ Export a simple OBJ mesh for the heightmap. Vertices are laid out on X,Z plane.
│  ⤷ Uses: dx, dz, fh, fh.write, heights (+18 more)
├─ fbm(x: np.ndarray | float, y: np.ndarray | float, octaves: int, persistence: float, lacunarity: float, seed: int) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L92]
│  ⮕ Fractal Brownian Motion using Perlin noise.
│  ⤷ Uses: amplitude, frequency, i, lacunarity, max_value (+10 more)
├─ generate_mountain_terrain(width: int, height: int, seed: int, octaves: int, persistence: float, lacunarity: float, scale: float, ridge_noise: bool, apply_warping: bool, warp_strength: float, hydraulic_iterations: int, erosion_rate: float, thermal_iterations: int, talus_angle: float) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L410]
│  ⮕ Generate complete mountain terrain with fractal noise and erosion.
│  ⤷ Uses: FractalTerrain, TerrainErosion, apply_warping, erosion, erosion.hydraulic_erosion (+22 more)
├─ generate_noise_grid(resolution: int) -> Tuple[np.ndarray, Dict[str, Any]] @ src/gamelib/fractal_perlin/__init__.py [L116]
│  ⮕ Generate a height grid (resolution x resolution) and return heights and metadata.
│  ⤷ Uses: Any, Dict, PRESETS, Tuple, amplitude (+23 more)
├─ perlin(x: np.ndarray | float, y: np.ndarray | float, seed: int) -> np.ndarray @ src/gamelib/fractal_perlin/__init__.py [L50]
│  ⮕ 2D Perlin noise. Accepts scalar or numpy arrays for x and y.
│  ⤷ Uses: aa, ab, ba, bb, np (+27 more)
├─ save_heightmap(path: str, heights: np.ndarray, metadata: Dict[str, Any], json_fallback: bool) -> None @ src/gamelib/fractal_perlin/__init__.py [L174]
│  ⮕ Save heights and metadata to .npz file. If json_fallback True also write a JSON with base64 (not used by default).
│  ⤷ Uses: Any, Dict, fh, heights, heights.astype (+18 more)
├─ fixing_common_problems() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L116]
│  ⮕ Solutions to common parameter tuning problems.
│  ⤷ Uses: problems_and_solutions
├─ gentle_hills_example() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L163]
│  ⮕ Create gentle, rolling hills (easy difficulty).
│  ⤷ Uses: generate_mountain_terrain, terrain
├─ heavily_eroded_canyon() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L202]
│  ⮕ Create canyon-like eroded terrain (hard difficulty - easy to break!).
│  ⤷ Uses: generate_mountain_terrain, terrain
├─ interactive_parameter_test() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L227]
│  ⮕ Test different parameter values to understand their effects.
│  ⤷ Uses: axes, axes[row, col].axis, axes[row, col].imshow, axes[row, col].set_title, base_params (+17 more)
├─ parameter_tuning_workflow() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L67]
│  ⮕ Recommended workflow for tuning parameters from scratch.
│  ⤷ Uses: FractalTerrain, TerrainErosion, erosion, erosion.hydraulic_erosion, height (+6 more)
├─ quick_start_example() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L19]
│  ⮕ The easiest way to get good results - use presets!
│  ⤷ Uses: AdvancedTerrain, terrain, terrain_gen, terrain_gen.generate_with_preset
├─ sharp_mountains_example() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L182]
│  ⮕ Create sharp, Alpine-style peaks (medium difficulty).
│  ⤷ Uses: generate_mountain_terrain, terrain
├─ understanding_parameters() -> None @ src/gamelib/fractal_perlin/terrain_usage_guide.py [L36]
│  ⮕ Critical parameters and their safe ranges to avoid broken terrain.
│  ⤷ Uses: safe_params
├─ get_command_type(command: InputCommand) -> InputType @ src/gamelib/input/input_commands.py [L285]
│  ⮕ Get the input type for a command.
│  ⤷ Uses: COMMAND_TYPES, COMMAND_TYPES.get, InputCommand, InputType, InputType.INSTANT (+1 more)
├─ _default_generator_output_name(definition: Dict[str, Any], target: Any) -> str @ src/gamelib/physics/collision_meshes.py [L240]
│  ⤷ Uses: Any, Dict, definition, definition.get, name (+1 more)
├─ _default_gltf_output_name(source_path: Path) -> str @ src/gamelib/physics/collision_meshes.py [L105]
│  ⤷ Uses: '_'.join, ASSETS_DIR, PROJECT_ROOT, Path, ValueError (+10 more)
├─ _ensure_collision_dir(path: Path) -> None @ src/gamelib/physics/collision_meshes.py [L199]
│  ⤷ Uses: Path, path, path.parent, path.parent.mkdir
├─ _ensure_obj_extension(label: str) -> str @ src/gamelib/physics/collision_meshes.py [L220]
│  ⤷ Uses: label, label.lower, label.lower().endswith
├─ _import_callable(target: str) -> None @ src/gamelib/physics/collision_meshes.py [L226]
│  ⤷ Uses: AttributeError, CollisionMeshError, attr, callable, callback (+10 more)
├─ _needs_rebuild(output_path: Path, dependencies: Iterable[Path]) -> bool @ src/gamelib/physics/collision_meshes.py [L183]
│  ⤷ Uses: FileNotFoundError, Iterable, Path, dep, dep.stat (+7 more)
├─ _resolve_generator_collision(definition: Dict[str, Any], base_path: Optional[Path], force_rebuild: bool) -> CollisionMeshResult @ src/gamelib/physics/collision_meshes.py [L124]
│  ⤷ Uses: Any, CollisionMeshError, CollisionMeshResult, Dict, Optional (+16 more)
├─ _resolve_gltf_collision(definition: Dict[str, Any], base_path: Optional[Path], force_rebuild: bool) -> CollisionMeshResult @ src/gamelib/physics/collision_meshes.py [L82]
│  ⤷ Uses: Any, CollisionMeshError, CollisionMeshResult, Dict, Optional (+12 more)
├─ _resolve_input_path(value: str, base_path: Optional[Path]) -> Path @ src/gamelib/physics/collision_meshes.py [L152]
│  ⤷ Uses: (PROJECT_ROOT / raw_path).resolve, (base_path / raw_path).resolve, Optional, PROJECT_ROOT, Path (+9 more)
├─ _resolve_output_path(definition: Dict[str, Any], default_name: str) -> Path @ src/gamelib/physics/collision_meshes.py [L167]
│  ⤷ Uses: (COLLISION_DIR / inferred).resolve, (COLLISION_DIR / output_path).resolve, Any, COLLISION_DIR, Dict (+9 more)
├─ _slugify(value: str) -> str @ src/gamelib/physics/collision_meshes.py [L203]
│  ⤷ Uses: ''.join, ''.join(filtered).strip, char, char.isalnum, char.lower (+4 more)
├─ _slugify_path(value: str) -> str @ src/gamelib/physics/collision_meshes.py [L216]
│  ⤷ Uses: '_'.join, Path, Path(value).parts, part, value
├─ resolve_collision_mesh(definition: Dict[str, Any]) -> CollisionMeshResult @ src/gamelib/physics/collision_meshes.py [L40]
│  ⮕ Resolve (and build if necessary) a collision mesh described by ``definition``.
│  ⤷ Uses: Any, CollisionMeshError, CollisionMeshResult, Dict, Optional (+8 more)
├─ _write_obj(path: Path, vertices: Sequence[Iterable[float]], faces: Sequence[Tuple[int, int, int]]) -> None @ src/gamelib/physics/collision_primitives.py [L10]
│  ⮕ Write a simple OBJ file containing only vertices and triangle faces.
│  ⤷ Uses: Iterable, Path, Sequence, Tuple, a (+13 more)
├─ export_cone_collision(out_path: Path) -> None @ src/gamelib/physics/collision_primitives.py [L24]
│  ⮕ Generate a unit cone collision mesh aligned on the Y axis.
│  ⤷ Uses: Path, Tuple, ValueError, angle, apex_idx (+18 more)
├─ _quat(value: Iterable[float] | None) -> Optional[Tuple[float, float, float, float]] @ src/gamelib/physics/physics_world.py [L44]
│  ⮕ Convert an iterable to a quaternion tuple in (x, y, z, w) order.
│  ⤷ Uses: Iterable, Optional, Quaternion, Quaternion.from_eulers, Tuple (+5 more)
├─ _vec3(value: Iterable[float] | None) -> Optional[Tuple[float, float, float]] @ src/gamelib/physics/physics_world.py [L33]
│  ⮕ Convert an iterable to a tuple of three floats.
│  ⤷ Uses: Iterable, Optional, Tuple, ValueError, data (+2 more)
├─ edit_color(label: str, value: Tuple[float, float, float, float]) -> Tuple[bool, Tuple[float, float, float, float]] @ src/gamelib/ui/widgets/property_editor.py [L100]
│  ⮕ Edit a color (RGBA).
│  ⤷ Uses: Tuple, changed, imgui, imgui.color_edit4, imgui.same_line (+4 more)
├─ edit_enum(label: str, value: Any, enum_class: type) -> Tuple[bool, Any] @ src/gamelib/ui/widgets/property_editor.py [L133]
│  ⮕ Edit an enum value with radio buttons.
│  ⤷ Uses: Any, Tuple, changed, enum_class, enum_member (+8 more)
├─ edit_float(label: str, value: float, min_val: float, max_val: float, step: float) -> Tuple[bool, float] @ src/gamelib/ui/widgets/property_editor.py [L13]
│  ⮕ Edit a float value with a slider and input field.
│  ⤷ Uses: Tuple, changed, imgui, imgui.same_line, imgui.slider_float (+7 more)
├─ edit_text(label: str, value: str, max_length: int) -> Tuple[bool, str] @ src/gamelib/ui/widgets/property_editor.py [L165]
│  ⮕ Edit a text field.
│  ⤷ Uses: Tuple, changed, imgui, imgui.input_text, imgui.same_line (+5 more)
├─ edit_vector3(label: str, value: Vector3, min_val: float, max_val: float, step: float) -> Tuple[bool, Vector3] @ src/gamelib/ui/widgets/property_editor.py [L45]
│  ⮕ Edit a Vector3 with three sliders (X, Y, Z).
│  ⤷ Uses: Tuple, Vector3, changed, changed_x, changed_y (+17 more)
├─ test_camera_initialization() -> None @ tests/test_camera.py [L10]
│  ⮕ Test camera initialization
│  ⤷ Uses: Camera, Vector3, cam, cam.pitch, cam.position (+4 more)
├─ test_camera_matrices() -> None @ tests/test_camera.py [L58]
│  ⮕ Test camera matrix generation
│  ⤷ Uses: Camera, Vector3, cam, cam.get_projection_matrix, cam.get_view_matrix (+4 more)
├─ test_camera_mouse_movement() -> None @ tests/test_camera.py [L33]
│  ⮕ Test mouse movement updates yaw and pitch
│  ⤷ Uses: Camera, Vector3, cam, cam.pitch, cam.process_mouse_movement (+3 more)
├─ test_camera_pitch_constraint() -> None @ tests/test_camera.py [L46]
│  ⮕ Test pitch is constrained to prevent flipping
│  ⤷ Uses: Camera, Vector3, cam, cam.pitch, cam.process_mouse_movement
├─ test_camera_update_vectors() -> None @ tests/test_camera.py [L20]
│  ⮕ Test camera vector updates
│  ⤷ Uses: Camera, Vector3, abs, cam, cam._front (+1 more)
├─ test_directional_light_defaults() -> None @ tests/test_light.py [L83]
│  ⮕ Directional lights derive direction from target and have infinite range.
│  ⤷ Uses: Light, Vector3, direction, length, light (+6 more)
├─ test_light_animate_rotation() -> None @ tests/test_light.py [L44]
│  ⮕ Test light rotation animation
│  ⤷ Uses: Light, Vector3, light, light.animate_rotation, light.position (+5 more)
├─ test_light_initialization() -> None @ tests/test_light.py [L10]
│  ⮕ Test light initialization
│  ⤷ Uses: Light, Vector3, color, light, light.color (+7 more)
├─ test_light_matrix() -> None @ tests/test_light.py [L29]
│  ⮕ Test light matrix generation
│  ⤷ Uses: Light, Vector3, light, light.get_light_matrix, matrix (+1 more)
├─ test_light_setters() -> None @ tests/test_light.py [L60]
│  ⮕ Test light property setters
│  ⤷ Uses: Light, Vector3, light, light.color, light.color.x (+12 more)
├─ test_spot_light_cone_cosines() -> None @ tests/test_light.py [L97]
│  ⮕ Spot lights expose cosine falloff values for shaders.
│  ⤷ Uses: Light, Vector3, inner, light, light.get_spot_cosines (+1 more)
├─ test_scene_add_object() -> None @ tests/test_scene.py [L16]
│  ⮕ Test adding objects to scene
│  ⤷ Uses: Scene, SceneObject, Vector3, obj, scene (+3 more)
├─ test_scene_clear() -> None @ tests/test_scene.py [L31]
│  ⮕ Test clearing scene
│  ⤷ Uses: Scene, SceneObject, Vector3, obj, scene (+3 more)
├─ test_scene_default_scene() -> None @ tests/test_scene.py [L45]
│  ⮕ Test default scene creation
│  ⤷ Uses: Scene, scene, scene.create_default_scene, scene.get_object_count
├─ test_scene_initialization() -> None @ tests/test_scene.py [L10]
│  ⮕ Test scene initialization
│  ⤷ Uses: Scene, scene, scene.objects
├─ test_scene_object_apply_physics_transform() -> None @ tests/test_scene.py [L73]
│  ⮕ SceneObject should apply quaternion transforms correctly.
│  ⤷ Uses: Quaternion, Quaternion.from_z_rotation, SceneObject, Vector3, matrix (+9 more)
├─ test_scene_object_model_matrix() -> None @ tests/test_scene.py [L54]
│  ⮕ Test scene object model matrix generation
│  ⤷ Uses: SceneObject, Vector3, matrix, matrix.shape, np (+3 more)
├─ _collect_scene_paths(paths: Sequence[str] | None) -> List[Path] @ tools/export_collision_meshes.py [L344]
│  ⤷ Uses: (ASSETS / 'scenes').glob, (ROOT / item).resolve, ASSETS, List, Path (+12 more)
├─ _ensure_collision_dir() -> None @ tools/export_collision_meshes.py [L51]
│  ⤷ Uses: COLLISION_DIR, COLLISION_DIR.mkdir
├─ _iter_collision_definitions(scene_path: Path) -> Iterator[Tuple[Path, Dict, str]] @ tools/export_collision_meshes.py [L359]
│  ⤷ Uses: Dict, Iterator, Path, Tuple, base_path (+14 more)
├─ _load_gltf(path: Path) -> Tuple[Dict, List[bytes]] @ tools/export_collision_meshes.py [L189]
│  ⤷ Uses: (path.parent / uri).resolve, Dict, List, Path, Tuple (+37 more)
├─ _read_accessor(data: Dict, buffers: List[bytes], accessor_index: int) -> np.ndarray @ tools/export_collision_meshes.py [L233]
│  ⤷ Uses: COMPONENT_INFO, Dict, List, TYPE_COMPONENTS, accessor (+23 more)
├─ _traverse_nodes(data: Dict) -> List[Tuple[int, np.ndarray]] @ tools/export_collision_meshes.py [L251]
│  ⤷ Uses: Dict, List, Tuple, child, compose_matrix (+39 more)
├─ _write_obj(path: Path, vertices: Sequence[Iterable[float]], faces: Sequence[Iterable[int]]) -> None @ tools/export_collision_meshes.py [L55]
│  ⤷ Uses: Iterable, Path, Sequence, a, b (+12 more)
├─ cli(argv: Sequence[str] | None) -> int @ tools/export_collision_meshes.py [L375]
│  ⤷ Uses: ImportError, ROOT, Sequence, argparse, argparse.ArgumentParser (+25 more)
├─ export_donut_collision(out_path: Path) -> None @ tools/export_collision_meshes.py [L69]
│  ⮕ Export the procedurally generated donut terrain to an OBJ mesh.
│  ⤷ Uses: List, Path, Tuple, bottom_left, bottom_right (+23 more)
├─ export_gltf_collision(source: Path, destination: Path) -> None @ tools/export_collision_meshes.py [L297]
│  ⤷ Uses: (world @ homogenous.T).T, List, Path, Tuple, ValueError (+35 more)
├─ export_heightmap_collision(out_path: Path) -> None @ tools/export_collision_meshes.py [L126]
│  ⮕ Export a heightmap terrain to an OBJ collision mesh.
│  ⤷ Uses: (ROOT / heightmap_path).resolve, FileNotFoundError, List, Path, ROOT (+32 more)
├─ main(argv: Sequence[str] | None) -> int @ tools/export_collision_meshes.py [L428]
│  ⮕ CLI-compatible entry point.
│  ⤷ Uses: Sequence, argv, cli
├─ generate_incline_heightmap() -> None @ tools/generate_incline_test.py [L31]
│  ⮕ Generate heightmap with progressive inclines.
│  ⤷ Uses: FLAT_LENGTH, INCLINE_ANGLES, RAMP_LENGTH, RESOLUTION, START_FLAT (+28 more)
├─ main() -> None @ tools/generate_incline_test.py [L125]
│  ⮕ Generate and save the incline test heightmap.
│  ⤷ Uses: FLAT_LENGTH, INCLINE_ANGLES, OUTPUT_DIR, OUTPUT_DIR.mkdir, OUTPUT_PATH (+17 more)

CLASSES:
--------------------------------------------------------------------------------

debug_gltf_model.GltfDiagnostics @ debug_gltf_model.py [L23]
  ⮕ Diagnostic tool for analyzing GLTF models.
  ├─ __init__(self) -> None @ debug_gltf_model.py [L26]
  ├─ analyze_model(self, filepath: str) -> None @ debug_gltf_model.py [L30]
  │  ⮕ Analyze a GLTF model and report issues.
  │  ⤷ Uses: Exception, Path, e, filepath, filepath.exists (+9 more)
  ├─ _analyze_basic_info(self, gltf) -> None @ debug_gltf_model.py [L60]
  │  ⮕ Analyze basic model information.
  │  ⤷ Uses: gltf, gltf.materials, gltf.meshes, gltf.nodes, gltf.scenes (+3 more)
  ├─ _analyze_scene_hierarchy(self, gltf) -> None @ debug_gltf_model.py [L73]
  │  ⮕ Analyze scene hierarchy and node transforms.
  │  ⤷ Uses: Matrix44, Matrix44.identity, gltf, gltf.scene, gltf.scenes (+7 more)
  ├─ _analyze_node_hierarchy(self, gltf, node_idx, parent_transform, depth) -> None @ debug_gltf_model.py [L94]
  │  ⮕ Recursively analyze node hierarchy.
  │  ⤷ Uses: child_idx, depth, getattr, gltf, gltf.meshes (+20 more)
  ├─ _analyze_transform(self, local_transform, world_transform, indent, node_name) -> None @ debug_gltf_model.py [L127]
  │  ⮕ Analyze transform matrices for issues.
  │  ⤷ Uses: abs, indent, issue, local_det, local_flat (+18 more)
  ├─ _get_node_transform(self, node) -> None @ debug_gltf_model.py [L166]
  │  ⮕ Extract transformation matrix from a GLTF node.
  │  ⤷ Uses: Matrix44, Matrix44.from_quaternion, Matrix44.from_scale, Matrix44.from_translation, Matrix44.identity (+16 more)
  ├─ _count_mesh_vertices(self, gltf, mesh) -> None @ debug_gltf_model.py [L197]
  │  ⮕ Estimate vertex count for a mesh.
  │  ⤷ Uses: accessor, accessor.count, gltf, gltf.accessors, hasattr (+6 more)
  ├─ _analyze_materials(self, gltf) -> None @ debug_gltf_model.py [L206]
  │  ⮕ Analyze materials and textures.
  │  ⤷ Uses: enumerate, getattr, gltf, gltf.materials, hasattr (+23 more)
  ├─ _print_summary(self) -> None @ debug_gltf_model.py [L260]
  │  ⮕ Print analysis summary.
  │  ⤷ Uses: any, has_transform_issues, issue, issue.lower, self.issues (+2 more)

examples.simple_scene.SimpleSceneDemo(mglw.WindowConfig) @ examples/simple_scene.py [L26]
  ⮕ Simple 3-cube scene
  ├─ __init__(self, **kwargs) -> None @ examples/simple_scene.py [L34]
  │  ⤷ Uses: Camera, CameraController, InputManager, Light, RenderPipeline (+16 more)
  ├─ _create_simple_scene(self) -> None @ examples/simple_scene.py [L67]
  │  ⮕ Create a simple 3-cube scene
  │  ⤷ Uses: SceneObject, Vector3, geometry, geometry.cube, self.scene (+1 more)
  ├─ on_update(self, time, frametime) -> None @ examples/simple_scene.py [L97]
  │  ⤷ Uses: frametime, self.camera, self.camera.update_vectors, self.input_manager, self.input_manager.update (+3 more)
  ├─ on_render(self, time, frametime) -> None @ examples/simple_scene.py [L102]
  │  ⤷ Uses: frametime, self.camera, self.lights, self.on_update, self.render_pipeline (+3 more)
  ├─ on_mouse_position_event(self, _x, _y, dx, dy) -> None @ examples/simple_scene.py [L106]
  │  ⤷ Uses: dx, dy, self.input_manager, self.input_manager.on_mouse_move
  ├─ on_key_event(self, key, action, modifiers) -> None @ examples/simple_scene.py [L109]
  │  ⤷ Uses: action, captured, key, keys, keys.ACTION_PRESS (+8 more)

main.Game(mglw.WindowConfig) @ main.py [L65]
  ⮕ Main game class
  ├─ __init__(self, **kwargs) -> None @ main.py [L74]
  │  ⤷ Uses: Camera, DEBUG_OVERLAY_ENABLED, DebugOverlay, GameState, GameState.MAIN_MENU (+54 more)
  ├─ _on_game_state_changed(self, old_state: GameState, new_state: GameState) -> None @ main.py [L198]
  │  ⮕ Called when game state changes.
  │  ⤷ Uses: GameState, GameState.MAIN_MENU, GameState.PAUSED, GameState.PLAYING, new_state (+1 more)
  ├─ _load_scene_from_menu(self, scene_id: str) -> bool @ main.py [L213]
  │  ⮕ Load a scene after selection from main menu.
  │  ⤷ Uses: BOTTOM_MENU_HEIGHT, CameraController, EditorHistory, Exception, GameState (+80 more)
  ├─ toggle_pause(self) -> None @ main.py [L334]
  │  ⮕ Toggle pause state.
  │  ⤷ Uses: self.game_state, self.game_state.is_paused, self.game_state.is_playing, self.game_state.pause, self.game_state.resume (+5 more)
  ├─ _spawn_player(self) -> PlayerCharacter | None @ main.py [L351]
  │  ⤷ Uses: PlayerCharacter, SceneObject, geometry, geometry.cube, placeholder (+8 more)
  ├─ _create_camera_rig(self) -> CameraRig @ main.py [L369]
  │  ⤷ Uses: CameraRig, FirstPersonRig, FreeFlyRig, self.camera, self.player
  ├─ toggle_debug_camera(self) -> None @ main.py [L374]
  │  ⤷ Uses: InputContext, InputContext.DEBUG_CAMERA, context_manager, context_manager.current_context, context_manager.pop_context (+12 more)
  ├─ toggle_editor_mode(self) -> None @ main.py [L390]
  │  ⮕ Toggle between GAMEPLAY and LEVEL_EDITOR contexts.
  │  ⤷ Uses: InputCommand, InputCommand.CAMERA_MOVE_BACKWARD, InputCommand.CAMERA_MOVE_DOWN, InputCommand.CAMERA_MOVE_FORWARD, InputCommand.CAMERA_MOVE_LEFT (+40 more)
  ├─ toggle_attribute_mode(self) -> None @ main.py [L458]
  │  ⮕ Toggle attribute editing mode (Tab key).
  │  ⤷ Uses: InputContext, InputContext.LEVEL_EDITOR, self.attribute_mode_active, self.camera_controller, self.input_manager (+9 more)
  ├─ on_update(self, time, frametime) -> None @ main.py [L501]
  │  ⮕ Update game logic.
  │  ⤷ Uses: InputContext, InputContext.LEVEL_EDITOR, SystemExit, action, animated_this_frame (+53 more)
  ├─ on_render(self, time, frametime) -> None @ main.py [L590]
  │  ⮕ Render a frame.
  │  ⤷ Uses: ASPECT_RATIO, InputContext, InputContext.LEVEL_EDITOR, active_tool, active_tool.preview (+50 more)
  ├─ on_mouse_position_event(self, _x: int, _y: int, dx: int, dy: int) -> None @ main.py [L684]
  │  ⮕ Handle mouse movement.
  │  ⤷ Uses: InputContext, InputContext.LEVEL_EDITOR, dx, dy, self.camera (+11 more)
  ├─ on_mouse_press_event(self, x: int, y: int, button: int) -> None @ main.py [L717]
  │  ⮕ Handle mouse button press.
  │  ⤷ Uses: InputContext, InputContext.LEVEL_EDITOR, button, imgui_button, selected (+21 more)
  ├─ on_mouse_release_event(self, x: int, y: int, button: int) -> None @ main.py [L765]
  │  ⮕ Handle mouse button release.
  │  ⤷ Uses: InputContext, InputContext.LEVEL_EDITOR, active_tool, active_tool.finish_move, active_tool.finish_rotate (+10 more)
  ├─ resize(self, width: int, height: int) -> None @ main.py [L795]
  │  ⮕ Handle window resize events by updating render targets.
  │  ⤷ Uses: height, self.render_pipeline, self.render_pipeline.resize, self.ui_manager, self.ui_manager.resize (+2 more)
  ├─ on_key_event(self, key, action, modifiers) -> None @ main.py [L801]
  │  ⮕ Handle keyboard events.
  │  ⤷ Uses: action, key, keys, keys.ACTION_PRESS, keys.ACTION_RELEASE (+5 more)

project_overview_generator.ClassInfo @ project_overview_generator.py [L30]
  ⮕ Represents a class.
  ⤖ Siblings: FunctionInfo, ProjectAnalyzer

project_overview_generator.FunctionInfo @ project_overview_generator.py [L17]
  ⮕ Represents a function or method.
  ⤖ Siblings: ClassInfo, ProjectAnalyzer

project_overview_generator.ProjectAnalyzer @ project_overview_generator.py [L42]
  ⮕ Analyzes Python project structure.
  ⤖ Siblings: ClassInfo, FunctionInfo
  ├─ __init__(self, project_path: str, include_line_numbers: bool) -> None @ project_overview_generator.py [L53]
  │  ⤷ Uses: ClassInfo, Dict, FunctionInfo, List, Path (+3 more)
  ├─ should_exclude_dir(self, dir_path: Path) -> bool @ project_overview_generator.py [L60]
  │  ⮕ Check if directory should be excluded.
  │  ⤷ Uses: Path, any, dir_name, dir_name.startswith, dir_path (+5 more)
  ├─ extract_docstring_summary(self, node: ast.AST) -> str @ project_overview_generator.py [L68]
  │  ⮕ Extract first line of docstring.
  │  ⤷ Uses: ast, ast.AST, ast.get_docstring, docstring, docstring.split (+4 more)
  ├─ get_type_annotation(self, annotation: Optional[ast.AST]) -> str @ project_overview_generator.py [L77]
  │  ⮕ Convert AST annotation to string.
  │  ⤷ Uses: Optional, annotation, ast, ast.AST, ast.unparse
  ├─ extract_function_signature(self, node: ast.FunctionDef, class_name: str) -> Tuple[str, str] @ project_overview_generator.py [L83]
  │  ⮕ Extract function signature and return type.
  │  ⤷ Uses: ', '.join, Tuple, arg, arg.annotation, arg.arg (+21 more)
  ├─ extract_related_objects(self, node: ast.AST) -> Set[str] @ project_overview_generator.py [L113]
  │  ⮕ Extract names of classes/functions referenced in the code.
  │  ⤷ Uses: Set, ast, ast.AST, ast.Attribute, ast.Call (+16 more)
  ├─ analyze_file(self, file_path: Path) -> None @ project_overview_generator.py [L144]
  │  ⮕ Analyze a single Python file.
  │  ⤷ Uses: Exception, Path, ast, ast.ClassDef, ast.FunctionDef (+22 more)
  ├─ is_module_level(self, node: ast.FunctionDef, tree: ast.Module) -> bool @ project_overview_generator.py [L173]
  │  ⮕ Check if function is at module level (not inside a class).
  │  ⤷ Uses: ast, ast.FunctionDef, ast.Module, node, tree (+1 more)
  ├─ get_module_name(self, file_path: Path) -> str @ project_overview_generator.py [L177]
  │  ⮕ Convert file path to module name.
  │  ⤷ Uses: '.'.join, Path, file_path, file_path.relative_to, parts (+4 more)
  ├─ process_class(self, node: ast.ClassDef, module_name: str, file_path: Path) -> None @ project_overview_generator.py [L188]
  │  ⮕ Process a class definition.
  │  ⤷ Uses: ClassInfo, Path, ast, ast.ClassDef, ast.FunctionDef (+22 more)
  ├─ process_method(self, node: ast.FunctionDef, class_namespace: str, file_path: Path) -> FunctionInfo @ project_overview_generator.py [L214]
  │  ⮕ Process a method definition.
  │  ⤷ Uses: FunctionInfo, Path, ast, ast.FunctionDef, class_namespace (+13 more)
  ├─ process_function(self, node: ast.FunctionDef, module_name: str, file_path: Path) -> None @ project_overview_generator.py [L232]
  │  ⮕ Process a module-level function.
  │  ⤷ Uses: FunctionInfo, Path, ast, ast.FunctionDef, file_path (+15 more)
  ├─ add_sibling_info(self) -> None @ project_overview_generator.py [L251]
  │  ⮕ Add sibling class information.
  │  ⤷ Uses: class_name, class_names, cn, full_namespace, module_name (+4 more)
  ├─ scan_project(self) -> None @ project_overview_generator.py [L261]
  │  ⮕ Scan the entire project.
  │  ⤷ Uses: Path, d, dirs, file, file.endswith (+10 more)
  ├─ generate_compact_overview(self) -> str @ project_overview_generator.py [L278]
  │  ⮕ Generate compact overview in tree format.
  │  ⤷ Uses: '\n'.join, c, c.methods, func, namespace (+14 more)
  ├─ format_function(self, func: FunctionInfo, indent: int) -> List[str] @ project_overview_generator.py [L314]
  │  ⮕ Format a function for output.
  │  ⤷ Uses: ', '.join, FunctionInfo, List, func, func.description (+15 more)
  ├─ format_class(self, cls: ClassInfo) -> List[str] @ project_overview_generator.py [L338]
  │  ⮕ Format a class for output.
  │  ⤷ Uses: ', '.join, ClassInfo, List, bases_str, cls.bases (+19 more)

src.gamelib.animation.animation.Animation @ src/gamelib/animation/animation.py [L148]
  ⮕ Complete animation with multiple channels.
  ⤖ Siblings: AnimationChannel, AnimationTarget, InterpolationType (+1 more)
  ├─ __init__(self, name: str) -> None @ src/gamelib/animation/animation.py [L156]
  │  ⮕ Initialize animation.
  │  ⤷ Uses: AnimationChannel, List, name
  ├─ add_channel(self, channel: AnimationChannel) -> None @ src/gamelib/animation/animation.py [L167]
  │  ⮕ Add an animation channel.
  │  ⤷ Uses: AnimationChannel, channel, channel.keyframes, kf, kf.time (+5 more)
  ├─ sample_all(self, time: float) -> dict @ src/gamelib/animation/animation.py [L176]
  │  ⮕ Sample all channels at a given time.
  │  ⤷ Uses: channel, channel.sample, channel.target_node_name, channel.target_property, key (+3 more)
  ├─ __repr__(self) -> None @ src/gamelib/animation/animation.py [L192]
  │  ⤷ Uses: self.channels, self.duration, self.name

src.gamelib.animation.animation.AnimationChannel @ src/gamelib/animation/animation.py [L50]
  ⮕ Animation channel targets a specific joint property.
  ⤖ Siblings: Animation, AnimationTarget, InterpolationType (+1 more)
  ├─ __init__(self, target_node_name: str, target_property: AnimationTarget, interpolation: InterpolationType) -> None @ src/gamelib/animation/animation.py [L57]
  │  ⮕ Initialize animation channel.
  │  ⤷ Uses: AnimationTarget, InterpolationType, InterpolationType.LINEAR, Keyframe, List (+3 more)
  ├─ add_keyframe(self, time: float, value) -> None @ src/gamelib/animation/animation.py [L76]
  │  ⮕ Add a keyframe to this channel.
  │  ⤷ Uses: Keyframe, self.keyframes, self.keyframes.append, time, value
  ├─ sample(self, time: float) -> None @ src/gamelib/animation/animation.py [L80]
  │  ⮕ Sample the animation at a given time.
  │  ⤷ Uses: InterpolationType, InterpolationType.CUBICSPLINE, InterpolationType.LINEAR, InterpolationType.STEP, i (+13 more)
  ├─ _interpolate_linear(self, k0: Keyframe, k1: Keyframe, time: float) -> None @ src/gamelib/animation/animation.py [L116]
  │  ⮕ Linear interpolation between two keyframes.
  │  ⤷ Uses: AnimationTarget, AnimationTarget.ROTATION, Keyframe, Quaternion, Quaternion.slerp (+15 more)
  ├─ __repr__(self) -> None @ src/gamelib/animation/animation.py [L144]
  │  ⤷ Uses: self.keyframes, self.target_node_name, self.target_property, self.target_property.value

src.gamelib.animation.animation.AnimationTarget(Enum) @ src/gamelib/animation/animation.py [L20]
  ⮕ Animation target properties.
  ⤖ Siblings: Animation, AnimationChannel, InterpolationType (+1 more)

src.gamelib.animation.animation.InterpolationType(Enum) @ src/gamelib/animation/animation.py [L13]
  ⮕ Animation interpolation types.
  ⤖ Siblings: Animation, AnimationChannel, AnimationTarget (+1 more)

src.gamelib.animation.animation.Keyframe @ src/gamelib/animation/animation.py [L28]
  ⮕ Single keyframe in an animation.
  ⤖ Siblings: Animation, AnimationChannel, AnimationTarget (+1 more)
  ├─ __init__(self, time: float, value) -> None @ src/gamelib/animation/animation.py [L35]
  │  ⮕ Initialize keyframe.
  │  ⤷ Uses: time, value
  ├─ __repr__(self) -> None @ src/gamelib/animation/animation.py [L46]
  │  ⤷ Uses: self.time, self.value

src.gamelib.animation.animation_controller.AnimationController @ src/gamelib/animation/animation_controller.py [L13]
  ⮕ Controls animation playback for a skeleton.
  ├─ __init__(self, skeleton: Skeleton) -> None @ src/gamelib/animation/animation_controller.py [L23]
  │  ⮕ Initialize animation controller.
  │  ⤷ Uses: Animation, Optional, Skeleton, skeleton
  ├─ play(self, animation: Animation, loop: bool) -> None @ src/gamelib/animation/animation_controller.py [L37]
  │  ⮕ Start playing an animation.
  │  ⤷ Uses: Animation, animation, loop
  ├─ pause(self) -> None @ src/gamelib/animation/animation_controller.py [L50]
  │  ⮕ Pause animation playback.
  ├─ resume(self) -> None @ src/gamelib/animation/animation_controller.py [L54]
  │  ⮕ Resume animation playback.
  ├─ stop(self) -> None @ src/gamelib/animation/animation_controller.py [L58]
  │  ⮕ Stop animation and reset to bind pose.
  │  ⤷ Uses: self.skeleton, self.skeleton.reset_animation
  ├─ update(self, delta_time: float) -> None @ src/gamelib/animation/animation_controller.py [L64]
  │  ⮕ Update animation playback.
  │  ⤷ Uses: delta_time, sampled_data, self._apply_animation_to_skeleton, self.current_animation, self.current_animation.duration (+5 more)
  ├─ _apply_animation_to_skeleton(self, sampled_data: dict) -> None @ src/gamelib/animation/animation_controller.py [L91]
  │  ⮕ Apply sampled animation data to skeleton joints.
  │  ⤷ Uses: AnimationTarget, AnimationTarget.ROTATION, AnimationTarget.SCALE, AnimationTarget.TRANSLATION, Matrix44 (+29 more)
  ├─ __repr__(self) -> None @ src/gamelib/animation/animation_controller.py [L156]
  │  ⤷ Uses: anim_name, self.current_animation, self.current_animation.name, self.current_time, self.is_playing

src.gamelib.animation.skeleton.Joint @ src/gamelib/animation/skeleton.py [L12]
  ⮕ Represents a single joint (bone) in a skeleton hierarchy.
  ⤖ Siblings: Skeleton
  ├─ __init__(self, name: str, index: int, parent: Optional['Joint']) -> None @ src/gamelib/animation/skeleton.py [L22]
  │  ⮕ Initialize a joint.
  │  ⤷ Uses: List, Matrix44, Matrix44.identity, Optional, Quaternion (+4 more)
  ├─ add_child(self, child: 'Joint') -> None @ src/gamelib/animation/skeleton.py [L58]
  │  ⮕ Add a child joint to this joint's hierarchy.
  │  ⤷ Uses: child, self.children, self.children.append
  ├─ get_animated_local_transform(self) -> Matrix44 @ src/gamelib/animation/skeleton.py [L63]
  │  ⮕ Get the current local transform (animated or bind pose).
  │  ⤷ Uses: Matrix44, self.animated_transform, self.local_transform
  ├─ __repr__(self) -> None @ src/gamelib/animation/skeleton.py [L69]
  │  ⤷ Uses: self.children, self.index, self.name

src.gamelib.animation.skeleton.Skeleton @ src/gamelib/animation/skeleton.py [L73]
  ⮕ Hierarchical skeleton structure.
  ⤖ Siblings: Joint
  ├─ __init__(self, name: str) -> None @ src/gamelib/animation/skeleton.py [L83]
  │  ⮕ Initialize skeleton.
  │  ⤷ Uses: Dict, Joint, List, name
  ├─ add_joint(self, joint: Joint) -> None @ src/gamelib/animation/skeleton.py [L95]
  │  ⮕ Add a joint to the skeleton.
  │  ⤷ Uses: Joint, joint, joint.name, joint.parent, self.joint_by_name (+4 more)
  ├─ get_joint(self, name: str) -> Optional[Joint] @ src/gamelib/animation/skeleton.py [L109]
  │  ⮕ Find a joint by name.
  │  ⤷ Uses: Joint, Optional, name, self.joint_by_name, self.joint_by_name.get
  ├─ update_world_transforms(self) -> None @ src/gamelib/animation/skeleton.py [L121]
  │  ⮕ Update all world transforms from local transforms.
  │  ⤷ Uses: Matrix44, Matrix44.identity, hasattr, parent_world, root (+3 more)
  ├─ _update_joint_recursive(self, joint: Joint, parent_world: Matrix44) -> None @ src/gamelib/animation/skeleton.py [L135]
  │  ⮕ Recursively update joint world transforms.
  │  ⤷ Uses: Joint, Matrix44, child, joint, joint.children (+5 more)
  ├─ reset_animation(self) -> None @ src/gamelib/animation/skeleton.py [L153]
  │  ⮕ Reset all joints to bind pose (clear animated transforms).
  │  ⤷ Uses: joint, self.joints
  ├─ __repr__(self) -> None @ src/gamelib/animation/skeleton.py [L158]
  │  ⤷ Uses: self.joints, self.name, self.root_joints

src.gamelib.animation.skin.Skin @ src/gamelib/animation/skin.py [L13]
  ⮕ Skin binds a skeleton to a mesh.
  ├─ __init__(self, name: str) -> None @ src/gamelib/animation/skin.py [L23]
  │  ⮕ Initialize skin.
  │  ⤷ Uses: Joint, List, Matrix44, name
  ├─ add_joint(self, joint: Joint, inverse_bind_matrix: Matrix44) -> None @ src/gamelib/animation/skin.py [L35]
  │  ⮕ Add a joint to the skin.
  │  ⤷ Uses: Joint, Matrix44, inverse_bind_matrix, joint, self.inverse_bind_matrices (+3 more)
  ├─ update_joint_matrices(self) -> None @ src/gamelib/animation/skin.py [L46]
  │  ⮕ Compute joint matrices for shader upload.
  │  ⤷ Uses: enumerate, i, inv_bind, joint, joint.world_transform (+6 more)
  ├─ get_joint_matrices_array(self) -> np.ndarray @ src/gamelib/animation/skin.py [L68]
  │  ⮕ Get joint matrices as a numpy array for shader upload.
  │  ⤷ Uses: m, m.astype, matrices, np, np.array (+2 more)
  ├─ __repr__(self) -> None @ src/gamelib/animation/skin.py [L82]
  │  ⤷ Uses: self.joints, self.name

src.gamelib.core.camera.Camera @ src/gamelib/core/camera.py [L22]
  ⮕ First-person camera with FPS-style controls.
  ├─ __init__(self, position: Vector3, target: Vector3, speed: float, sensitivity: float) -> None @ src/gamelib/core/camera.py [L33]
  │  ⮕ Initialize camera.
  │  ⤷ Uses: DEFAULT_CAMERA_SPEED, MOUSE_SENSITIVITY, Vector3, position, self._front (+5 more)
  ├─ update_vectors(self) -> None @ src/gamelib/core/camera.py [L70]
  │  ⮕ Update camera direction vectors based on yaw and pitch.
  │  ⤷ Uses: Vector3, front, np, np.cos, np.cross (+11 more)
  ├─ get_view_matrix(self) -> Matrix44 @ src/gamelib/core/camera.py [L95]
  │  ⮕ Get the camera view matrix.
  │  ⤷ Uses: Matrix44, Matrix44.look_at, Vector3, self.position, self.target
  ├─ get_projection_matrix(self, aspect_ratio: float, fov: float) -> Matrix44 @ src/gamelib/core/camera.py [L108]
  │  ⮕ Get the camera projection matrix.
  │  ⤷ Uses: DEFAULT_FOV, FAR_PLANE, Matrix44, Matrix44.perspective_projection, NEAR_PLANE (+2 more)
  ├─ get_frustum(self, aspect_ratio: float) -> None @ src/gamelib/core/camera.py [L126]
  │  ⮕ Get view frustum for culling.
  │  ⤷ Uses: Frustum, aspect_ratio, self.get_projection_matrix, self.get_view_matrix, view_proj
  ├─ get_forward(self) -> Vector3 @ src/gamelib/core/camera.py [L140]
  │  ⮕ Get camera forward vector
  │  ⤷ Uses: Vector3, self.position, self.target, vector, vector.normalise
  ├─ get_position(self) -> Vector3 @ src/gamelib/core/camera.py [L144]
  │  ⮕ Get camera position
  │  ⤷ Uses: Vector3, self.position
  ├─ get_front(self) -> Vector3 @ src/gamelib/core/camera.py [L148]
  │  ⮕ Get camera front vector
  │  ⤷ Uses: Vector3, self._front
  ├─ get_right(self) -> Vector3 @ src/gamelib/core/camera.py [L152]
  │  ⮕ Get camera right vector
  │  ⤷ Uses: Vector3, self._right
  ├─ get_up(self) -> Vector3 @ src/gamelib/core/camera.py [L156]
  │  ⮕ Get camera up vector
  │  ⤷ Uses: Vector3, self._up

src.gamelib.core.camera_rig.CameraRig(ABC) @ src/gamelib/core/camera_rig.py [L26]
  ⮕ Abstract base class for camera control rigs.
  ⤖ Siblings: FirstPersonRig, FreeFlyRig, ThirdPersonRig
  ├─ __init__(self, camera: 'Camera') -> None @ src/gamelib/core/camera_rig.py [L29]
  │  ⤷ Uses: camera
  ├─ enable(self) -> None @ src/gamelib/core/camera_rig.py [L33]
  │  ⮕ Enable the rig.
  ├─ disable(self) -> None @ src/gamelib/core/camera_rig.py [L38]
  │  ⮕ Disable the rig.
  ├─ update(self, delta_time: float) -> None @ src/gamelib/core/camera_rig.py [L44]
  │  ⮕ Update the rig state.
  │  ⤷ Uses: abstractmethod
  ├─ apply_look_input(self, dx: float, dy: float) -> None @ src/gamelib/core/camera_rig.py [L48]
  │  ⮕ Apply mouse look input.
  │  ⤷ Uses: abstractmethod

src.gamelib.core.camera_rig.FirstPersonRig(CameraRig) @ src/gamelib/core/camera_rig.py [L68]
  ⮕ Camera rig that positions the camera at the player character's head.
  ⤖ Siblings: CameraRig, FreeFlyRig, ThirdPersonRig
  ├─ __init__(self, camera: 'Camera', player: 'PlayerCharacter', eye_height: float) -> None @ src/gamelib/core/camera_rig.py [L71]
  │  ⤷ Uses: PLAYER_FIRST_PERSON_EYE_HEIGHT, camera, eye_height, player, super().__init__
  ├─ update(self, delta_time: float) -> None @ src/gamelib/core/camera_rig.py [L76]
  │  ⤷ Uses: Vector3, base_position, self.camera, self.camera.update_vectors, self.enabled (+3 more)
  ├─ apply_look_input(self, dx: float, dy: float) -> None @ src/gamelib/core/camera_rig.py [L84]
  │  ⤷ Uses: dx, dy, max, min, self.camera (+7 more)

src.gamelib.core.camera_rig.FreeFlyRig(CameraRig) @ src/gamelib/core/camera_rig.py [L52]
  ⮕ Camera rig that emulates the classic free-fly debug camera.
  ⤖ Siblings: CameraRig, FirstPersonRig, ThirdPersonRig
  ├─ update(self, delta_time: float) -> None @ src/gamelib/core/camera_rig.py [L55]
  │  ⤷ Uses: self.camera, self.camera.update_vectors, self.enabled
  ├─ apply_look_input(self, dx: float, dy: float) -> None @ src/gamelib/core/camera_rig.py [L59]
  │  ⤷ Uses: dx, dy, self.camera, self.camera.sensitivity, self.camera.update_vectors (+1 more)

src.gamelib.core.camera_rig.ThirdPersonRig(CameraRig) @ src/gamelib/core/camera_rig.py [L95]
  ⮕ Orbiting camera rig with collision avoidance for third-person view.
  ⤖ Siblings: CameraRig, FirstPersonRig, FreeFlyRig
  ├─ __init__(self, camera: 'Camera', player: 'PlayerCharacter', physics_world: 'PhysicsWorld', distance: float, height: float, spring: float) -> None @ src/gamelib/core/camera_rig.py [L98]
  │  ⤷ Uses: PLAYER_THIRD_PERSON_DISTANCE, PLAYER_THIRD_PERSON_HEIGHT, PLAYER_THIRD_PERSON_MAX_DISTANCE, PLAYER_THIRD_PERSON_MIN_DISTANCE, PLAYER_THIRD_PERSON_SPRING_STIFFNESS (+7 more)
  ├─ update(self, delta_time: float) -> None @ src/gamelib/core/camera_rig.py [L118]
  │  ⤷ Uses: Vector3, base_position, desired_camera_pos, final_position, forward (+26 more)
  ├─ apply_look_input(self, dx: float, dy: float) -> None @ src/gamelib/core/camera_rig.py [L149]
  │  ⤷ Uses: dx, dy, max, min, self.camera (+4 more)
  ├─ zoom(self, delta: float) -> None @ src/gamelib/core/camera_rig.py [L158]
  │  ⤷ Uses: delta, max, min, self.desired_distance, self.max_distance (+1 more)

src.gamelib.core.frustum.Frustum @ src/gamelib/core/frustum.py [L12]
  ⮕ View frustum defined by 6 planes.
  ├─ __init__(self, view_projection_matrix: Matrix44) -> None @ src/gamelib/core/frustum.py [L20]
  │  ⮕ Extract frustum planes from view-projection matrix.
  │  ⤷ Uses: Matrix44, self._extract_planes, view_projection_matrix
  ├─ _extract_planes(self, vp: Matrix44) -> list @ src/gamelib/core/frustum.py [L29]
  │  ⮕ Extract 6 frustum planes from view-projection matrix.
  │  ⤷ Uses: Matrix44, m, np, np.array, np.array(vp, dtype='f4').T (+4 more)
  ├─ _normalize_plane(self, plane: np.ndarray) -> np.ndarray @ src/gamelib/core/frustum.py [L68]
  │  ⮕ Normalize a plane equation.
  │  ⤷ Uses: length, np, np.linalg, np.linalg.norm, np.ndarray (+1 more)
  ├─ contains_sphere(self, center: Vector3, radius: float) -> bool @ src/gamelib/core/frustum.py [L83]
  │  ⮕ Test if a sphere is inside or intersects the frustum.
  │  ⤷ Uses: Vector3, center, center.x, center.y, center.z (+7 more)
  ├─ contains_point(self, point: Vector3) -> bool @ src/gamelib/core/frustum.py [L115]
  │  ⮕ Test if a point is inside the frustum.
  │  ⤷ Uses: Vector3, point, self.contains_sphere

src.gamelib.core.game_state.GameState(Enum) @ src/gamelib/core/game_state.py [L20]
  ⮕ Top-level game states.
  ⤖ Siblings: GameStateManager

src.gamelib.core.game_state.GameStateManager @ src/gamelib/core/game_state.py [L31]
  ⮕ Manages game state transitions and coordinates pause/resume behavior.
  ⤖ Siblings: GameState
  ├─ __init__(self, physics_world: Optional[PhysicsWorld]) -> None @ src/gamelib/core/game_state.py [L41]
  │  ⮕ Initialize game state manager.
  │  ⤷ Uses: Callable, GameState, GameState.MAIN_MENU, Optional, PhysicsWorld (+2 more)
  ├─ register_state_change_callback(self, callback: Callable[[GameState, GameState], None]) -> None @ src/gamelib/core/game_state.py [L55]
  │  ⮕ Register a callback for state changes.
  │  ⤷ Uses: Callable, GameState, callback, self._on_state_changed, self._on_state_changed.append
  ├─ _notify_state_changed(self, old_state: GameState, new_state: GameState) -> None @ src/gamelib/core/game_state.py [L68]
  │  ⮕ Notify all registered callbacks of state change.
  │  ⤷ Uses: Exception, GameState, callback, e, new_state (+2 more)
  ├─ set_state(self, new_state: GameState) -> None @ src/gamelib/core/game_state.py [L76]
  │  ⮕ Set game state directly (clears any intermediate states).
  │  ⤷ Uses: GameState, GameState.PAUSED, GameState.PLAYING, new_state, old_state (+4 more)
  ├─ pause(self) -> None @ src/gamelib/core/game_state.py [L99]
  │  ⮕ Pause the game (freeze physics and animations).
  │  ⤷ Uses: GameState, GameState.PAUSED, GameState.PLAYING, self.current_state, self.set_state
  ├─ resume(self) -> None @ src/gamelib/core/game_state.py [L105]
  │  ⮕ Resume the game (unfreeze physics and animations).
  │  ⤷ Uses: GameState, GameState.PAUSED, GameState.PLAYING, self.current_state, self.set_state
  ├─ start_game(self) -> None @ src/gamelib/core/game_state.py [L111]
  │  ⮕ Start gameplay from main menu.
  │  ⤷ Uses: GameState, GameState.MAIN_MENU, GameState.PLAYING, self.current_state, self.set_state
  ├─ return_to_main_menu(self) -> None @ src/gamelib/core/game_state.py [L117]
  │  ⮕ Return to main menu (unload scene).
  │  ⤷ Uses: GameState, GameState.MAIN_MENU, self.set_state
  ├─ begin_loading(self) -> None @ src/gamelib/core/game_state.py [L122]
  │  ⮕ Begin scene loading transition.
  │  ⤷ Uses: GameState, GameState.LOADING, self.set_state
  ├─ finish_loading(self) -> None @ src/gamelib/core/game_state.py [L126]
  │  ⮕ Finish scene loading and start gameplay.
  │  ⤷ Uses: GameState, GameState.PLAYING, self.set_state
  ├─ toggle_editor_mode(self) -> None @ src/gamelib/core/game_state.py [L130]
  │  ⮕ Toggle between gameplay and editor mode.
  │  ⤷ Uses: GameState, GameState.EDITOR, GameState.PLAYING, self.current_state, self.set_state
  ├─ _handle_pause(self) -> None @ src/gamelib/core/game_state.py [L137]
  │  ⮕ Handle pause logic (freeze physics, etc.).
  │  ⤷ Uses: self.physics_world, self.physics_world.pause
  ├─ _handle_resume(self) -> None @ src/gamelib/core/game_state.py [L142]
  │  ⮕ Handle resume logic (unfreeze physics, etc.).
  │  ⤷ Uses: self.physics_world, self.physics_world.resume
  ├─ get_state(self) -> GameState @ src/gamelib/core/game_state.py [L147]
  │  ⮕ Get current game state.
  │  ⤷ Uses: GameState, self.current_state
  ├─ is_playing(self) -> bool @ src/gamelib/core/game_state.py [L151]
  │  ⮕ Check if game is actively playing.
  │  ⤷ Uses: GameState, GameState.PLAYING, self.current_state
  ├─ is_paused(self) -> bool @ src/gamelib/core/game_state.py [L155]
  │  ⮕ Check if game is paused.
  │  ⤷ Uses: GameState, GameState.PAUSED, self.current_state
  ├─ is_in_menu(self) -> bool @ src/gamelib/core/game_state.py [L159]
  │  ⮕ Check if in main menu.
  │  ⤷ Uses: GameState, GameState.MAIN_MENU, self.current_state
  ├─ is_loading(self) -> bool @ src/gamelib/core/game_state.py [L163]
  │  ⮕ Check if loading scene.
  │  ⤷ Uses: GameState, GameState.LOADING, self.current_state
  ├─ is_editing(self) -> bool @ src/gamelib/core/game_state.py [L167]
  │  ⮕ Check if in editor mode.
  │  ⤷ Uses: GameState, GameState.EDITOR, self.current_state
  ├─ is_active(self) -> bool @ src/gamelib/core/game_state.py [L171]
  │  ⮕ Check if game is active (not in main menu or shutdown).
  │  ⤷ Uses: GameState, GameState.EDITOR, GameState.LOADING, GameState.PAUSED, GameState.PLAYING (+1 more)

src.gamelib.core.light.Light @ src/gamelib/core/light.py [L81]
  ⮕ Shadow-casting light source.
  ⤖ Siblings: LightDefinition
  ├─ __post_init__(self) -> None @ src/gamelib/core/light.py [L116]
  │  ⮕ Normalize configuration and validate parameters.
  │  ⤷ Uses: self.inner_cone_angle, self.light_type, self.outer_cone_angle
  ├─ get_light_type_id(self) -> int @ src/gamelib/core/light.py [L128]
  │  ⮕ Return integer identifier for shaders.
  │  ⤷ Uses: ValueError, self.light_type
  ├─ get_direction(self) -> Vector3 @ src/gamelib/core/light.py [L138]
  │  ⮕ Calculate a normalized direction vector for directional/spot lights.
  │  ⤷ Uses: Vector3, direction, length, np, np.linalg (+3 more)
  ├─ get_spot_cosines(self) -> tuple @ src/gamelib/core/light.py [L152]
  │  ⮕ Return cosine of inner/outer cone angles (for shader falloff).
  │  ⤷ Uses: inner_cos, math, math.cos, math.radians, outer_cos (+2 more)
  ├─ get_light_matrix(self, left: float, right: float, bottom: float, top: float, near: float, far: float) -> Matrix44 @ src/gamelib/core/light.py [L158]
  │  ⮕ Calculate light projection and view matrix.
  │  ⤷ Uses: LIGHT_ORTHO_BOTTOM, LIGHT_ORTHO_FAR, LIGHT_ORTHO_LEFT, LIGHT_ORTHO_NEAR, LIGHT_ORTHO_RIGHT (+18 more)
  ├─ should_render_shadow(self, intensity_threshold: float, throttle_frames: int) -> bool @ src/gamelib/core/light.py [L203]
  │  ⮕ Determine if this light's shadow should be rendered this frame.
  │  ⤷ Uses: intensity_threshold, self._frames_since_shadow_update, self.cast_shadows, self.intensity, self.is_shadow_dirty (+1 more)
  ├─ is_shadow_dirty(self) -> bool @ src/gamelib/core/light.py [L240]
  │  ⮕ Check if shadow map needs to be re-rendered.
  │  ⤷ Uses: last_pos_array, last_target_array, np, np.allclose, np.array (+22 more)
  ├─ mark_shadow_clean(self) -> None @ src/gamelib/core/light.py [L267]
  │  ⮕ Mark shadow map as up-to-date (called after rendering shadow).
  │  ⤷ Uses: self.position, self.position.copy, self.target, self.target.copy
  ├─ increment_shadow_age(self) -> None @ src/gamelib/core/light.py [L274]
  │  ⮕ Increment frames since last shadow update (for throttling).
  ├─ mark_shadow_dirty(self) -> None @ src/gamelib/core/light.py [L278]
  │  ⮕ Force shadow map to be re-rendered on next frame.
  ├─ animate_rotation(self, time: float, radius: float, height: float, speed: float) -> None @ src/gamelib/core/light.py [L282]
  │  ⮕ Animate light rotating around a center point.
  │  ⤷ Uses: angle, height, np, np.cos, np.sin (+5 more)
  ├─ set_position(self, x: float, y: float, z: float) -> None @ src/gamelib/core/light.py [L307]
  │  ⮕ Set light position and mark shadow dirty.
  │  ⤷ Uses: self.mark_shadow_dirty, self.position, x, y, z
  ├─ set_target(self, x: float, y: float, z: float) -> None @ src/gamelib/core/light.py [L314]
  │  ⮕ Set light target (look-at point) and mark shadow dirty.
  │  ⤷ Uses: self.mark_shadow_dirty, self.target, x, y, z
  ├─ set_color(self, r: float, g: float, b: float) -> None @ src/gamelib/core/light.py [L321]
  │  ⮕ Set light color.
  │  ⤷ Uses: b, g, r, self.color
  ├─ set_intensity(self, intensity: float) -> None @ src/gamelib/core/light.py [L332]
  │  ⮕ Set light intensity.
  │  ⤷ Uses: intensity

src.gamelib.core.light.LightDefinition @ src/gamelib/core/light.py [L39]
  ⮕ Data descriptor for defining lights in external scene assets.
  ⤖ Siblings: Light
  ├─ from_dict(cls, data: Dict[str, Any]) -> 'LightDefinition' @ src/gamelib/core/light.py [L51]
  │  ⮕ Create a light definition from JSON data.
  │  ⤷ Uses: Any, DEFAULT_LIGHT_COLOR, DEFAULT_LIGHT_INTENSITY, Dict, classmethod (+7 more)
  ├─ instantiate(self) -> 'Light' @ src/gamelib/core/light.py [L67]
  │  ⮕ Create a runtime light from this definition.
  │  ⤷ Uses: Light, Vector3, self.cast_shadows, self.color, self.intensity (+3 more)

src.gamelib.core.scene.Scene @ src/gamelib/core/scene.py [L215]
  ⮕ Manages all objects in the scene.
  ⤖ Siblings: SceneDefinition, SceneNodeDefinition, SceneObject
  ├─ __init__(self, ctx) -> None @ src/gamelib/core/scene.py [L222]
  │  ⮕ Initialize empty scene.
  │  ⤷ Uses: Dict, List, Optional, SceneObject, Skybox (+2 more)
  ├─ add_object(self, obj: SceneObject) -> None @ src/gamelib/core/scene.py [L234]
  │  ⮕ Add an object to the scene.
  │  ⤷ Uses: SceneObject, obj, self.objects, self.objects.append
  ├─ set_skybox(self, skybox: Optional[Skybox]) -> None @ src/gamelib/core/scene.py [L243]
  │  ⮕ Assign a skybox to the scene.
  │  ⤷ Uses: Optional, Skybox, skybox
  ├─ get_skybox(self) -> Optional[Skybox] @ src/gamelib/core/scene.py [L247]
  │  ⮕ Return the current skybox.
  │  ⤷ Uses: Optional, Skybox, self.skybox
  ├─ clear(self) -> None @ src/gamelib/core/scene.py [L251]
  │  ⮕ Remove all objects from the scene
  │  ⤷ Uses: self.objects, self.objects.clear
  ├─ create_default_scene(self) -> None @ src/gamelib/core/scene.py [L256]
  │  ⮕ Create the default scene with ground plane, mixed shapes, and GLTF models.
  │  ⤷ Uses: Exception, GltfLoader, PROJECT_ROOT, SceneObject, Vector3 (+23 more)
  ├─ render_all(self, program, frustum: Optional[Frustum], debug_label: str, textured_program, unlit_program, textured_skinned_program) -> None @ src/gamelib/core/scene.py [L473]
  │  ⮕ Render all objects in the scene.
  │  ⤷ Uses: ', '.join, DEBUG_FRUSTUM_CULLING, DEBUG_SHOW_CULLED_OBJECTS, Frustum, List (+62 more)
  ├─ get_object_count(self) -> int @ src/gamelib/core/scene.py [L614]
  │  ⮕ Get number of objects in scene
  │  ⤷ Uses: self.objects
  ├─ get_transparent_meshes(self) -> List[Tuple] @ src/gamelib/core/scene.py [L618]
  │  ⮕ Get all transparent meshes (alpha_mode == "BLEND") for forward rendering.
  │  ⤷ Uses: List, Tuple, full_transform, hasattr, mesh (+12 more)
  ├─ has_transparent_objects(self) -> bool @ src/gamelib/core/scene.py [L641]
  │  ⮕ Check if scene contains any transparent objects.
  │  ⤷ Uses: hasattr, mesh, mesh.material, mesh.material.alpha_mode, obj (+3 more)
  ├─ get_visible_objects(self, frustum: Frustum) -> List['SceneObject'] @ src/gamelib/core/scene.py [L655]
  │  ⮕ Get list of objects visible in frustum.
  │  ⤷ Uses: Frustum, List, frustum, obj, obj.is_visible (+1 more)
  ├─ to_dict(self, lights: Optional[List]) -> Dict[str, Any] @ src/gamelib/core/scene.py [L667]
  │  ⮕ Serialize scene to dictionary (for JSON export).
  │  ⤷ Uses: Any, Dict, List, Optional, Quaternion (+31 more)
  ├─ save_to_json(self, filepath: str, lights: Optional[List]) -> None @ src/gamelib/core/scene.py [L738]
  │  ⮕ Save scene to JSON file.
  │  ⤷ Uses: List, Optional, Path, f, filepath (+8 more)
  ├─ load_from_dict(self, scene_dict: Dict[str, Any]) -> Tuple[List, List] @ src/gamelib/core/scene.py [L761]
  │  ⮕ Load scene from dictionary.
  │  ⤷ Uses: Any, Dict, Exception, GltfLoader, List (+28 more)
  ├─ load_from_json(self, filepath: str) -> Tuple[List, List] @ src/gamelib/core/scene.py [L842]
  │  ⮕ Load scene from JSON file.
  │  ⤷ Uses: FileNotFoundError, List, Path, Tuple, f (+7 more)

src.gamelib.core.scene.SceneDefinition @ src/gamelib/core/scene.py [L92]
  ⮕ Container for scene-level metadata and node descriptors.
  ⤖ Siblings: Scene, SceneNodeDefinition, SceneObject
  ├─ from_dict(cls, data: Dict[str, Any]) -> 'SceneDefinition' @ src/gamelib/core/scene.py [L104]
  │  ⮕ Create a scene definition from JSON data.
  │  ⤷ Uses: Any, Dict, LightDefinition, LightDefinition.from_dict, SceneNodeDefinition (+16 more)

src.gamelib.core.scene.SceneNodeDefinition @ src/gamelib/core/scene.py [L42]
  ⮕ Data descriptor for a scene object loaded from JSON.
  ⤖ Siblings: Scene, SceneDefinition, SceneObject
  ├─ from_dict(cls, data: Dict[str, Any]) -> 'SceneNodeDefinition' @ src/gamelib/core/scene.py [L57]
  │  ⮕ Create a node definition from JSON data.
  │  ⤷ Uses: Any, Dict, ValueError, classmethod, data (+6 more)

src.gamelib.core.scene.SceneObject @ src/gamelib/core/scene.py [L134]
  ⮕ Represents a renderable object in the scene.
  ⤖ Siblings: Scene, SceneDefinition, SceneNodeDefinition
  ├─ __init__(self, geom, position: Vector3, color: Tuple[float, float, float], bounding_radius: float, name: str, rotation: Tuple[float, float, float] | Quaternion | None, scale: Tuple[float, float, float] | None) -> None @ src/gamelib/core/scene.py [L145]
  │  ⮕ Initialize scene object.
  │  ⤷ Uses: Quaternion, Quaternion.from_eulers, Tuple, Vector3, bounding_radius (+7 more)
  ├─ get_model_matrix(self) -> Matrix44 @ src/gamelib/core/scene.py [L178]
  │  ⮕ Get the model matrix for this object.
  │  ⤷ Uses: Matrix44, Matrix44.from_quaternion, Matrix44.from_scale, Matrix44.from_translation, matrix (+6 more)
  ├─ apply_physics_transform(self, position: Tuple[float, float, float], orientation: Tuple[float, float, float, float]) -> None @ src/gamelib/core/scene.py [L192]
  │  ⮕ Apply a transform received from the physics simulation.
  │  ⤷ Uses: Quaternion, Quaternion(orientation).normalised, Tuple, Vector3, orientation (+1 more)
  ├─ is_visible(self, frustum: Frustum) -> bool @ src/gamelib/core/scene.py [L202]
  │  ⮕ Test if this object is visible in the given frustum.
  │  ⤷ Uses: Frustum, frustum, frustum.contains_sphere, self.bounding_radius, self.position

src.gamelib.core.scene_manager.ActiveScene @ src/gamelib/core/scene_manager.py [L32]
  ⮕ Container representing the currently loaded scene.
  ⤖ Siblings: SceneManager, SceneMetadata

src.gamelib.core.scene_manager.SceneManager @ src/gamelib/core/scene_manager.py [L42]
  ⮕ Manage scene registration and synchronous loading.
  ⤖ Siblings: ActiveScene, SceneMetadata
  ├─ __init__(self, ctx, render_pipeline: RenderPipeline, physics_world: Optional[PhysicsWorld]) -> None @ src/gamelib/core/scene_manager.py [L45]
  │  ⤷ Uses: ActiveScene, Dict, Optional, Path, PhysicsWorld (+7 more)
  ├─ scene(self) -> Optional[Scene] @ src/gamelib/core/scene_manager.py [L63]
  │  ⤷ Uses: Optional, Scene, self._active, self._active.scene
  ├─ lights(self) -> list[Light] @ src/gamelib/core/scene_manager.py [L67]
  │  ⤷ Uses: Light, self._active, self._active.lights
  ├─ metadata(self) -> Dict[str, object] @ src/gamelib/core/scene_manager.py [L71]
  │  ⤷ Uses: Dict, object, self._active, self._active.metadata
  ├─ active_name(self) -> Optional[str] @ src/gamelib/core/scene_manager.py [L75]
  │  ⤷ Uses: Optional, self._active, self._active.name
  ├─ physics_bodies(self) -> List[PhysicsBodyHandle] @ src/gamelib/core/scene_manager.py [L79]
  │  ⤷ Uses: List, PhysicsBodyHandle, self._active, self._active.physics_bodies
  ├─ camera_position(self) -> Optional[Vector3] @ src/gamelib/core/scene_manager.py [L83]
  │  ⤷ Uses: Optional, Vector3, self._camera_position
  ├─ camera_target(self) -> Optional[Vector3] @ src/gamelib/core/scene_manager.py [L87]
  │  ⤷ Uses: Optional, Vector3, self._camera_target
  ├─ player_spawn_position(self) -> Optional[Vector3] @ src/gamelib/core/scene_manager.py [L91]
  │  ⤷ Uses: Optional, Vector3, self._player_spawn_position
  ├─ register_scene(self, name: str, path: Path | str, display_name: Optional[str], description: str, thumbnail_path: Optional[Path | str]) -> None @ src/gamelib/core/scene_manager.py [L94]
  │  ⮕ Register a scene.
  │  ⤷ Uses: Optional, PROJECT_ROOT, Path, SceneMetadata, description (+14 more)
  ├─ unregister_scene(self, name: str) -> None @ src/gamelib/core/scene_manager.py [L135]
  │  ⤷ Uses: name, self._registry, self._registry.pop, self._scene_metadata, self._scene_metadata.pop
  ├─ get_scene_metadata(self, name: str) -> Optional[SceneMetadata] @ src/gamelib/core/scene_manager.py [L139]
  │  ⮕ Get metadata for a registered scene.
  │  ⤷ Uses: Optional, SceneMetadata, name, self._scene_metadata, self._scene_metadata.get
  ├─ get_all_scenes(self) -> Dict[str, SceneMetadata] @ src/gamelib/core/scene_manager.py [L143]
  │  ⮕ Get all registered scenes with their metadata.
  │  ⤷ Uses: Dict, SceneMetadata, self._scene_metadata, self._scene_metadata.copy
  ├─ load(self, name: str, camera) -> SceneLoadResult @ src/gamelib/core/scene_manager.py [L147]
  │  ⤷ Uses: ActiveScene, KeyError, SceneLoadResult, camera, name (+16 more)
  ├─ _apply_camera_defaults(self, camera) -> None @ src/gamelib/core/scene_manager.py [L175]
  │  ⤷ Uses: Vector3, camera, camera.position, camera.update_vectors, direction (+8 more)
  ├─ clear(self) -> None @ src/gamelib/core/scene_manager.py [L185]
  │  ⤷ Uses: self.physics_world, self.physics_world.reset

src.gamelib.core.scene_manager.SceneMetadata @ src/gamelib/core/scene_manager.py [L21]
  ⮕ Metadata for a registered scene.
  ⤖ Siblings: ActiveScene, SceneManager

src.gamelib.core.skybox.Skybox @ src/gamelib/core/skybox.py [L14]
  ⮕ Container for skybox configuration and resources.
  ├─ set_rotation_from_euler(self, yaw: float, pitch: float, roll: float) -> None @ src/gamelib/core/skybox.py [L24]
  │  ⮕ Update the rotation matrix from Euler angles (degrees).
  │  ⤷ Uses: Matrix44, Matrix44.from_x_rotation, Matrix44.from_y_rotation, Matrix44.from_z_rotation, np (+10 more)
  ├─ rotation_matrix(self) -> Matrix44 @ src/gamelib/core/skybox.py [L36]
  │  ⮕ Return the current rotation matrix as numpy array.
  │  ⤷ Uses: Matrix44, self.rotation
  ├─ set_uniform(self, name: str, value: Any) -> None @ src/gamelib/core/skybox.py [L40]
  │  ⮕ Store a custom uniform value.
  │  ⤷ Uses: Any, name, self.uniforms, value
  ├─ get_uniform(self, name: str, default: Any) -> Any @ src/gamelib/core/skybox.py [L44]
  │  ⮕ Retrieve a previously stored uniform value.
  │  ⤷ Uses: Any, default, name, self.uniforms, self.uniforms.get
  ├─ solid_color(cls, ctx: moderngl.Context, color: Tuple[float, float, float], name: str) -> 'Skybox' @ src/gamelib/core/skybox.py [L49]
  │  ⮕ Create a skybox using a solid color for all faces.
  │  ⤷ Uses: Tuple, b, bytes, classmethod, color (+16 more)
  ├─ aurora(cls, ctx: moderngl.Context, name: str, aurora_direction: Tuple[float, float, float]) -> 'Skybox' @ src/gamelib/core/skybox.py [L70]
  │  ⮕ Create an aurora procedural skybox configuration.
  │  ⤷ Uses: Tuple, aurora_direction, base, base.uniforms, base.uniforms.update (+6 more)

src.gamelib.debug.debug_overlay.DebugOverlay @ src/gamelib/debug/debug_overlay.py [L32]
  ⮕ Manages debug overlay display.
  ├─ __init__(self, pipeline: 'RenderPipeline', visible: bool) -> None @ src/gamelib/debug/debug_overlay.py [L39]
  │  ⮕ Initialize debug overlay.
  │  ⤷ Uses: pipeline, pipeline.text_manager, visible
  ├─ visible(self) -> bool @ src/gamelib/debug/debug_overlay.py [L57]
  │  ⮕ Get visibility state.
  │  ⤷ Uses: self._visible
  ├─ visible(self, value: bool) -> None @ src/gamelib/debug/debug_overlay.py [L62]
  │  ⮕ Set visibility state.
  │  ⤷ Uses: self._visible, self.clear, value, visible, visible.setter
  ├─ toggle(self) -> None @ src/gamelib/debug/debug_overlay.py [L70]
  │  ⮕ Toggle visibility on/off.
  │  ⤷ Uses: self._visible
  ├─ update(self, fps: float, frametime: float, camera: Camera, lights: List[Light], scene: Optional[Scene], player: Optional['PlayerCharacter']) -> None @ src/gamelib/debug/debug_overlay.py [L74]
  │  ⮕ Update debug overlay with current stats.
  │  ⤷ Uses: Camera, Light, List, Optional, Scene (+16 more)
  ├─ _gather_stats(self, fps: float, avg_frametime: float, camera: Camera, lights: List[Light], scene: Optional[Scene], player: Optional['PlayerCharacter']) -> List[str] @ src/gamelib/debug/debug_overlay.py [L105]
  │  ⮕ Gather all statistics into formatted lines.
  │  ⤷ Uses: Camera, ENABLE_FRUSTUM_CULLING, Light, List, Optional (+40 more)
  ├─ _format_culling_stats(self, stats: Dict[str, Dict[str, object]]) -> List[str] @ src/gamelib/debug/debug_overlay.py [L173]
  │  ⤷ Uses: ', '.join, DEBUG_SHOW_CULLED_OBJECTS, Dict, List, culled (+14 more)
  ├─ _format_shadow_stats(self) -> List[str] @ src/gamelib/debug/debug_overlay.py [L199]
  │  ⤷ Uses: DEBUG_SHADOW_RENDERING, List, getattr, lines, lines.append (+10 more)
  ├─ _format_player_stats(self, player: 'PlayerCharacter') -> List[str] @ src/gamelib/debug/debug_overlay.py [L220]
  │  ⮕ Format player movement and physics debugging info.
  │  ⤷ Uses: List, PLAYER_AIR_ACCELERATION, PLAYER_AIR_CONTROL_FACTOR, PLAYER_AIR_DECELERATION, PLAYER_CAPSULE_LINEAR_DAMPING (+39 more)
  ├─ _update_display(self, lines: List[str]) -> None @ src/gamelib/debug/debug_overlay.py [L295]
  │  ⮕ Update text display with stats.
  │  ⤷ Uses: DEBUG_LINE_SPACING, DEBUG_OVERLAY_BACKGROUND_COLOR, DEBUG_OVERLAY_BACKGROUND_PADDING, DEBUG_POSITION, DEBUG_TEXT_COLOR (+20 more)
  ├─ clear(self) -> None @ src/gamelib/debug/debug_overlay.py [L325]
  │  ⮕ Clear all debug text.
  │  ⤷ Uses: self.text_ids, self.text_ids.clear, self.text_manager, self.text_manager.remove_text, text_id

src.gamelib.fractal_perlin.fractal_terrain.FractalTerrain @ src/gamelib/fractal_perlin/fractal_terrain.py [L81]
  ⮕ Generate fractal terrain using layered Perlin noise.
  ⤖ Siblings: PerlinNoise, TerrainErosion
  ├─ __init__(self, width: int, height: int, seed: int) -> None @ src/gamelib/fractal_perlin/fractal_terrain.py [L84]
  │  ⮕ Initialize fractal terrain generator.
  │  ⤷ Uses: PerlinNoise, height, seed, width
  ├─ generate_fractal_noise(self, octaves: int, persistence: float, lacunarity: float, scale: float, base_amplitude: float, ridge_noise: bool, ridge_offset: float) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L102]
  │  ⮕ Generate fractal noise by layering multiple octaves of Perlin noise.
  │  ⤷ Uses: amplitude, base_amplitude, frequency, lacunarity, max_value (+23 more)
  ├─ apply_domain_warping(self, warp_strength: float, warp_scale: float) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L165]
  │  ⮕ Apply domain warping to create more interesting, natural-looking features.
  │  ⤷ Uses: ValueError, indices_x, indices_y, np, np.arange (+19 more)

src.gamelib.fractal_perlin.fractal_terrain.PerlinNoise @ src/gamelib/fractal_perlin/fractal_terrain.py [L13]
  ⮕ Basic Perlin noise implementation for terrain generation.
  ⤖ Siblings: FractalTerrain, TerrainErosion
  ├─ __init__(self, seed: int) -> None @ src/gamelib/fractal_perlin/fractal_terrain.py [L16]
  │  ⮕ Initialize Perlin noise with a seed for reproducibility.
  │  ⤷ Uses: np, np.arange, np.random, np.random.seed, np.random.shuffle (+3 more)
  ├─ _fade(self, t: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L23]
  │  ⮕ Fade function for smooth interpolation.
  │  ⤷ Uses: np, np.ndarray, t
  ├─ _lerp(self, t: np.ndarray, a: np.ndarray, b: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L27]
  │  ⮕ Linear interpolation.
  │  ⤷ Uses: a, b, np, np.ndarray, t
  ├─ _grad(self, hash_val: int, x: float, y: float) -> float @ src/gamelib/fractal_perlin/fractal_terrain.py [L31]
  │  ⮕ Calculate gradient contribution.
  │  ⤷ Uses: h, hash_val, x, y
  ├─ noise(self, x: np.ndarray, y: np.ndarray) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L43]
  │  ⮕ Generate 2D Perlin noise.
  │  ⤷ Uses: aa, ab, ba, bb, g_aa (+27 more)

src.gamelib.fractal_perlin.fractal_terrain.TerrainErosion @ src/gamelib/fractal_perlin/fractal_terrain.py [L198]
  ⮕ Simulate erosion to create more realistic terrain.
  ⤖ Siblings: FractalTerrain, PerlinNoise
  ├─ __init__(self, terrain: np.ndarray) -> None @ src/gamelib/fractal_perlin/fractal_terrain.py [L201]
  │  ⮕ Initialize erosion simulator.
  │  ⤷ Uses: np, np.ndarray, terrain, terrain.copy, terrain.shape
  ├─ hydraulic_erosion(self, iterations: int, rain_amount: float, evaporation_rate: float, sediment_capacity: float, deposition_rate: float, erosion_rate: float, gravity: float, max_lifetime: int, inertia: float) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L212]
  │  ⮕ Simulate hydraulic erosion (water flowing and carving terrain).
  │  ⤷ Uses: amount_to_deposit, amount_to_erode, capacity, cell_x, cell_y (+47 more)
  ├─ thermal_erosion(self, iterations: int, talus_angle: float, erosion_rate: float) -> np.ndarray @ src/gamelib/fractal_perlin/fractal_terrain.py [L360]
  │  ⮕ Simulate thermal erosion (material falling due to gravity).
  │  ⤷ Uses: diff_down, diff_left, diff_right, diff_up, erosion_amount (+12 more)

src.gamelib.fractal_perlin.terrain_advanced.AdvancedTerrain @ src/gamelib/fractal_perlin/terrain_advanced.py [L143]
  ⮕ Advanced terrain generation with additional features.
  ⤖ Siblings: TerrainPresets, TerrainSampler
  ├─ __init__(self, width: int, height: int, seed: int) -> None @ src/gamelib/fractal_perlin/terrain_advanced.py [L146]
  │  ⤷ Uses: height, seed, width
  ├─ generate_with_preset(self, preset_name: str) -> np.ndarray @ src/gamelib/fractal_perlin/terrain_advanced.py [L152]
  │  ⮕ Generate terrain using a preset configuration.
  │  ⤷ Uses: TerrainPresets, TerrainPresets.get_preset, generate_mountain_terrain, np, np.ndarray (+6 more)
  ├─ add_terraces(self, num_levels: int, terrace_strength: float) -> np.ndarray @ src/gamelib/fractal_perlin/terrain_advanced.py [L165]
  │  ⮕ Add terracing effect to terrain (creates stepped/layered appearance).
  │  ⤷ Uses: ValueError, np, np.ndarray, np.round, num_levels (+3 more)
  ├─ add_rivers(self, num_rivers: int, river_depth: float, river_width: float) -> Tuple[np.ndarray, np.ndarray] @ src/gamelib/fractal_perlin/terrain_advanced.py [L185]
  │  ⮕ Carve river valleys into the terrain.
  │  ⤷ Uses: Tuple, ValueError, depth_factor, dist, dx (+30 more)
  ├─ apply_smoothing(self, kernel_size: int, iterations: int) -> np.ndarray @ src/gamelib/fractal_perlin/terrain_advanced.py [L258]
  │  ⮕ Apply Gaussian smoothing to terrain.
  │  ⤷ Uses: ValueError, gaussian_filter, iterations, kernel_size, np (+2 more)
  ├─ get_slope_map(self) -> np.ndarray @ src/gamelib/fractal_perlin/terrain_advanced.py [L276]
  │  ⮕ Calculate slope magnitude at each point.
  │  ⤷ Uses: ValueError, gx, gy, np, np.gradient (+4 more)
  ├─ classify_terrain_types(self, height_threshold: float, slope_threshold: float) -> Dict[str, np.ndarray] @ src/gamelib/fractal_perlin/terrain_advanced.py [L288]
  │  ⮕ Classify terrain into different types based on height and slope.
  │  ⤷ Uses: Dict, ValueError, classifications, height_threshold, np (+5 more)

src.gamelib.fractal_perlin.terrain_advanced.TerrainPresets @ src/gamelib/fractal_perlin/terrain_advanced.py [L11]
  ⮕ Preset parameter configurations for different terrain types.
  ⤖ Siblings: AdvancedTerrain, TerrainSampler
  ├─ get_preset(preset_name: str) -> Dict[str, Any] @ src/gamelib/fractal_perlin/terrain_advanced.py [L15]
  │  ⮕ Get preset parameters for terrain generation.
  │  ⤷ Uses: Any, Dict, ValueError, preset_name, presets (+2 more)

src.gamelib.fractal_perlin.terrain_advanced.TerrainSampler @ src/gamelib/fractal_perlin/terrain_advanced.py [L317]
  ⮕ Utilities for sampling and analyzing terrain.
  ⤖ Siblings: AdvancedTerrain, TerrainPresets
  ├─ get_height_at_point(terrain: np.ndarray, x: float, y: float) -> float @ src/gamelib/fractal_perlin/terrain_advanced.py [L321]
  │  ⮕ Get interpolated height at a specific point.
  │  ⤷ Uses: fx, fy, h0, h00, h01 (+18 more)
  ├─ get_normal_at_point(terrain: np.ndarray, x: float, y: float, scale: float) -> np.ndarray @ src/gamelib/fractal_perlin/terrain_advanced.py [L357]
  │  ⮕ Calculate surface normal at a point.
  │  ⤷ Uses: TerrainSampler, TerrainSampler.get_height_at_point, dx, dy, h_down (+19 more)

src.gamelib.gameplay.player_character.PlayerCharacter @ src/gamelib/gameplay/player_character.py [L46]
  ⮕ High-level gameplay representation of the player.
  ├─ __init__(self, model, physics_world: PhysicsWorld, initial_position: Optional[Vector3]) -> None @ src/gamelib/gameplay/player_character.py [L49]
  │  ⤷ Uses: Optional, PhysicsWorld, Vector3, initial_pos, initial_position (+4 more)
  ├─ _create_physics_body(self) -> PhysicsBodyHandle @ src/gamelib/gameplay/player_character.py [L92]
  │  ⤷ Uses: PLAYER_CAPSULE_ANGULAR_DAMPING, PLAYER_CAPSULE_FRICTION, PLAYER_CAPSULE_HEIGHT, PLAYER_CAPSULE_LINEAR_DAMPING, PLAYER_CAPSULE_MASS (+14 more)
  ├─ set_movement_intent(self, forward: float, right: float) -> None @ src/gamelib/gameplay/player_character.py [L116]
  │  ⤷ Uses: Vector3, abs, desired, desired.length, forward (+12 more)
  ├─ request_jump(self) -> None @ src/gamelib/gameplay/player_character.py [L133]
  ├─ set_sprint(self, active: bool) -> None @ src/gamelib/gameplay/player_character.py [L136]
  │  ⤷ Uses: active
  ├─ set_crouch(self, active: bool) -> None @ src/gamelib/gameplay/player_character.py [L139]
  │  ⤷ Uses: active
  ├─ toggle_walk(self) -> None @ src/gamelib/gameplay/player_character.py [L142]
  │  ⤷ Uses: self.is_walking
  ├─ set_yaw(self, yaw: float) -> None @ src/gamelib/gameplay/player_character.py [L145]
  │  ⤷ Uses: Quaternion, Quaternion.from_y_rotation, hasattr, math, math.radians (+8 more)
  ├─ get_position(self) -> Vector3 @ src/gamelib/gameplay/player_character.py [L155]
  │  ⤷ Uses: Vector3, self._position
  ├─ update(self, delta_time: float) -> None @ src/gamelib/gameplay/player_character.py [L162]
  │  ⤷ Uses: PLAYER_CCD_ENABLED, PLAYER_DEBUG_DRAW_CAPSULE, delta_time, new_pos, self._apply_ground_snapping (+13 more)
  ├─ update_post_physics(self, delta_time: float) -> None @ src/gamelib/gameplay/player_character.py [L191]
  │  ⤷ Uses: Quaternion, Quaternion.from_y_rotation, hasattr, math, math.radians (+8 more)
  ├─ _update_ground_state(self, delta_time: float) -> None @ src/gamelib/gameplay/player_character.py [L212]
  │  ⤷ Uses: PLAYER_CAPSULE_HEIGHT, PLAYER_CAPSULE_RADIUS, PLAYER_COYOTE_TIME, PLAYER_GROUND_CHECK_DISTANCE, PLAYER_MAX_SLOPE_ANGLE (+30 more)
  ├─ _process_jump(self) -> None @ src/gamelib/gameplay/player_character.py [L278]
  │  ⤷ Uses: PLAYER_JUMP_VELOCITY, self.can_jump, self.jump_requested, self.velocity
  ├─ _update_velocity(self, delta_time: float) -> None @ src/gamelib/gameplay/player_character.py [L287]
  │  ⤷ Uses: PLAYER_AIR_ACCELERATION, PLAYER_AIR_CONTROL_FACTOR, PLAYER_AIR_DECELERATION, PLAYER_CROUCH_SPEED, PLAYER_GROUND_ACCELERATION (+41 more)
  ├─ _draw_debug(self) -> None @ src/gamelib/gameplay/player_character.py [L352]
  │  ⤷ Uses: debug_info, self.get_position, self.is_grounded, self.slope_angle, self.velocity
  ├─ _swept_move(self, displacement: Vector3) -> None @ src/gamelib/gameplay/player_character.py [L361]
  │  ⮕ Perform swept collision detection to prevent tunneling.
  │  ⤷ Uses: PLAYER_CAPSULE_HEIGHT, PLAYER_CAPSULE_RADIUS, PLAYER_CCD_SWEEP_STEPS, PLAYER_COLLISION_MARGIN, Vector3 (+40 more)
  ├─ _resolve_collisions(self) -> None @ src/gamelib/gameplay/player_character.py [L477]
  │  ⮕ Resolve penetrations by pushing player out of colliding geometry.
  │  ⤷ Uses: PLAYER_DEPENETRATION_ITERATIONS, PLAYER_MIN_DEPENETRATION_DISTANCE, Vector3, contact, contact_normal (+14 more)
  ├─ _try_step_up(self, contact_normal: Vector3, penetration_depth: float) -> bool @ src/gamelib/gameplay/player_character.py [L534]
  │  ⮕ Try to step up over a small obstacle (stairs, curbs, etc.).
  │  ⤷ Uses: PLAYER_CAPSULE_HEIGHT, PLAYER_CAPSULE_RADIUS, PLAYER_COYOTE_TIME, PLAYER_GROUND_CHECK_DISTANCE, PLAYER_MIN_DEPENETRATION_DISTANCE (+45 more)
  ├─ _apply_ground_snapping(self) -> None @ src/gamelib/gameplay/player_character.py [L645]
  │  ⮕ Snap player down to ground when moving downhill.
  │  ⤷ Uses: PLAYER_CAPSULE_HEIGHT, PLAYER_CAPSULE_RADIUS, PLAYER_COYOTE_TIME, PLAYER_GROUND_CHECK_DISTANCE, PLAYER_GROUND_SNAP_DISTANCE (+40 more)
  ├─ get_eye_position(self) -> Vector3 @ src/gamelib/gameplay/player_character.py [L716]
  │  ⤷ Uses: PLAYER_FIRST_PERSON_EYE_HEIGHT, Vector3, self.get_position

src.gamelib.input.controllers.camera_controller.CameraController @ src/gamelib/input/controllers/camera_controller.py [L11]
  ⮕ Handles camera-related input commands.
  ├─ __init__(self, camera: Camera, input_manager: InputManager, rig: CameraRig | None) -> None @ src/gamelib/input/controllers/camera_controller.py [L14]
  │  ⤷ Uses: Camera, CameraRig, FreeFlyRig, InputManager, camera (+6 more)
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/camera_controller.py [L29]
  │  ⤷ Uses: InputCommand, InputCommand.CAMERA_LOOK, InputCommand.CAMERA_MOVE_BACKWARD, InputCommand.CAMERA_MOVE_DOWN, InputCommand.CAMERA_MOVE_FORWARD (+16 more)
  ├─ set_rig(self, rig: CameraRig) -> None @ src/gamelib/input/controllers/camera_controller.py [L43]
  │  ⤷ Uses: CameraRig, FreeFlyRig, isinstance, rig, self.rig (+2 more)
  ├─ enable_free_fly(self) -> None @ src/gamelib/input/controllers/camera_controller.py [L49]
  │  ⤷ Uses: FreeFlyRig, self.camera, self.set_rig
  ├─ disable_free_fly(self, rig: CameraRig) -> None @ src/gamelib/input/controllers/camera_controller.py [L52]
  │  ⤷ Uses: CameraRig, rig, self.set_rig
  ├─ move_forward(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L58]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera._front, self.camera.speed (+2 more)
  ├─ move_backward(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L64]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera._front, self.camera.speed (+2 more)
  ├─ move_left(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L70]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera._right, self.camera.speed (+2 more)
  ├─ move_right(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L76]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera._right, self.camera.speed (+2 more)
  ├─ move_up(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L82]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera.position, self.camera.speed (+2 more)
  ├─ move_down(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L88]
  │  ⤷ Uses: delta_time, movement, self.camera, self.camera.position, self.camera.speed (+2 more)
  ├─ rotate(self, dx: float, dy: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L94]
  │  ⤷ Uses: dx, dy, self.mouse_look_enabled, self.rig, self.rig.apply_look_input
  ├─ set_speed_boost(self, delta_time: float) -> None @ src/gamelib/input/controllers/camera_controller.py [L98]
  │  ⮕ Apply speed boost for camera movement while key is held.
  ├─ toggle_mouse_capture(self) -> None @ src/gamelib/input/controllers/camera_controller.py [L108]
  │  ⤷ Uses: self.input_manager, self.input_manager.toggle_mouse_capture

src.gamelib.input.controllers.game_controller.GameController @ src/gamelib/input/controllers/game_controller.py [L11]
  ⮕ Controller for game actions.
  ├─ __init__(self, input_manager: InputManager) -> None @ src/gamelib/input/controllers/game_controller.py [L24]
  │  ⮕ Initialize game controller.
  │  ⤷ Uses: InputManager, input_manager
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/game_controller.py [L36]
  │  ⮕ Register input handlers (placeholder)

src.gamelib.input.controllers.player_controller.PlayerController @ src/gamelib/input/controllers/player_controller.py [L8]
  ⮕ Translate input commands into `PlayerCharacter` actions.
  ├─ __init__(self, player, input_manager) -> None @ src/gamelib/input/controllers/player_controller.py [L11]
  │  ⤷ Uses: input_manager, player, self._register_handlers
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/player_controller.py [L20]
  │  ⤷ Uses: InputCommand, InputCommand.PLAYER_CROUCH, InputCommand.PLAYER_JUMP, InputCommand.PLAYER_MOVE_BACKWARD, InputCommand.PLAYER_MOVE_FORWARD (+14 more)
  ├─ _move_forward(self, delta_time: float) -> None @ src/gamelib/input/controllers/player_controller.py [L33]
  ├─ _move_backward(self, delta_time: float) -> None @ src/gamelib/input/controllers/player_controller.py [L36]
  ├─ _move_left(self, delta_time: float) -> None @ src/gamelib/input/controllers/player_controller.py [L39]
  ├─ _move_right(self, delta_time: float) -> None @ src/gamelib/input/controllers/player_controller.py [L42]
  ├─ _jump(self) -> None @ src/gamelib/input/controllers/player_controller.py [L45]
  │  ⤷ Uses: self.player, self.player.request_jump
  ├─ _toggle_sprint(self) -> None @ src/gamelib/input/controllers/player_controller.py [L48]
  │  ⤷ Uses: self.player, self.player.is_sprinting, self.player.set_sprint
  ├─ _toggle_crouch(self) -> None @ src/gamelib/input/controllers/player_controller.py [L51]
  │  ⤷ Uses: self.player, self.player.is_crouching, self.player.set_crouch
  ├─ _toggle_walk(self) -> None @ src/gamelib/input/controllers/player_controller.py [L54]
  │  ⤷ Uses: self.player, self.player.toggle_walk
  ├─ update(self) -> None @ src/gamelib/input/controllers/player_controller.py [L60]
  │  ⤷ Uses: forward, max, min, right, self.forward_axis (+3 more)

src.gamelib.input.controllers.rendering_controller.RenderingController @ src/gamelib/input/controllers/rendering_controller.py [L16]
  ⮕ Controller for rendering input commands.
  ├─ __init__(self, render_pipeline: RenderPipeline, input_manager: InputManager, debug_overlay: Optional['DebugOverlay']) -> None @ src/gamelib/input/controllers/rendering_controller.py [L28]
  │  ⮕ Initialize rendering controller.
  │  ⤷ Uses: InputManager, Optional, RenderPipeline, debug_overlay, input_manager (+2 more)
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/rendering_controller.py [L48]
  │  ⮕ Register input handlers with InputManager
  │  ⤷ Uses: InputCommand, InputCommand.SYSTEM_CYCLE_AA_MODE, InputCommand.SYSTEM_TOGGLE_DEBUG_OVERLAY, InputCommand.SYSTEM_TOGGLE_FXAA, InputCommand.SYSTEM_TOGGLE_LIGHT_GIZMOS (+12 more)
  ├─ toggle_debug_overlay(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L79]
  │  ⮕ Toggle debug overlay on/off.
  │  ⤷ Uses: self.debug_overlay, self.debug_overlay.toggle, self.debug_overlay.visible, status
  ├─ toggle_ssao(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L94]
  │  ⮕ Toggle SSAO on/off.
  │  ⤷ Uses: self.ssao_enabled, settings, status
  ├─ cycle_aa_mode(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L112]
  │  ⮕ Cycle through anti-aliasing modes.
  │  ⤷ Uses: self.render_pipeline, self.render_pipeline.cycle_aa_mode
  ├─ toggle_msaa(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L121]
  │  ⮕ Toggle MSAA on/off.
  │  ⤷ Uses: self.render_pipeline, self.render_pipeline.toggle_msaa
  ├─ toggle_fxaa(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L130]
  │  ⮕ Toggle FXAA on/off.
  │  ⤷ Uses: self.render_pipeline, self.render_pipeline.toggle_fxaa
  ├─ toggle_smaa(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L139]
  │  ⮕ Toggle SMAA on/off.
  │  ⤷ Uses: self.render_pipeline, self.render_pipeline.toggle_smaa
  ├─ toggle_light_gizmos(self, delta_time: float) -> None @ src/gamelib/input/controllers/rendering_controller.py [L148]
  │  ⮕ Toggle debug light gizmos.
  │  ⤷ Uses: self.render_pipeline, self.render_pipeline.toggle_light_gizmos

src.gamelib.input.controllers.tool_controller.ToolController @ src/gamelib/input/controllers/tool_controller.py [L20]
  ⮕ Handles tool-related input commands.
  ├─ __init__(self, tool_manager: 'ToolManager', input_manager: 'InputManager', camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/input/controllers/tool_controller.py [L30]
  │  ⮕ Initialize tool controller.
  │  ⤷ Uses: camera, input_manager, scene, self._register_handlers, tool_manager
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L60]
  │  ⮕ Register input command handlers.
  │  ⤷ Uses: InputCommand, InputCommand.EDITOR_DELETE, InputCommand.EDITOR_DUPLICATE, InputCommand.EDITOR_LOAD_SCENE, InputCommand.EDITOR_OPEN_BROWSER (+40 more)
  ├─ use_tool(self, delta_time: float) -> None @ src/gamelib/input/controllers/tool_controller.py [L99]
  │  ⮕ Use active tool's primary action.
  │  ⤷ Uses: self.camera, self.scene, self.tool_manager, self.tool_manager.active_tool, self.tool_manager.use_active_tool
  ├─ use_tool_secondary(self, delta_time: float) -> None @ src/gamelib/input/controllers/tool_controller.py [L110]
  │  ⮕ Use active tool's secondary action.
  │  ⤷ Uses: self.camera, self.scene, self.tool_manager, self.tool_manager.active_tool, self.tool_manager.use_active_tool_secondary
  ├─ reload_tool(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L121]
  │  ⮕ Reload active tool (for weapons).
  │  ⤷ Uses: hasattr, self.tool_manager, self.tool_manager.active_tool, self.tool_manager.active_tool.reload
  ├─ cancel_tool(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L126]
  │  ⮕ Cancel active tool action.
  │  ⤷ Uses: hasattr, self.tool_manager, self.tool_manager.active_tool, self.tool_manager.active_tool.cancel
  ├─ next_tool(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L137]
  │  ⮕ Switch to next tool in hotbar.
  │  ⤷ Uses: self.tool_manager, self.tool_manager.next_tool
  ├─ previous_tool(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L141]
  │  ⮕ Switch to previous tool in hotbar.
  │  ⤷ Uses: self.tool_manager, self.tool_manager.previous_tool
  ├─ select_hotbar(self, slot_number: int) -> None @ src/gamelib/input/controllers/tool_controller.py [L145]
  │  ⮕ Select hotbar slot by number (1-9).
  │  ⤷ Uses: self.tool_manager, self.tool_manager.equip_hotbar_slot, slot_index, slot_number
  ├─ undo(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L159]
  │  ⮕ Undo last editor action.
  │  ⤷ Uses: self.editor_history, self.editor_history.undo, self.scene
  ├─ redo(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L165]
  │  ⮕ Redo last undone action.
  │  ⤷ Uses: self.editor_history, self.editor_history.redo, self.scene
  ├─ save_scene(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L171]
  │  ⮕ Save current scene to JSON.
  │  ⤷ Uses: Exception, Path, datetime, datetime.now, datetime.now().strftime (+11 more)
  ├─ load_scene(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L194]
  │  ⮕ Load scene from JSON.
  ├─ toggle_grid(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L200]
  │  ⮕ Toggle grid snapping on/off.
  │  ⤷ Uses: active_tool, active_tool.grid_snap_enabled, hasattr, self.tool_manager, self.tool_manager.get_active_tool (+1 more)
  ├─ rotate_cw(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L208]
  │  ⮕ Rotate selected object clockwise (discrete 45° rotation).
  │  ⤷ Uses: active_tool, active_tool.rotate_selected, hasattr, self.tool_manager, self.tool_manager.get_active_tool
  ├─ rotate_ccw(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L214]
  │  ⮕ Rotate selected object counter-clockwise (discrete 45° rotation).
  │  ⤷ Uses: active_tool, active_tool.rotate_selected, hasattr, self.tool_manager, self.tool_manager.get_active_tool
  ├─ delete_selected(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L220]
  │  ⮕ Delete selected object.
  │  ⤷ Uses: active_tool, active_tool.delete_selected, hasattr, self.tool_manager, self.tool_manager.get_active_tool
  ├─ duplicate_selected(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L226]
  │  ⮕ Duplicate selected object.
  │  ⤷ Uses: active_tool, active_tool.duplicate_selected, hasattr, self.tool_manager, self.tool_manager.get_active_tool
  ├─ open_browser(self) -> None @ src/gamelib/input/controllers/tool_controller.py [L232]
  │  ⮕ Open model/asset browser.
  ├─ update(self, delta_time: float) -> None @ src/gamelib/input/controllers/tool_controller.py [L241]
  │  ⮕ Update tool controller.

src.gamelib.input.controllers.ui_controller.UIController @ src/gamelib/input/controllers/ui_controller.py [L11]
  ⮕ Controller for UI interactions.
  ├─ __init__(self, input_manager: InputManager) -> None @ src/gamelib/input/controllers/ui_controller.py [L24]
  │  ⮕ Initialize UI controller.
  │  ⤷ Uses: InputManager, input_manager
  ├─ _register_handlers(self) -> None @ src/gamelib/input/controllers/ui_controller.py [L36]
  │  ⮕ Register input handlers (placeholder)

src.gamelib.input.input_commands.InputCommand(Enum) @ src/gamelib/input/input_commands.py [L11]
  ⮕ All possible input commands in the game.
  ⤖ Siblings: InputType

src.gamelib.input.input_commands.InputType(Enum) @ src/gamelib/input/input_commands.py [L186]
  ⮕ Type of input command.
  ⤖ Siblings: InputCommand

src.gamelib.input.input_context.InputContext(Enum) @ src/gamelib/input/input_context.py [L13]
  ⮕ Different input contexts for the game.
  ⤖ Siblings: InputContextManager

src.gamelib.input.input_context.InputContextManager @ src/gamelib/input/input_context.py [L35]
  ⮕ Manages which input commands are available in each context.
  ⤖ Siblings: InputContext
  ├─ __init__(self) -> None @ src/gamelib/input/input_context.py [L45]
  │  ⮕ Initialize with GAMEPLAY as default context
  │  ⤷ Uses: InputContext, InputContext.GAMEPLAY, self._define_context_commands
  ├─ _define_context_commands(self) -> None @ src/gamelib/input/input_context.py [L53]
  │  ⮕ Define command availability for each context
  │  ⤷ Uses: InputCommand, InputCommand.BUILD_COPY, InputCommand.BUILD_MODE_TOGGLE, InputCommand.BUILD_PLACE, InputCommand.BUILD_REMOVE (+104 more)
  ├─ push_context(self, context: InputContext) -> None @ src/gamelib/input/input_context.py [L360]
  │  ⮕ Push a new input context onto the stack.
  │  ⤷ Uses: InputContext, context, self.context_stack, self.context_stack.append
  ├─ pop_context(self) -> InputContext @ src/gamelib/input/input_context.py [L372]
  │  ⮕ Pop the current context and return to previous.
  │  ⤷ Uses: InputContext, ValueError, popped, self.context_stack, self.context_stack.pop
  ├─ set_context(self, context: InputContext) -> None @ src/gamelib/input/input_context.py [L391]
  │  ⮕ Set context directly (clears stack).
  │  ⤷ Uses: InputContext, context
  ├─ is_command_allowed(self, command: InputCommand) -> bool @ src/gamelib/input/input_context.py [L403]
  │  ⮕ Check if a command is allowed in the current context.
  │  ⤷ Uses: InputCommand, allowed_commands, command, self.context_commands, self.context_commands.get (+1 more)
  ├─ get_allowed_commands(self) -> Set[InputCommand] @ src/gamelib/input/input_context.py [L416]
  │  ⮕ Get all commands allowed in current context.
  │  ⤷ Uses: InputCommand, Set, self.context_commands, self.context_commands.get, self.current_context
  ├─ get_current_context(self) -> InputContext @ src/gamelib/input/input_context.py [L425]
  │  ⮕ Get the current input context
  │  ⤷ Uses: InputContext, self.current_context
  ├─ get_context_stack(self) -> list @ src/gamelib/input/input_context.py [L429]
  │  ⮕ Get the full context stack (for debugging)
  │  ⤷ Uses: self.context_stack, self.context_stack.copy
  ├─ clear_stack(self) -> None @ src/gamelib/input/input_context.py [L433]
  │  ⮕ Clear stack and return to GAMEPLAY
  │  ⤷ Uses: InputContext, InputContext.GAMEPLAY

src.gamelib.input.input_manager.InputManager @ src/gamelib/input/input_manager.py [L15]
  ⮕ Central input coordinator.
  ├─ __init__(self, keys: BaseKeys, key_bindings: Optional[KeyBindings]) -> None @ src/gamelib/input/input_manager.py [L33]
  │  ⮕ Initialize input manager.
  │  ⤷ Uses: BaseKeys, Callable, Dict, InputCommand, InputContextManager (+5 more)
  ├─ register_handler(self, command: InputCommand, handler: Callable) -> None @ src/gamelib/input/input_manager.py [L56]
  │  ⮕ Register a handler for a command.
  │  ⤷ Uses: Callable, InputCommand, command, handler, self.handlers
  ├─ unregister_handler(self, command: InputCommand) -> None @ src/gamelib/input/input_manager.py [L72]
  │  ⮕ Unregister a handler for a command.
  │  ⤷ Uses: InputCommand, command, self.handlers
  ├─ on_key_press(self, key: int) -> None @ src/gamelib/input/input_manager.py [L82]
  │  ⮕ Handle key press event.
  │  ⤷ Uses: InputType, InputType.INSTANT, InputType.TOGGLE, command, command_type (+9 more)
  ├─ on_key_release(self, key: int) -> None @ src/gamelib/input/input_manager.py [L114]
  │  ⮕ Handle key release event.
  │  ⤷ Uses: InputCommand, InputCommand.CAMERA_SPEED_INCREASE, camera_controller, command, handler (+9 more)
  ├─ on_mouse_move(self, dx: float, dy: float) -> None @ src/gamelib/input/input_manager.py [L138]
  │  ⮕ Handle mouse movement event.
  │  ⤷ Uses: dx, dy, self.mouse_captured
  ├─ on_mouse_button_press(self, button: int) -> None @ src/gamelib/input/input_manager.py [L153]
  │  ⮕ Handle mouse button press.
  │  ⤷ Uses: button, command, self._execute_command, self.context_manager, self.context_manager.is_command_allowed (+2 more)
  ├─ on_mouse_button_release(self, button: int) -> None @ src/gamelib/input/input_manager.py [L172]
  │  ⮕ Handle mouse button release.
  ├─ update(self, delta_time: float) -> None @ src/gamelib/input/input_manager.py [L183]
  │  ⮕ Update continuous commands and dispatch accumulated input.
  │  ⤷ Uses: InputCommand, InputCommand.CAMERA_LOOK, InputType, InputType.CONTINUOUS, command (+13 more)
  ├─ _execute_command(self, command: InputCommand, delta_time: float) -> None @ src/gamelib/input/input_manager.py [L220]
  │  ⮕ Execute a command by calling its handler.
  │  ⤷ Uses: InputCommand, InputType, InputType.CONTINUOUS, TypeError, command (+5 more)
  ├─ _execute_axis_command(self, command: InputCommand, dx: float, dy: float) -> None @ src/gamelib/input/input_manager.py [L243]
  │  ⮕ Execute an axis command (like mouse look).
  │  ⤷ Uses: InputCommand, command, dx, dy, handler (+2 more)
  ├─ toggle_mouse_capture(self) -> bool @ src/gamelib/input/input_manager.py [L259]
  │  ⮕ Toggle mouse capture state.
  │  ⤷ Uses: self.mouse_captured
  ├─ set_mouse_capture(self, captured: bool) -> None @ src/gamelib/input/input_manager.py [L274]
  │  ⮕ Set mouse capture state explicitly.
  │  ⤷ Uses: captured
  ├─ push_context(self, context: InputContext) -> None @ src/gamelib/input/input_manager.py [L287]
  │  ⮕ Push a new input context (e.g., open menu).
  │  ⤷ Uses: InputContext, context, self.context_manager, self.context_manager.push_context
  ├─ pop_context(self) -> None @ src/gamelib/input/input_manager.py [L296]
  │  ⮕ Pop the current input context (e.g., close menu).
  │  ⤷ Uses: self.context_manager, self.context_manager.pop_context
  ├─ get_current_context(self) -> InputContext @ src/gamelib/input/input_manager.py [L305]
  │  ⮕ Get the current input context.
  │  ⤷ Uses: InputContext, self.context_manager, self.context_manager.get_current_context
  ├─ clear_all_input(self) -> None @ src/gamelib/input/input_manager.py [L314]
  │  ⮕ Clear all input state (pressed keys, mouse deltas).
  │  ⤷ Uses: self.pressed_keys, self.pressed_keys.clear

src.gamelib.input.key_bindings.KeyBindings @ src/gamelib/input/key_bindings.py [L14]
  ⮕ Manages key bindings with save/load support.
  ├─ __init__(self, keys: BaseKeys, config_path: Optional[Path]) -> None @ src/gamelib/input/key_bindings.py [L26]
  │  ⮕ Initialize key bindings.
  │  ⤷ Uses: BaseKeys, Dict, InputCommand, List, Optional (+6 more)
  ├─ _set_default_bindings(self) -> None @ src/gamelib/input/key_bindings.py [L52]
  │  ⮕ Set default key bindings
  │  ⤷ Uses: InputCommand, InputCommand.CAMERA_MOVE_DOWN, InputCommand.CAMERA_MOVE_UP, InputCommand.EDITOR_ATTRIBUTE_MODE, InputCommand.EDITOR_DELETE (+80 more)
  ├─ _update_command_to_keys(self) -> None @ src/gamelib/input/key_bindings.py [L138]
  │  ⮕ Update reverse lookup (command → keys)
  │  ⤷ Uses: button, command, key, self.command_to_keys, self.command_to_keys.clear (+5 more)
  ├─ get_command(self, key: int, is_mouse: bool) -> Optional[InputCommand] @ src/gamelib/input/key_bindings.py [L155]
  │  ⮕ Get command for a key or mouse button.
  │  ⤷ Uses: InputCommand, Optional, bindings, bindings.get, is_mouse (+3 more)
  ├─ get_keys_for_command(self, command: InputCommand) -> List[int] @ src/gamelib/input/key_bindings.py [L169]
  │  ⮕ Get all keys bound to a command.
  │  ⤷ Uses: InputCommand, List, command, self.command_to_keys, self.command_to_keys.get
  ├─ rebind_key(self, command: InputCommand, new_key: int, is_mouse: bool) -> None @ src/gamelib/input/key_bindings.py [L181]
  │  ⮕ Rebind a command to a new key.
  │  ⤷ Uses: InputCommand, bindings, bindings.items, cmd, command (+8 more)
  ├─ add_binding(self, command: InputCommand, key: int, is_mouse: bool) -> None @ src/gamelib/input/key_bindings.py [L206]
  │  ⮕ Add an additional key binding for a command.
  │  ⤷ Uses: InputCommand, bindings, command, is_mouse, key (+3 more)
  ├─ remove_binding(self, key: int, is_mouse: bool) -> None @ src/gamelib/input/key_bindings.py [L221]
  │  ⮕ Remove a key binding.
  │  ⤷ Uses: bindings, is_mouse, key, self._update_command_to_keys, self.keyboard_bindings (+1 more)
  ├─ clear_bindings_for_command(self, command: InputCommand) -> None @ src/gamelib/input/key_bindings.py [L234]
  │  ⮕ Clear all bindings for a command.
  │  ⤷ Uses: InputCommand, cmd, command, k, self._update_command_to_keys (+4 more)
  ├─ save_bindings(self) -> None @ src/gamelib/input/key_bindings.py [L255]
  │  ⮕ Save bindings to JSON file
  │  ⤷ Uses: data, f, json, json.dump, k (+8 more)
  ├─ load_bindings(self) -> bool @ src/gamelib/input/key_bindings.py [L265]
  │  ⮕ Load bindings from JSON file.
  │  ⤷ Uses: Exception, InputCommand, KeyError, ValueError, button (+21 more)
  ├─ reset_to_defaults(self) -> None @ src/gamelib/input/key_bindings.py [L308]
  │  ⮕ Reset all bindings to defaults
  │  ⤷ Uses: self._set_default_bindings, self._update_command_to_keys, self.keyboard_bindings, self.keyboard_bindings.clear, self.mouse_bindings (+1 more)
  ├─ export_bindings(self) -> Dict @ src/gamelib/input/key_bindings.py [L315]
  │  ⮕ Export bindings as a dictionary.
  │  ⤷ Uses: Dict, k, self.keyboard_bindings, self.keyboard_bindings.items, self.mouse_bindings (+3 more)
  ├─ import_bindings(self, data: Dict) -> None @ src/gamelib/input/key_bindings.py [L327]
  │  ⮕ Import bindings from a dictionary.
  │  ⤷ Uses: Dict, InputCommand, KeyError, ValueError, button (+12 more)

src.gamelib.input.object_selector.ObjectSelector @ src/gamelib/input/object_selector.py [L19]
  ⮕ Handles raycasting and object selection in the editor.
  ├─ __init__(self, raycast_range: float) -> None @ src/gamelib/input/object_selector.py [L22]
  │  ⮕ Initialize object selector.
  │  ⤷ Uses: Optional, SceneObject, raycast_range
  ├─ select_from_screen_position(self, camera: Camera, scene: Scene, screen_x: float, screen_y: float, screen_width: int, screen_height: int) -> Optional[SceneObject] @ src/gamelib/input/object_selector.py [L32]
  │  ⮕ Select object from screen position using raycasting.
  │  ⤷ Uses: Camera, Optional, Scene, SceneObject, camera (+21 more)
  ├─ _get_ray_direction(self, camera: Camera, ndc_x: float, ndc_y: float) -> Vector3 @ src/gamelib/input/object_selector.py [L87]
  │  ⮕ Get ray direction from camera through normalized device coordinates.
  │  ⤷ Uses: Camera, Vector3, aspect, camera, camera.front (+18 more)
  ├─ _raycast_sphere(self, ray_origin: Vector3, ray_direction: Vector3, sphere_center: Vector3, sphere_radius: float) -> Optional[float] @ src/gamelib/input/object_selector.py [L138]
  │  ⮕ Test ray intersection with sphere using geometric method.
  │  ⤷ Uses: (sphere_center - closest_point).magnitude, Optional, Vector3, closest_point, distance_to_center (+12 more)
  ├─ get_selected_object(self) -> Optional[SceneObject] @ src/gamelib/input/object_selector.py [L192]
  │  ⮕ Get currently selected object.
  │  ⤷ Uses: Optional, SceneObject, self.selected_object
  ├─ deselect(self) -> None @ src/gamelib/input/object_selector.py [L201]
  │  ⮕ Deselect current object.

src.gamelib.loaders.asset_library.Asset @ src/gamelib/loaders/asset_library.py [L14]
  ⮕ Represents a single asset in the library.
  ⤖ Siblings: AssetLibrary
  ├─ __init__(self, asset_id: str, name: str, category: str, path: str, thumbnail_path: Optional[str], icon_path: Optional[str], metadata: Optional[dict]) -> None @ src/gamelib/loaders/asset_library.py [L17]
  │  ⮕ Initialize asset.
  │  ⤷ Uses: Optional, asset_id, category, icon_path, metadata (+3 more)
  ├─ to_dict(self) -> dict @ src/gamelib/loaders/asset_library.py [L47]
  │  ⮕ Convert to dictionary for inspector.
  │  ⤷ Uses: self.category, self.icon_path, self.id, self.metadata, self.name (+2 more)

src.gamelib.loaders.asset_library.AssetLibrary @ src/gamelib/loaders/asset_library.py [L60]
  ⮕ Manages all available assets in the project.
  ⤖ Siblings: Asset
  ├─ __init__(self, project_root: Optional[Path]) -> None @ src/gamelib/loaders/asset_library.py [L63]
  │  ⮕ Initialize asset library.
  │  ⤷ Uses: Asset, Dict, List, Optional, Path (+2 more)
  ├─ scan_assets(self) -> None @ src/gamelib/loaders/asset_library.py [L79]
  │  ⮕ Scan project directories for assets.
  │  ⤷ Uses: self._scan_materials, self._scan_models
  ├─ _scan_models(self) -> None @ src/gamelib/loaders/asset_library.py [L87]
  │  ⮕ Scan assets/models/ directory for GLTF/GLB files.
  │  ⤷ Uses: Asset, asset, asset_id, asset_name, asset_path (+21 more)
  ├─ _scan_materials(self) -> None @ src/gamelib/loaders/asset_library.py [L154]
  │  ⮕ Scan assets/materials/ directory for material definitions.
  │  ⤷ Uses: Asset, Exception, asset, asset_id, asset_name (+14 more)
  ├─ add_asset(self, asset: Asset) -> None @ src/gamelib/loaders/asset_library.py [L181]
  │  ⮕ Add asset to library.
  │  ⤷ Uses: Asset, asset, asset.category, asset.id, self.assets (+2 more)
  ├─ get_assets_by_category(self, category: str) -> List[Asset] @ src/gamelib/loaders/asset_library.py [L194]
  │  ⮕ Get all assets in a category.
  │  ⤷ Uses: Asset, List, category, self.assets, self.assets.get
  ├─ get_asset_by_id(self, asset_id: str) -> Optional[Asset] @ src/gamelib/loaders/asset_library.py [L206]
  │  ⮕ Get asset by ID.
  │  ⤷ Uses: Asset, Optional, asset_id, self.assets_by_id, self.assets_by_id.get
  ├─ get_all_categories(self) -> List[str] @ src/gamelib/loaders/asset_library.py [L218]
  │  ⮕ Get all available categories.
  │  ⤷ Uses: List, cat, self.assets, self.assets.keys
  ├─ to_thumbnail_items(self) -> Dict[str, List[dict]] @ src/gamelib/loaders/asset_library.py [L227]
  │  ⮕ Convert to format suitable for ThumbnailMenu.
  │  ⤷ Uses: Dict, List, asset, asset.to_dict, assets (+4 more)

src.gamelib.loaders.gltf_loader.GltfLoader @ src/gamelib/loaders/gltf_loader.py [L25]
  ⮕ Loads GLTF/GLB models and converts them to ModernGL format.
  ├─ __init__(self, ctx: moderngl.Context) -> None @ src/gamelib/loaders/gltf_loader.py [L30]
  │  ⮕ Initialize loader.
  │  ⤷ Uses: ctx, moderngl, moderngl.Context
  ├─ load(self, filepath: str) -> Model @ src/gamelib/loaders/gltf_loader.py [L39]
  │  ⮕ Load a GLTF or GLB model.
  │  ⤷ Uses: AnimationController, Model, Path, animations, bounding_radius (+21 more)
  ├─ _parse_scene_hierarchy(self, gltf: pygltflib.GLTF2, materials: List[Material]) -> List[Mesh] @ src/gamelib/loaders/gltf_loader.py [L100]
  │  ⮕ Parse the GLTF scene hierarchy and extract meshes with transforms.
  │  ⤷ Uses: List, Material, Matrix44, Matrix44.identity, Mesh (+13 more)
  ├─ _process_node(self, gltf: pygltflib.GLTF2, node_idx: int, parent_transform: 'Matrix44', materials: List[Material], meshes: List[Mesh]) -> None @ src/gamelib/loaders/gltf_loader.py [L127]
  │  ⮕ Recursively process a node and its children, accumulating transforms.
  │  ⤷ Uses: List, Material, Mesh, Quaternion, Vector3 (+43 more)
  ├─ _get_node_transform(self, node) -> 'Matrix44' @ src/gamelib/loaders/gltf_loader.py [L206]
  │  ⮕ Extract transformation matrix from a GLTF node.
  │  ⤷ Uses: Matrix44, Matrix44.from_quaternion, Matrix44.from_scale, Matrix44.from_translation, Matrix44.identity (+16 more)
  ├─ _parse_meshes(self, gltf: pygltflib.GLTF2, materials: List[Material]) -> List[Mesh] @ src/gamelib/loaders/gltf_loader.py [L249]
  │  ⮕ Parse all meshes from GLTF.
  │  ⤷ Uses: List, Material, Mesh, enumerate, gltf (+21 more)
  ├─ _extract_vertex_data(self, gltf: pygltflib.GLTF2, primitive) -> Optional[Dict] @ src/gamelib/loaders/gltf_loader.py [L290]
  │  ⮕ Extract vertex data from a primitive.
  │  ⤷ Uses: Dict, Optional, colors, colors.reshape, colors.reshape(-1, 4)[:, :3].flatten (+29 more)
  ├─ _get_accessor_data(self, gltf: pygltflib.GLTF2, accessor_idx: int) -> Optional[np.ndarray] @ src/gamelib/loaders/gltf_loader.py [L385]
  │  ⮕ Get data from an accessor.
  │  ⤷ Uses: Optional, accessor, accessor.bufferView, accessor.byteOffset, accessor.componentType (+47 more)
  ├─ _generate_tangents(self, positions: np.ndarray, normals: np.ndarray, texcoords: np.ndarray) -> np.ndarray @ src/gamelib/loaders/gltf_loader.py [L467]
  │  ⮕ Generate tangents using Lengyel's method.
  │  ⤷ Uses: abs, duv1, duv2, edge1, edge2 (+37 more)
  ├─ _generate_flat_normals(self, positions: np.ndarray) -> np.ndarray @ src/gamelib/loaders/gltf_loader.py [L552]
  │  ⮕ Generate flat normals for a mesh (face normals).
  │  ⤷ Uses: edge1, edge2, i, norm, normal (+15 more)
  ├─ _create_vao(self, vertex_data: Dict) -> VAO @ src/gamelib/loaders/gltf_loader.py [L589]
  │  ⮕ Create a ModernGL VAO from vertex data.
  │  ⤷ Uses: Dict, VAO, attributes, base, colors (+42 more)
  ├─ _parse_materials(self, gltf: pygltflib.GLTF2, model_dir: Path) -> List[Material] @ src/gamelib/loaders/gltf_loader.py [L697]
  │  ⮕ Parse all materials from GLTF.
  │  ⤷ Uses: List, Material, Path, emissive_ext, enumerate (+42 more)
  ├─ _load_texture_transform(self, texture_info) -> Optional[TextureTransform] @ src/gamelib/loaders/gltf_loader.py [L810]
  │  ⮕ Load texture transform from GLTF texture info (KHR_texture_transform extension).
  │  ⤷ Uses: Optional, TextureTransform, hasattr, offset, rotation (+6 more)
  ├─ _load_texture(self, gltf: pygltflib.GLTF2, texture_idx: int, model_dir: Path) -> Optional[moderngl.Texture] @ src/gamelib/loaders/gltf_loader.py [L841]
  │  ⮕ Load a texture from GLTF.
  │  ⤷ Uses: BytesIO, Image, Image.open, Optional, Path (+40 more)
  ├─ _calculate_bounding_radius(self, gltf: pygltflib.GLTF2) -> float @ src/gamelib/loaders/gltf_loader.py [L900]
  │  ⮕ Calculate bounding sphere radius for the model with node transforms applied.
  │  ⤷ Uses: Matrix44, Matrix44.identity, gltf, gltf.scene, gltf.scenes (+10 more)
  ├─ _compute_node_world_transforms(self, gltf: pygltflib.GLTF2) -> Dict[int, Matrix44] @ src/gamelib/loaders/gltf_loader.py [L926]
  │  ⮕ Compute world transforms for all nodes, including non-joint ancestors.
  │  ⤷ Uses: Dict, Matrix44, Matrix44.identity, child_idx, gltf (+18 more)
  ├─ _calculate_node_bounding_radius(self, gltf: pygltflib.GLTF2, node_idx: int, parent_transform: 'Matrix44') -> float @ src/gamelib/loaders/gltf_loader.py [L966]
  │  ⮕ Recursively calculate bounding radius for a node and its children.
  │  ⤷ Uses: child_idx, child_radius, gltf, gltf.meshes, gltf.nodes (+31 more)
  ├─ _calculate_bounding_radius_simple(self, gltf: pygltflib.GLTF2) -> float @ src/gamelib/loaders/gltf_loader.py [L1020]
  │  ⮕ Simple bounding radius calculation without transforms (fallback).
  │  ⤷ Uses: gltf, gltf.meshes, max, max_radius, mesh (+16 more)
  ├─ _load_skeleton(self, gltf: pygltflib.GLTF2) -> Skeleton @ src/gamelib/loaders/gltf_loader.py [L1051]
  │  ⮕ Load skeleton from GLTF skins and nodes.
  │  ⤷ Uses: Dict, Joint, Matrix44, Matrix44.identity, Quaternion (+47 more)
  ├─ _load_skins(self, gltf: pygltflib.GLTF2, skeleton: Skeleton, meshes: List[Mesh]) -> List[Skin] @ src/gamelib/loaders/gltf_loader.py [L1133]
  │  ⮕ Load skins from GLTF.
  │  ⤷ Uses: List, Matrix44, Matrix44.identity, Mesh, Skeleton (+35 more)
  ├─ _load_animations(self, gltf: pygltflib.GLTF2, skeleton: Skeleton) -> Dict[str, Animation] @ src/gamelib/loaders/gltf_loader.py [L1199]
  │  ⮕ Load animations from GLTF.
  │  ⤷ Uses: Animation, AnimationChannel, AnimationTarget, AnimationTarget.ROTATION, AnimationTarget.SCALE (+52 more)

src.gamelib.loaders.material.Material @ src/gamelib/loaders/material.py [L12]
  ⮕ Represents a PBR material with textures.
  ├─ __init__(self, name: str) -> None @ src/gamelib/loaders/material.py [L23]
  │  ⮕ Initialize material.
  │  ⤷ Uses: Optional, TextureTransform, moderngl, moderngl.Texture, name
  ├─ has_base_color(self) -> bool @ src/gamelib/loaders/material.py [L68]
  │  ⮕ Check if material has base color texture
  │  ⤷ Uses: self.base_color_texture
  ├─ has_normal_map(self) -> bool @ src/gamelib/loaders/material.py [L72]
  │  ⮕ Check if material has normal map
  │  ⤷ Uses: self.normal_texture
  ├─ has_metallic_roughness(self) -> bool @ src/gamelib/loaders/material.py [L76]
  │  ⮕ Check if material has metallic/roughness texture
  │  ⤷ Uses: self.metallic_roughness_texture
  ├─ bind_textures(self, program: moderngl.Program) -> None @ src/gamelib/loaders/material.py [L80]
  │  ⮕ Bind all material textures to shader.
  │  ⤷ Uses: identity, identity.tobytes, mode_map, mode_map.get, moderngl (+41 more)
  ├─ release(self) -> None @ src/gamelib/loaders/material.py [L212]
  │  ⮕ Release GPU resources
  │  ⤷ Uses: self.base_color_texture, self.base_color_texture.release, self.emissive_texture, self.emissive_texture.release, self.metallic_roughness_texture (+5 more)

src.gamelib.loaders.model.Mesh @ src/gamelib/loaders/model.py [L12]
  ⮕ Single mesh with geometry and material.
  ⤖ Siblings: Model
  ├─ __init__(self, vao, material: Material, local_transform: Matrix44, node_name: str, parent_transform: Matrix44) -> None @ src/gamelib/loaders/model.py [L22]
  │  ⮕ Initialize mesh.
  │  ⤷ Uses: Material, Matrix44, Matrix44.identity, Quaternion, Vector3 (+6 more)
  ├─ render(self, program, parent_transform: Matrix44, ctx) -> None @ src/gamelib/loaders/model.py [L54]
  │  ⮕ Render this mesh with optional parent transform.
  │  ⤷ Uses: Matrix44, ctx, ctx.disable, ctx.enable, ctx.front_face (+16 more)

src.gamelib.loaders.model.Model @ src/gamelib/loaders/model.py [L92]
  ⮕ Represents a complete GLTF/GLB model with multiple meshes.
  ⤖ Siblings: Mesh
  ├─ __init__(self, meshes: List[Mesh], position: Vector3, rotation: Vector3, scale: Vector3, name: str) -> None @ src/gamelib/loaders/model.py [L99]
  │  ⮕ Initialize model.
  │  ⤷ Uses: Dict, List, Mesh, Optional, Quaternion (+6 more)
  ├─ get_model_matrix(self) -> Matrix44 @ src/gamelib/loaders/model.py [L137]
  │  ⮕ Get the model transformation matrix.
  │  ⤷ Uses: Matrix44, Matrix44.from_quaternion, Matrix44.from_scale, Matrix44.from_translation, Matrix44.from_x_rotation (+11 more)
  ├─ is_visible(self, frustum) -> bool @ src/gamelib/loaders/model.py [L164]
  │  ⮕ Test if this model is visible in the given frustum.
  │  ⤷ Uses: frustum, frustum.contains_sphere, self.bounding_radius, self.position
  ├─ apply_physics_transform(self, position, orientation) -> None @ src/gamelib/loaders/model.py [L176]
  │  ⮕ Apply a transform from the physics simulation to this model.
  │  ⤷ Uses: Quaternion, Quaternion(orientation).normalised, Vector3, orientation, position
  ├─ render(self, program, ctx) -> None @ src/gamelib/loaders/model.py [L187]
  │  ⮕ Render all meshes in this model.
  │  ⤷ Uses: ctx, mesh, mesh.render, parent_matrix, program (+2 more)
  ├─ update(self, delta_time: float) -> bool @ src/gamelib/loaders/model.py [L202]
  │  ⮕ Update model animations.
  │  ⤷ Uses: AnimationTarget, AnimationTarget.ROTATION, AnimationTarget.SCALE, AnimationTarget.TRANSLATION, Matrix44 (+43 more)
  ├─ play_animation(self, name: str, loop: bool) -> None @ src/gamelib/loaders/model.py [L315]
  │  ⮕ Play an animation by name.
  │  ⤷ Uses: loop, name, self.animation_controller, self.animation_controller.play, self.animations
  ├─ stop_animation(self) -> None @ src/gamelib/loaders/model.py [L337]
  │  ⮕ Stop current animation.
  │  ⤷ Uses: self.animation_controller, self.animation_controller.stop
  ├─ release(self) -> None @ src/gamelib/loaders/model.py [L342]
  │  ⮕ Release GPU resources
  │  ⤷ Uses: mesh, mesh.material, mesh.material.release, mesh.vao, mesh.vao.release (+1 more)

src.gamelib.loaders.scene_loader.SceneLoadResult @ src/gamelib/loaders/scene_loader.py [L23]
  ⮕ Result returned from :class:`SceneLoader`.
  ⤖ Siblings: SceneLoader

src.gamelib.loaders.scene_loader.SceneLoader @ src/gamelib/loaders/scene_loader.py [L35]
  ⮕ Load scenes from JSON descriptors.
  ⤖ Siblings: SceneLoadResult
  ├─ __init__(self, ctx, physics_world: Optional[PhysicsWorld]) -> None @ src/gamelib/loaders/scene_loader.py [L38]
  │  ⤷ Uses: GltfLoader, Optional, PhysicsWorld, ctx, physics_world
  ├─ load_scene(self, path: Path | str) -> SceneLoadResult @ src/gamelib/loaders/scene_loader.py [L43]
  │  ⮕ Load a scene from disk.
  │  ⤷ Uses: FileNotFoundError, List, PROJECT_ROOT, Path, PhysicsBodyHandle (+44 more)
  ├─ _attach_physics(self, instance, node: SceneNodeDefinition, base_path: Path) -> Optional[PhysicsBodyHandle] @ src/gamelib/loaders/scene_loader.py [L93]
  │  ⤷ Uses: Optional, Path, PhysicsBodyConfig, PhysicsBodyConfig.from_dict, PhysicsBodyHandle (+13 more)
  ├─ _instantiate_node(self, node: SceneNodeDefinition, base_path: Path) -> None @ src/gamelib/loaders/scene_loader.py [L119]
  │  ⤷ Uses: Path, SceneNodeDefinition, ValueError, base_path, node (+5 more)
  ├─ _create_primitive(self, node: SceneNodeDefinition, base_path: Path) -> None @ src/gamelib/loaders/scene_loader.py [L129]
  │  ⤷ Uses: (base_path / heightmap_path).resolve, FileNotFoundError, Path, SceneNodeDefinition, SceneObject (+62 more)
  ├─ _create_model(self, node: SceneNodeDefinition, base_path: Path) -> None @ src/gamelib/loaders/scene_loader.py [L234]
  │  ⤷ Uses: (PROJECT_ROOT / model_path).resolve, (base_path / node.mesh_path).resolve, FileNotFoundError, PROJECT_ROOT, Path (+36 more)

src.gamelib.loaders.skybox_loader.SkyboxLoader @ src/gamelib/loaders/skybox_loader.py [L14]
  ⮕ Load skybox cube maps from image files.
  ├─ __init__(self, ctx: moderngl.Context) -> None @ src/gamelib/loaders/skybox_loader.py [L27]
  │  ⤷ Uses: ctx, moderngl, moderngl.Context
  ├─ load_from_directory(self, directory: Path | str, name: str | None, vertical_flip: bool) -> Skybox @ src/gamelib/loaders/skybox_loader.py [L30]
  │  ⮕ Load a cube map using common face naming conventions.
  │  ⤷ Uses: ', '.join, FileNotFoundError, Image, Image.FLIP_TOP_BOTTOM, Image.open (+33 more)
  ├─ _find_face_file(self, directory: Path, candidates: Iterable[str]) -> Path | None @ src/gamelib/loaders/skybox_loader.py [L74]
  │  ⤷ Uses: Iterable, Path, candidate, candidate.exists, candidates (+4 more)

src.gamelib.loaders.texture_transform.TextureTransform @ src/gamelib/loaders/texture_transform.py [L12]
  ⮕ Texture coordinate transformation (KHR_texture_transform).
  ├─ __init__(self, offset: Tuple[float, float], scale: Tuple[float, float], rotation: float, texcoord: int) -> None @ src/gamelib/loaders/texture_transform.py [L22]
  │  ⮕ Initialize texture transform.
  │  ⤷ Uses: Tuple, np, np.array, offset, rotation (+3 more)
  ├─ _update_matrix(self) -> None @ src/gamelib/loaders/texture_transform.py [L46]
  │  ⮕ Compute the 3x3 transformation matrix from offset, scale, rotation.
  │  ⤷ Uses: c, np, np.array, np.cos, np.sin (+8 more)
  ├─ get_matrix(self) -> np.ndarray @ src/gamelib/loaders/texture_transform.py [L77]
  │  ⮕ Get the 3x3 transformation matrix.
  │  ⤷ Uses: np, np.ndarray, self.matrix
  ├─ update(self, offset: Tuple[float, float], scale: Tuple[float, float], rotation: float) -> None @ src/gamelib/loaders/texture_transform.py [L86]
  │  ⮕ Update transformation parameters and recompute matrix.
  │  ⤷ Uses: Tuple, np, np.array, offset, rotation (+2 more)
  ├─ identity() -> 'TextureTransform' @ src/gamelib/loaders/texture_transform.py [L110]
  │  ⮕ Create an identity transform (no transformation).
  │  ⤷ Uses: TextureTransform, staticmethod
  ├─ __repr__(self) -> None @ src/gamelib/loaders/texture_transform.py [L119]
  │  ⤷ Uses: self.offset, self.rotation, self.scale

src.gamelib.physics.collision_meshes.CollisionMeshError(RuntimeError) @ src/gamelib/physics/collision_meshes.py [L28]
  ⮕ Raised when collision mesh configuration is invalid.
  ⤖ Siblings: CollisionMeshResult

src.gamelib.physics.collision_meshes.CollisionMeshResult @ src/gamelib/physics/collision_meshes.py [L33]
  ⮕ Information about a resolved collision mesh.
  ⤖ Siblings: CollisionMeshError

src.gamelib.physics.physics_world.PhysicsBodyConfig @ src/gamelib/physics/physics_world.py [L70]
  ⮕ Configuration describing how to construct a rigid body.
  ⤖ Siblings: PhysicsBodyHandle, PhysicsWorld, PhysicsWorldSettings
  ├─ from_dict(cls, payload: Dict[str, Any]) -> 'PhysicsBodyConfig' @ src/gamelib/physics/physics_world.py [L103]
  │  ⮕ Create a configuration object from a JSON-compatible dictionary.
  │  ⤷ Uses: Any, Dict, TypeError, ValueError, classmethod (+10 more)
  ├─ is_dynamic(self) -> bool @ src/gamelib/physics/physics_world.py [L173]
  │  ⤷ Uses: self.body_type
  ├─ is_static(self) -> bool @ src/gamelib/physics/physics_world.py [L177]
  │  ⤷ Uses: self.body_type
  ├─ is_kinematic(self) -> bool @ src/gamelib/physics/physics_world.py [L181]
  │  ⤷ Uses: self.body_type
  ├─ resolved_mass(self) -> float @ src/gamelib/physics/physics_world.py [L184]
  │  ⮕ Return the effective mass for the rigid body.
  │  ⤷ Uses: self.is_dynamic, self.mass

src.gamelib.physics.physics_world.PhysicsBodyHandle @ src/gamelib/physics/physics_world.py [L193]
  ⮕ Handle returned when a rigid body is created.
  ⤖ Siblings: PhysicsBodyConfig, PhysicsWorld, PhysicsWorldSettings

src.gamelib.physics.physics_world.PhysicsWorld @ src/gamelib/physics/physics_world.py [L201]
  ⮕ Manage a PyBullet physics world and synchronize it with scene objects.
  ⤖ Siblings: PhysicsBodyConfig, PhysicsBodyHandle, PhysicsWorldSettings
  ├─ __init__(self, settings: Optional[PhysicsWorldSettings]) -> None @ src/gamelib/physics/physics_world.py [L204]
  │  ⤷ Uses: Dict, Optional, PhysicsBodyHandle, PhysicsWorldSettings, RuntimeError (+3 more)
  ├─ _configure_world(self) -> None @ src/gamelib/physics/physics_world.py [L221]
  │  ⮕ Apply global settings (gravity, time step, search paths).
  │  ⤷ Uses: path, pybullet_data, pybullet_data.getDataPath, self._client, self.settings (+3 more)
  ├─ shutdown(self) -> None @ src/gamelib/physics/physics_world.py [L232]
  │  ⮕ Disconnect the physics client.
  │  ⤷ Uses: self._client
  ├─ reset(self) -> None @ src/gamelib/physics/physics_world.py [L239]
  │  ⮕ Clear the world of all bodies.
  │  ⤷ Uses: self._angular_factor_overrides, self._angular_factor_overrides.clear, self._bodies, self._bodies.clear, self._client (+1 more)
  ├─ pause(self) -> None @ src/gamelib/physics/physics_world.py [L251]
  │  ⮕ Pause the physics simulation.
  ├─ resume(self) -> None @ src/gamelib/physics/physics_world.py [L255]
  │  ⮕ Resume the physics simulation.
  ├─ is_paused(self) -> bool @ src/gamelib/physics/physics_world.py [L259]
  │  ⮕ Check if physics simulation is paused.
  │  ⤷ Uses: self._paused
  ├─ set_gravity(self, gravity: Tuple[float, float, float]) -> None @ src/gamelib/physics/physics_world.py [L266]
  │  ⤷ Uses: Tuple, gravity, self._client, self.settings, self.settings.gravity (+1 more)
  ├─ set_time_step(self, fixed_time_step: float, max_substeps: Optional[int]) -> None @ src/gamelib/physics/physics_world.py [L270]
  │  ⤷ Uses: Optional, fixed_time_step, max_substeps, self._client, self.settings (+1 more)
  ├─ configure_from_metadata(self, metadata: Dict[str, Any]) -> None @ src/gamelib/physics/physics_world.py [L276]
  │  ⮕ Apply optional settings provided in scene metadata.
  │  ⤷ Uses: Any, Dict, gravity, max_substeps, metadata (+6 more)
  ├─ _populate_config_defaults(self, config: PhysicsBodyConfig, scene_object: Any, node_definition: Any, resource_base: Optional[Path]) -> None @ src/gamelib/physics/physics_world.py [L294]
  │  ⮕ Fill in missing collider information based on the scene definition.
  │  ⤷ Uses: (resource_base / mesh_path).resolve, Any, CollisionMeshError, FileNotFoundError, Optional (+37 more)
  ├─ _extract_scene_transform(self, scene_object: Any, config: PhysicsBodyConfig) -> Tuple[Tuple[float, float, float], Tuple[float, float, float, float]] @ src/gamelib/physics/physics_world.py [L376]
  │  ⮕ Return the position and orientation of the scene object.
  │  ⤷ Uses: Any, PhysicsBodyConfig, Quaternion, Tuple, Vector3 (+18 more)
  ├─ _create_collision_shape(self, config: PhysicsBodyConfig) -> int @ src/gamelib/physics/physics_world.py [L404]
  │  ⮕ Create a PyBullet collision shape based on the provided config.
  │  ⤷ Uses: (config.shape or 'box').lower, FileNotFoundError, NotImplementedError, PhysicsBodyConfig, Quaternion (+29 more)
  ├─ _pre_step(self) -> None @ src/gamelib/physics/physics_world.py [L492]
  │  ⮕ Synchronise kinematic bodies before stepping the world.
  │  ⤷ Uses: handle, handle.body_id, handle.config, handle.config.is_kinematic, handle.scene_object (+6 more)
  ├─ _apply_angular_factor_overrides(self) -> None @ src/gamelib/physics/physics_world.py [L505]
  │  ⮕ Manually clamp angular velocity for bodies without native support.
  │  ⤷ Uses: angular_velocity, body_id, constrained, factor, i (+5 more)
  ├─ step_simulation(self, delta_time: float) -> None @ src/gamelib/physics/physics_world.py [L528]
  │  ⮕ Advance the simulation and push transforms back to the scene.
  │  ⤷ Uses: delta_time, self._accumulator, self._apply_angular_factor_overrides, self._client, self._paused (+6 more)
  ├─ sync_to_scene(self) -> None @ src/gamelib/physics/physics_world.py [L545]
  │  ⮕ Write simulated transforms back to associated scene objects.
  │  ⤷ Uses: Quaternion, Vector3, handle, handle.body_id, handle.config (+10 more)
  ├─ create_body(self, scene_object: Any, config: PhysicsBodyConfig, node_definition: Any, resource_base: Optional[Path]) -> PhysicsBodyHandle @ src/gamelib/physics/physics_world.py [L567]
  │  ⮕ Create a rigid body and attach it to a scene object.
  │  ⤷ Uses: Any, Optional, Path, PhysicsBodyConfig, PhysicsBodyHandle (+38 more)
  ├─ remove_body(self, body_id: int) -> None @ src/gamelib/physics/physics_world.py [L647]
  │  ⮕ Remove a body from the simulation.
  │  ⤷ Uses: body_id, self._angular_factor_overrides, self._angular_factor_overrides.pop, self._bodies, self._bodies.pop (+1 more)
  ├─ get_body(self, body_id: int) -> Optional[PhysicsBodyHandle] @ src/gamelib/physics/physics_world.py [L655]
  │  ⤷ Uses: Optional, PhysicsBodyHandle, body_id, self._bodies, self._bodies.get
  ├─ get_body_position(self, body_id: int) -> Tuple[float, float, float] @ src/gamelib/physics/physics_world.py [L661]
  │  ⮕ Return the world-space position of a body.
  │  ⤷ Uses: Tuple, ValueError, body_id, position, self._bodies (+1 more)
  ├─ get_body_orientation(self, body_id: int) -> Tuple[float, float, float, float] @ src/gamelib/physics/physics_world.py [L669]
  │  ⮕ Return the world-space orientation (quaternion) of a body.
  │  ⤷ Uses: Tuple, ValueError, body_id, orientation, self._bodies (+1 more)
  ├─ set_body_transform(self, body_id: int, position: Optional[Tuple[float, float, float]], orientation: Optional[Tuple[float, float, float, float]]) -> None @ src/gamelib/physics/physics_world.py [L677]
  │  ⮕ Set the transform of a body, preserving unspecified components.
  │  ⤷ Uses: Optional, Tuple, ValueError, body_id, current_orientation (+5 more)
  ├─ get_linear_velocity(self, body_id: int) -> Tuple[float, float, float] @ src/gamelib/physics/physics_world.py [L698]
  │  ⮕ Return the linear velocity of a body.
  │  ⤷ Uses: Tuple, ValueError, body_id, linear_velocity, self._bodies (+1 more)
  ├─ set_linear_velocity(self, body_id: int, velocity: Tuple[float, float, float]) -> None @ src/gamelib/physics/physics_world.py [L706]
  │  ⮕ Set the linear velocity of a body.
  │  ⤷ Uses: Tuple, ValueError, angular_velocity, body_id, self._bodies (+2 more)
  ├─ get_angular_velocity(self, body_id: int) -> Tuple[float, float, float] @ src/gamelib/physics/physics_world.py [L719]
  │  ⮕ Return the angular velocity of a body.
  │  ⤷ Uses: Tuple, ValueError, angular_velocity, body_id, self._bodies (+1 more)
  ├─ set_angular_factor(self, body_id: int, factor: Tuple[float, float, float]) -> None @ src/gamelib/physics/physics_world.py [L727]
  │  ⮕ Lock or unlock angular axes for a body.
  │  ⤷ Uses: AttributeError, Tuple, TypeError, ValueError, angular_velocity (+9 more)
  ├─ apply_central_impulse(self, body_id: int, impulse: Tuple[float, float, float]) -> None @ src/gamelib/physics/physics_world.py [L768]
  │  ⮕ Apply an instantaneous impulse at the centre of mass.
  │  ⤷ Uses: Tuple, ValueError, body_id, impulse, self._bodies (+1 more)
  ├─ ray_test(self, from_pos: Tuple[float, float, float], to_pos: Tuple[float, float, float]) -> Optional[Dict[str, Any]] @ src/gamelib/physics/physics_world.py [L782]
  │  ⮕ Perform a ray test and return the closest hit, if any.
  │  ⤷ Uses: Any, Dict, Optional, Tuple, body_id (+4 more)
  ├─ ray_test_all(self, from_pos: Tuple[float, float, float], to_pos: Tuple[float, float, float]) -> List[Dict[str, Any]] @ src/gamelib/physics/physics_world.py [L804]
  │  ⮕ Perform a ray test and return all hits along the ray, sorted by distance.
  │  ⤷ Uses: Any, Dict, List, Tuple, body_id (+9 more)
  ├─ get_contacts(self, body_id: Optional[int], other_body_id: Optional[int]) -> List[Dict[str, Any]] @ src/gamelib/physics/physics_world.py [L834]
  │  ⮕ Return contact information for the current simulation step.
  │  ⤷ Uses: Any, Dict, List, Optional, body_a (+8 more)
  ├─ debug_snapshot(self) -> Dict[str, Any] @ src/gamelib/physics/physics_world.py [L882]
  │  ⮕ Return a snapshot of body transforms and active contacts for diagnostics.
  │  ⤷ Uses: Any, Dict, List, angular_velocity, bodies (+14 more)

src.gamelib.physics.physics_world.PhysicsWorldSettings @ src/gamelib/physics/physics_world.py [L59]
  ⮕ Settings that control global physics simulation behaviour.
  ⤖ Siblings: PhysicsBodyConfig, PhysicsBodyHandle, PhysicsWorld

src.gamelib.rendering.antialiasing_renderer.AAMode(Enum) @ src/gamelib/rendering/antialiasing_renderer.py [L14]
  ⮕ Anti-aliasing modes
  ⤖ Siblings: AntiAliasingRenderer

src.gamelib.rendering.antialiasing_renderer.AntiAliasingRenderer @ src/gamelib/rendering/antialiasing_renderer.py [L28]
  ⮕ Handles MSAA and FXAA anti-aliasing.
  ⤖ Siblings: AAMode
  ├─ __init__(self, ctx: moderngl.Context, size: Tuple[int, int], fxaa_program: moderngl.Program, smaa_edge_program: Optional[moderngl.Program], smaa_blend_program: Optional[moderngl.Program], smaa_neighborhood_program: Optional[moderngl.Program]) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L39]
  │  ⮕ Initialize anti-aliasing renderer.
  │  ⤷ Uses: AAMode, AAMode.OFF, Optional, SMAARenderer, Tuple (+13 more)
  ├─ _create_fullscreen_quad(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L96]
  │  ⮕ Create geometry for full-screen quad
  │  ⤷ Uses: indices, indices.tobytes, np, np.array, np.float32 (+9 more)
  ├─ _create_framebuffers(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L123]
  │  ⮕ Create framebuffers for current AA mode
  │  ⤷ Uses: h, self._cleanup_framebuffers, self.ctx, self.ctx.depth_texture, self.ctx.framebuffer (+14 more)
  ├─ _cleanup_framebuffers(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L162]
  │  ⮕ Clean up existing framebuffers
  │  ⤷ Uses: self.fxaa_color, self.fxaa_color.release, self.fxaa_fbo, self.fxaa_fbo.release, self.msaa_color (+15 more)
  ├─ set_aa_mode(self, mode: AAMode) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L196]
  │  ⮕ Set anti-aliasing mode.
  │  ⤷ Uses: AAMode, AAMode.FXAA, AAMode.MSAA_2X, AAMode.MSAA_2X_FXAA, AAMode.MSAA_2X_SMAA (+8 more)
  ├─ get_render_target(self) -> moderngl.Framebuffer @ src/gamelib/rendering/antialiasing_renderer.py [L250]
  │  ⮕ Get the framebuffer to render into.
  │  ⤷ Uses: moderngl, moderngl.Framebuffer, self.ctx, self.ctx.screen, self.fxaa_enabled (+4 more)
  ├─ resolve_and_present(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L265]
  │  ⮕ Resolve MSAA, apply post-processing (FXAA/SMAA), and present to screen.
  │  ⤷ Uses: self._apply_fxaa, self._apply_smaa, self._present_to_screen, self.ctx, self.ctx.copy_framebuffer (+9 more)
  ├─ _apply_fxaa(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L285]
  │  ⮕ Apply FXAA post-processing
  │  ⤷ Uses: h, self.fxaa_fbo, self.fxaa_fbo.clear, self.fxaa_fbo.use, self.fxaa_program (+6 more)
  ├─ _apply_smaa(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L303]
  │  ⮕ Apply SMAA post-processing
  │  ⤷ Uses: self.resolve_color, self.smaa_fbo, self.smaa_renderer, self.smaa_renderer.apply_smaa
  ├─ _present_to_screen(self, texture: moderngl.Texture) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L308]
  │  ⮕ Present a texture to the screen.
  │  ⤷ Uses: moderngl, moderngl.Texture, self.ctx, self.ctx.screen, self.ctx.screen.use (+5 more)
  ├─ cycle_aa_mode(self) -> AAMode @ src/gamelib/rendering/antialiasing_renderer.py [L328]
  │  ⮕ Cycle to the next AA mode.
  │  ⤷ Uses: AAMode, AAMode.FXAA, AAMode.MSAA_2X, AAMode.MSAA_4X, AAMode.MSAA_4X_FXAA (+12 more)
  ├─ toggle_msaa(self) -> bool @ src/gamelib/rendering/antialiasing_renderer.py [L351]
  │  ⮕ Toggle MSAA on/off.
  │  ⤷ Uses: AAMode, AAMode.FXAA, AAMode.MSAA_4X, AAMode.MSAA_4X_FXAA, AAMode.OFF (+3 more)
  ├─ toggle_fxaa(self) -> bool @ src/gamelib/rendering/antialiasing_renderer.py [L373]
  │  ⮕ Toggle FXAA on/off.
  │  ⤷ Uses: AAMode, AAMode.FXAA, AAMode.MSAA_2X, AAMode.MSAA_2X_FXAA, AAMode.MSAA_4X (+6 more)
  ├─ toggle_smaa(self) -> bool @ src/gamelib/rendering/antialiasing_renderer.py [L406]
  │  ⮕ Toggle SMAA on/off.
  │  ⤷ Uses: AAMode, AAMode.MSAA_2X, AAMode.MSAA_2X_SMAA, AAMode.MSAA_4X, AAMode.MSAA_4X_SMAA (+7 more)
  ├─ get_aa_mode_name(self) -> str @ src/gamelib/rendering/antialiasing_renderer.py [L442]
  │  ⮕ Get human-readable name for current AA mode.
  │  ⤷ Uses: AAMode, AAMode.FXAA, AAMode.MSAA_2X, AAMode.MSAA_2X_FXAA, AAMode.MSAA_2X_SMAA (+9 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L463]
  │  ⮕ Resize framebuffers for new screen size.
  │  ⤷ Uses: Tuple, self._create_framebuffers, self.size, size
  ├─ cleanup(self) -> None @ src/gamelib/rendering/antialiasing_renderer.py [L474]
  │  ⮕ Clean up resources
  │  ⤷ Uses: hasattr, self._cleanup_framebuffers, self.quad_ibo, self.quad_ibo.release, self.quad_vao (+5 more)

src.gamelib.rendering.bloom_renderer.BloomRenderer @ src/gamelib/rendering/bloom_renderer.py [L35]
  ⮕ Bloom post-processing pipeline.
  ⤖ Siblings: _BloomLevel
  ├─ __init__(self, ctx: moderngl.Context, size: Tuple[int, int], downsample_program: moderngl.Program, upsample_program: moderngl.Program, composite_program: moderngl.Program) -> None @ src/gamelib/rendering/bloom_renderer.py [L43]
  │  ⤷ Uses: List, Tuple, composite_program, ctx, downsample_program (+14 more)
  ├─ _create_fullscreen_quad(self) -> None @ src/gamelib/rendering/bloom_renderer.py [L77]
  │  ⮕ Create VAOs shared by all bloom passes.
  │  ⤷ Uses: np, np.array, self._quad_vbo, self.composite_program, self.ctx (+6 more)
  ├─ _allocate_levels(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/bloom_renderer.py [L106]
  │  ⮕ Allocate bloom mip-chain resources for the current viewport size.
  │  ⤷ Uses: Tuple, down_fbo, down_tex, height, max (+13 more)
  ├─ _release_levels(self) -> None @ src/gamelib/rendering/bloom_renderer.py [L143]
  │  ⮕ Release GPU resources for all mip levels.
  │  ⤷ Uses: level, level.downsample_fbo, level.downsample_fbo.release, level.downsample_tex, level.downsample_tex.release (+5 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/bloom_renderer.py [L153]
  │  ⮕ Resize bloom render targets when the viewport changes.
  │  ⤷ Uses: Tuple, self._allocate_levels, self.size, size
  ├─ apply(self, emissive_texture: moderngl.Texture, viewport: Tuple[int, int, int, int], target: moderngl.Framebuffer) -> None @ src/gamelib/rendering/bloom_renderer.py [L163]
  │  ⮕ Run the bloom pipeline and composite the blurred glow.
  │  ⤷ Uses: Tuple, current_source, current_source.use, emissive_texture, enumerate (+45 more)

src.gamelib.rendering.bloom_renderer._BloomLevel @ src/gamelib/rendering/bloom_renderer.py [L25]
  ⮕ Container storing textures and framebuffers for a bloom mip level.
  ⤖ Siblings: BloomRenderer

src.gamelib.rendering.gbuffer.GBuffer @ src/gamelib/rendering/gbuffer.py [L13]
  ⮕ G-Buffer for deferred rendering.
  ├─ __init__(self, ctx: moderngl.Context, size: Tuple[int, int]) -> None @ src/gamelib/rendering/gbuffer.py [L28]
  │  ⮕ Initialize G-Buffer.
  │  ⤷ Uses: Tuple, ctx, moderngl, moderngl.Context, self._create_framebuffer (+2 more)
  ├─ _create_textures(self) -> None @ src/gamelib/rendering/gbuffer.py [L46]
  │  ⮕ Create all G-Buffer textures.
  │  ⤷ Uses: moderngl, moderngl.NEAREST, self.albedo_texture, self.ctx, self.ctx.depth_texture (+7 more)
  ├─ _create_framebuffer(self) -> None @ src/gamelib/rendering/gbuffer.py [L95]
  │  ⮕ Create framebuffer with multiple color attachments (MRT).
  │  ⤷ Uses: self.albedo_texture, self.ctx, self.ctx.framebuffer, self.depth_texture, self.emissive_texture (+3 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/gbuffer.py [L108]
  │  ⮕ Resize G-Buffer (called on window resize).
  │  ⤷ Uses: Tuple, self._create_framebuffer, self._create_textures, self.albedo_texture, self.albedo_texture.release (+14 more)
  ├─ clear(self, color: Tuple[float, float, float, float]) -> None @ src/gamelib/rendering/gbuffer.py [L134]
  │  ⮕ Clear G-Buffer.
  │  ⤷ Uses: Tuple, color, self.fbo, self.fbo.clear
  ├─ use(self) -> None @ src/gamelib/rendering/gbuffer.py [L143]
  │  ⮕ Bind G-Buffer framebuffer for rendering (geometry pass).
  │  ⤷ Uses: self.fbo, self.fbo.use
  ├─ bind_textures(self, start_location: int) -> None @ src/gamelib/rendering/gbuffer.py [L147]
  │  ⮕ Bind all G-Buffer textures for reading (lighting pass).
  │  ⤷ Uses: self.albedo_texture, self.albedo_texture.use, self.depth_texture, self.depth_texture.use, self.emissive_texture (+8 more)
  ├─ release(self) -> None @ src/gamelib/rendering/gbuffer.py [L162]
  │  ⮕ Release all G-Buffer resources.
  │  ⤷ Uses: self.albedo_texture, self.albedo_texture.release, self.depth_texture, self.depth_texture.release, self.emissive_texture (+9 more)
  ├─ viewport(self) -> Tuple[int, int, int, int] @ src/gamelib/rendering/gbuffer.py [L173]
  │  ⮕ Get viewport tuple for this buffer.
  │  ⤷ Uses: Tuple, self.height, self.width

src.gamelib.rendering.geometry_renderer.GeometryRenderer @ src/gamelib/rendering/geometry_renderer.py [L15]
  ⮕ Renders scene geometry to G-Buffer.
  ├─ __init__(self, ctx: moderngl.Context, geometry_program: moderngl.Program, geometry_textured_program: moderngl.Program, unlit_program: moderngl.Program, geometry_textured_skinned_program: moderngl.Program) -> None @ src/gamelib/rendering/geometry_renderer.py [L24]
  │  ⮕ Initialize geometry renderer.
  │  ⤷ Uses: ctx, geometry_program, geometry_textured_program, geometry_textured_skinned_program, moderngl (+3 more)
  ├─ render(self, scene: Scene, camera: Camera, gbuffer: GBuffer) -> None @ src/gamelib/rendering/geometry_renderer.py [L44]
  │  ⮕ Render scene geometry to G-Buffer with frustum culling.
  │  ⤷ Uses: Camera, ENABLE_FRUSTUM_CULLING, GBuffer, Scene, aspect_ratio (+24 more)
  ├─ _set_camera_uniforms(self, camera: Camera, viewport_size: Tuple[int, int]) -> None @ src/gamelib/rendering/geometry_renderer.py [L92]
  │  ⮕ Set camera-related shader uniforms.
  │  ⤷ Uses: Camera, Tuple, aspect_ratio, camera, camera.get_projection_matrix (+13 more)
  ├─ _set_camera_uniforms_textured(self, camera: Camera, viewport_size: Tuple[int, int]) -> None @ src/gamelib/rendering/geometry_renderer.py [L112]
  │  ⮕ Set camera-related shader uniforms for textured program.
  │  ⤷ Uses: Camera, Tuple, aspect_ratio, camera, camera.get_projection_matrix (+13 more)
  ├─ _set_camera_uniforms_unlit(self, camera: Camera, viewport_size: Tuple[int, int]) -> None @ src/gamelib/rendering/geometry_renderer.py [L132]
  │  ⮕ Set camera-related shader uniforms for unlit program.
  │  ⤷ Uses: Camera, Tuple, aspect_ratio, camera, camera.get_projection_matrix (+13 more)
  ├─ _set_camera_uniforms_textured_skinned(self, camera: Camera, viewport_size: Tuple[int, int]) -> None @ src/gamelib/rendering/geometry_renderer.py [L152]
  │  ⮕ Set camera-related shader uniforms for skinned program.
  │  ⤷ Uses: Camera, Tuple, aspect_ratio, camera, camera.get_projection_matrix (+13 more)

src.gamelib.rendering.icon_manager.IconDrawData @ src/gamelib/rendering/icon_manager.py [L34]
  ⮕ Resolved draw information for a single icon.
  ⤖ Siblings: IconManager, _IconInstance, _IconResource

src.gamelib.rendering.icon_manager.IconManager @ src/gamelib/rendering/icon_manager.py [L43]
  ⮕ Loads and manages HUD/UI icons as textured quads.
  ⤖ Siblings: IconDrawData, _IconInstance, _IconResource
  ├─ __init__(self, ctx: moderngl.Context) -> None @ src/gamelib/rendering/icon_manager.py [L46]
  │  ⤷ Uses: Dict, ctx, moderngl, moderngl.Context
  ├─ _get_or_create_resource(self, image_path: Path) -> _IconResource @ src/gamelib/rendering/icon_manager.py [L55]
  │  ⤷ Uses: FileNotFoundError, Image, Image.open, Path, image (+16 more)
  ├─ add_icon(self, image_path: Path, position: Tuple[float, float], size: Optional[Tuple[float, float]], color: Tuple[float, float, float, float], layer: str) -> int @ src/gamelib/rendering/icon_manager.py [L78]
  │  ⤷ Uses: Optional, Path, Tuple, color, icon_id (+12 more)
  ├─ remove_icon(self, icon_id: int) -> None @ src/gamelib/rendering/icon_manager.py [L101]
  │  ⤷ Uses: icon_id, self._instances, self._instances.pop
  ├─ update_position(self, icon_id: int, position: Tuple[float, float]) -> None @ src/gamelib/rendering/icon_manager.py [L104]
  │  ⤷ Uses: Tuple, icon_id, instance, position, self._instances (+1 more)
  ├─ update_size(self, icon_id: int, size: Tuple[float, float]) -> None @ src/gamelib/rendering/icon_manager.py [L109]
  │  ⤷ Uses: Tuple, icon_id, instance, self._instances, self._instances.get (+1 more)
  ├─ update_color(self, icon_id: int, color: Tuple[float, float, float, float]) -> None @ src/gamelib/rendering/icon_manager.py [L114]
  │  ⤷ Uses: Tuple, color, icon_id, instance, self._instances (+1 more)
  ├─ update_image(self, icon_id: int, image_path: Path) -> None @ src/gamelib/rendering/icon_manager.py [L119]
  │  ⤷ Uses: Path, icon_id, image_path, instance, resource (+6 more)
  ├─ get_all_layers(self) -> List[str] @ src/gamelib/rendering/icon_manager.py [L131]
  │  ⤷ Uses: List, instance, instance.layer, layers, self._instances (+2 more)
  ├─ get_draw_data_for_layer(self, layer: str) -> List[IconDrawData] @ src/gamelib/rendering/icon_manager.py [L135]
  │  ⤷ Uses: IconDrawData, List, draw_calls, draw_calls.append, instance (+12 more)
  ├─ has_icons(self) -> bool @ src/gamelib/rendering/icon_manager.py [L156]
  │  ⤷ Uses: self._instances
  ├─ release(self) -> None @ src/gamelib/rendering/icon_manager.py [L159]
  │  ⤷ Uses: resource, resource.texture, resource.texture.release, self._instances, self._instances.clear (+3 more)

src.gamelib.rendering.icon_manager._IconInstance @ src/gamelib/rendering/icon_manager.py [L23]
  ⮕ Instance of an icon placed on screen.
  ⤖ Siblings: IconDrawData, IconManager, _IconResource

src.gamelib.rendering.icon_manager._IconResource @ src/gamelib/rendering/icon_manager.py [L14]
  ⮕ Loaded texture resource for an icon.
  ⤖ Siblings: IconDrawData, IconManager, _IconInstance

src.gamelib.rendering.light_debug_renderer.LightDebugRenderer @ src/gamelib/rendering/light_debug_renderer.py [L22]
  ⮕ Draw debug gizmos for lights to aid placement and orientation.
  ├─ __init__(self, ctx: moderngl.Context, program: moderngl.Program) -> None @ src/gamelib/rendering/light_debug_renderer.py [L25]
  │  ⤷ Uses: Matrix44, Matrix44.identity, ctx, ctx.buffer, ctx.vertex_array (+11 more)
  ├─ render(self, camera: Camera, lights: Iterable[Light], viewport: Tuple[int, int, int, int]) -> None @ src/gamelib/rendering/light_debug_renderer.py [L49]
  │  ⮕ Render gizmos for all provided lights.
  │  ⤷ Uses: Camera, Iterable, Light, Matrix44, Matrix44.from_scale (+73 more)

src.gamelib.rendering.lighting_renderer.LightingRenderer @ src/gamelib/rendering/lighting_renderer.py [L24]
  ⮕ Renders lighting using G-Buffer data.
  ├─ __init__(self, ctx: moderngl.Context, lighting_program: moderngl.Program, ambient_program: moderngl.Program, emissive_program: moderngl.Program) -> None @ src/gamelib/rendering/lighting_renderer.py [L33]
  │  ⮕ Initialize lighting renderer.
  │  ⤷ Uses: ambient_program, ctx, emissive_program, lighting_program, moderngl (+3 more)
  ├─ _create_fullscreen_quad(self) -> None @ src/gamelib/rendering/lighting_renderer.py [L57]
  │  ⮕ Create a full-screen quad geometry.
  │  ⤷ Uses: np, np.array, self.ambient_program, self.ctx, self.ctx.buffer (+6 more)
  ├─ render(self, lights: List[Light], gbuffer: GBuffer, camera: Camera, viewport: tuple, ssao_texture: moderngl.Texture, skybox: Optional[Skybox], time: float | None, apply_post_lighting) -> None @ src/gamelib/rendering/lighting_renderer.py [L96]
  │  ⮕ Render all lighting to the screen.
  │  ⤷ Uses: Camera, GBuffer, Light, List, Optional (+14 more)
  ├─ render_to_target(self, lights: List[Light], gbuffer: GBuffer, camera: Camera, viewport: tuple, target: moderngl.Framebuffer, ssao_texture: moderngl.Texture, skybox: Optional[Skybox], time: float | None, apply_post_lighting) -> None @ src/gamelib/rendering/lighting_renderer.py [L133]
  │  ⮕ Render all lighting to a specific target.
  │  ⤷ Uses: Camera, GBuffer, Light, List, Optional (+41 more)
  ├─ _prepare_lights_for_rendering(self, lights: List[Light], camera: Camera) -> List[Light] @ src/gamelib/rendering/lighting_renderer.py [L211]
  │  ⮕ Sort lights by importance and apply budget limit.
  │  ⤷ Uses: Camera, ENABLE_LIGHT_SORTING, Light, List, MAX_LIGHTS_PER_FRAME (+16 more)
  ├─ _render_ambient(self, gbuffer: GBuffer, ssao_texture: moderngl.Texture, inverse_view: np.ndarray | None, inverse_projection: np.ndarray | None, skybox: Optional[Skybox], camera: Camera | None, viewport: tuple | None, time: float | None) -> None @ src/gamelib/rendering/lighting_renderer.py [L251]
  │  ⮕ Render ambient lighting pass.
  │  ⤷ Uses: AMBIENT_STRENGTH, Camera, GBuffer, Optional, SSAO_INTENSITY (+52 more)
  ├─ _render_light(self, light: Light, light_index: int, camera: Camera, inverse_view: np.ndarray, time: float) -> None @ src/gamelib/rendering/lighting_renderer.py [L382]
  │  ⮕ Render a single light's contribution.
  │  ⤷ Uses: Camera, Light, camera, camera.position, camera.position.astype (+48 more)
  ├─ _render_emissive(self, gbuffer: GBuffer, camera: Camera, inverse_view: np.ndarray, time: float) -> None @ src/gamelib/rendering/lighting_renderer.py [L458]
  │  ⮕ Render emissive contribution pass.
  │  ⤷ Uses: Camera, GBuffer, camera, camera.position, camera.position.astype (+15 more)
  ├─ _set_fog_uniforms(self, program: moderngl.Program, time: float) -> None @ src/gamelib/rendering/lighting_renderer.py [L484]
  │  ⮕ Write fog parameters into the provided shader program if supported.
  │  ⤷ Uses: moderngl, moderngl.Program, np, np.array, np.array(settings.FOG_COLOR, dtype='f4').tobytes (+20 more)

src.gamelib.rendering.main_renderer.MainRenderer @ src/gamelib/rendering/main_renderer.py [L19]
  ⮕ Renders the main scene with lighting and shadows.
  ├─ __init__(self, ctx: moderngl.Context, main_program: moderngl.Program, skybox_renderer: Optional[SkyboxRenderer]) -> None @ src/gamelib/rendering/main_renderer.py [L26]
  │  ⮕ Initialize main renderer.
  │  ⤷ Uses: Optional, SkyboxRenderer, ctx, main_program, moderngl (+3 more)
  ├─ render(self, scene: Scene, camera: Camera, lights: List[Light], viewport: Tuple[int, int, int, int], skybox: Optional[Skybox], time: float | None) -> None @ src/gamelib/rendering/main_renderer.py [L44]
  │  ⮕ Render the main scene with frustum culling.
  │  ⤷ Uses: Camera, Light, List, Optional, Scene (+11 more)
  ├─ render_to_target(self, scene: Scene, camera: Camera, lights: List[Light], viewport: Tuple[int, int, int, int], target: moderngl.Framebuffer, skybox: Optional[Skybox], time: float | None) -> None @ src/gamelib/rendering/main_renderer.py [L73]
  │  ⮕ Render the main scene to a specific framebuffer.
  │  ⤷ Uses: CLEAR_COLOR, Camera, ENABLE_FRUSTUM_CULLING, Light, List (+29 more)
  ├─ _bind_shadow_maps(self, lights: List[Light]) -> None @ src/gamelib/rendering/main_renderer.py [L130]
  │  ⮕ Bind all shadow map textures.
  │  ⤷ Uses: Light, List, enumerate, i, light (+3 more)
  ├─ _set_camera_uniforms(self, camera: Camera, viewport: Tuple[int, int, int, int]) -> None @ src/gamelib/rendering/main_renderer.py [L141]
  │  ⮕ Set camera-related shader uniforms.
  │  ⤷ Uses: Camera, Tuple, aspect_ratio, camera, camera.get_projection_matrix (+17 more)
  ├─ _set_light_uniforms(self, lights: List[Light]) -> None @ src/gamelib/rendering/main_renderer.py [L162]
  │  ⮕ Set light-related shader uniforms.
  │  ⤷ Uses: Light, List, i, light, light.color (+22 more)
  ├─ _set_fog_uniforms(self, time: float) -> None @ src/gamelib/rendering/main_renderer.py [L186]
  │  ⮕ Set fog-related shader uniforms.
  │  ⤷ Uses: np, np.array, np.array(settings.FOG_COLOR, dtype='f4').tobytes, np.array(settings.FOG_WIND_DIRECTION, dtype='f4').tobytes, self.main_program (+15 more)

src.gamelib.rendering.pause_effects.PauseEffects @ src/gamelib/rendering/pause_effects.py [L14]
  ⮕ Renders pause menu visual effects (dim overlay, blur, etc.).
  ├─ __init__(self, ctx: moderngl.Context, window_size: tuple[int, int]) -> None @ src/gamelib/rendering/pause_effects.py [L41]
  │  ⮕ Initialize pause effects renderer.
  │  ⤷ Uses: ctx, moderngl, moderngl.Context, np, np.array (+11 more)
  ├─ _update_projection(self) -> None @ src/gamelib/rendering/pause_effects.py [L81]
  │  ⮕ Update orthographic projection matrix for current window size.
  │  ⤷ Uses: Matrix44, Matrix44.orthogonal_projection, proj, proj.astype, self.height (+3 more)
  ├─ resize(self, width: int, height: int) -> None @ src/gamelib/rendering/pause_effects.py [L86]
  │  ⮕ Handle window resize.
  │  ⤷ Uses: height, self._update_projection, width
  ├─ render_dim_overlay(self, dim_alpha: float) -> None @ src/gamelib/rendering/pause_effects.py [L99]
  │  ⮕ Render semi-transparent dim overlay.
  │  ⤷ Uses: dim_alpha, moderngl, moderngl.BLEND, moderngl.ONE_MINUS_SRC_ALPHA, moderngl.SRC_ALPHA (+6 more)
  ├─ shutdown(self) -> None @ src/gamelib/rendering/pause_effects.py [L116]
  │  ⮕ Clean up resources.
  │  ⤷ Uses: self.program, self.program.release, self.vao, self.vao.release, self.vbo (+1 more)

src.gamelib.rendering.render_pipeline.RenderPipeline @ src/gamelib/rendering/render_pipeline.py [L42]
  ⮕ Complete rendering pipeline.
  ├─ __init__(self, ctx: moderngl.Context, window) -> None @ src/gamelib/rendering/render_pipeline.py [L56]
  │  ⮕ Initialize rendering pipeline.
  │  ⤷ Uses: AntiAliasingRenderer, BLOOM_ENABLED, BloomRenderer, Exception, GBuffer (+37 more)
  ├─ initialize_lights(self, lights: List[Light], camera: Camera) -> None @ src/gamelib/rendering/render_pipeline.py [L217]
  │  ⮕ Initialize shadow maps for lights with adaptive resolution.
  │  ⤷ Uses: Camera, Light, List, camera, camera.position (+4 more)
  ├─ render_frame(self, scene: Scene, camera: Camera, lights: List[Light], time: float | None) -> None @ src/gamelib/rendering/render_pipeline.py [L230]
  │  ⮕ Render a complete frame.
  │  ⤷ Uses: Camera, Light, List, Scene, camera (+19 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/render_pipeline.py [L273]
  │  ⮕ Resize internal render targets and update cached viewport size.
  │  ⤷ Uses: Tuple, hasattr, height, screen_viewport, self.aa_renderer (+20 more)
  ├─ _render_forward(self, scene: Scene, camera: Camera, lights: List[Light], time: float | None) -> None @ src/gamelib/rendering/render_pipeline.py [L307]
  │  ⮕ Render using forward rendering.
  │  ⤷ Uses: Camera, Light, List, Scene, camera (+18 more)
  ├─ _render_deferred(self, scene: Scene, camera: Camera, lights: List[Light], time: float | None) -> None @ src/gamelib/rendering/render_pipeline.py [L352]
  │  ⮕ Render using deferred rendering.
  │  ⤷ Uses: Camera, Light, List, Scene, apply_post_lighting (+46 more)
  ├─ get_shader(self, name: str) -> moderngl.Program @ src/gamelib/rendering/render_pipeline.py [L474]
  │  ⮕ Get a loaded shader program.
  │  ⤷ Uses: moderngl, moderngl.Program, name, self.shader_manager, self.shader_manager.get
  ├─ _render_light_debug(self, camera: Camera, lights: List[Light]) -> None @ src/gamelib/rendering/render_pipeline.py [L486]
  │  ⮕ Render light gizmos when enabled.
  │  ⤷ Uses: Camera, Light, List, camera, default_viewport (+12 more)
  ├─ cycle_aa_mode(self) -> None @ src/gamelib/rendering/render_pipeline.py [L507]
  │  ⮕ Cycle to the next anti-aliasing mode
  │  ⤷ Uses: hasattr, mode, self.aa_renderer, self.aa_renderer.cycle_aa_mode, self.aa_renderer.get_aa_mode_name
  ├─ toggle_msaa(self) -> None @ src/gamelib/rendering/render_pipeline.py [L514]
  │  ⮕ Toggle MSAA on/off
  │  ⤷ Uses: enabled, hasattr, mode_name, self.aa_renderer, self.aa_renderer.get_aa_mode_name (+1 more)
  ├─ toggle_fxaa(self) -> None @ src/gamelib/rendering/render_pipeline.py [L522]
  │  ⮕ Toggle FXAA on/off
  │  ⤷ Uses: enabled, hasattr, mode_name, self.aa_renderer, self.aa_renderer.get_aa_mode_name (+1 more)
  ├─ toggle_smaa(self) -> None @ src/gamelib/rendering/render_pipeline.py [L530]
  │  ⮕ Toggle SMAA on/off
  │  ⤷ Uses: enabled, hasattr, mode_name, self.aa_renderer, self.aa_renderer.get_aa_mode_name (+2 more)
  ├─ get_aa_mode_name(self) -> str @ src/gamelib/rendering/render_pipeline.py [L541]
  │  ⮕ Get current anti-aliasing mode name
  │  ⤷ Uses: hasattr, self.aa_renderer, self.aa_renderer.get_aa_mode_name
  ├─ toggle_light_gizmos(self) -> None @ src/gamelib/rendering/render_pipeline.py [L547]
  │  ⮕ Toggle debug light gizmo rendering.
  │  ⤷ Uses: current, getattr, settings, settings.DEBUG_DRAW_LIGHT_GIZMOS
  ├─ reload_shaders(self) -> None @ src/gamelib/rendering/render_pipeline.py [L558]
  │  ⮕ Reload all shaders.
  │  ⤷ Uses: NotImplementedError

src.gamelib.rendering.selection_highlight.SelectionHighlight @ src/gamelib/rendering/selection_highlight.py [L19]
  ⮕ Renders outline/highlight around selected object.
  ├─ __init__(self, ctx: moderngl.Context) -> None @ src/gamelib/rendering/selection_highlight.py [L52]
  │  ⮕ Initialize selection highlight renderer.
  │  ⤷ Uses: Exception, Optional, SceneObject, Vector3, ctx (+7 more)
  ├─ set_selected_object(self, obj: Optional[SceneObject]) -> None @ src/gamelib/rendering/selection_highlight.py [L74]
  │  ⮕ Set the object to highlight.
  │  ⤷ Uses: Optional, SceneObject, obj
  ├─ render(self, view_matrix: Matrix44, projection_matrix: Matrix44) -> None @ src/gamelib/rendering/selection_highlight.py [L83]
  │  ⮕ Render selection highlight around selected object.
  │  ⤷ Uses: Exception, Matrix44, e, geometry, geometry.render (+23 more)
  ├─ render_tint(self, obj: SceneObject, view_matrix: Matrix44, projection_matrix: Matrix44, tint_color: Vector3) -> None @ src/gamelib/rendering/selection_highlight.py [L134]
  │  ⮕ Render object with tint color overlay (alternative highlight method).
  │  ⤷ Uses: Matrix44, SceneObject, Vector3, self.program, tint_color
  ├─ set_highlight_color(self, color: Vector3) -> None @ src/gamelib/rendering/selection_highlight.py [L157]
  │  ⮕ Set highlight color.
  │  ⤷ Uses: Vector3, color
  ├─ set_outline_scale(self, scale: float) -> None @ src/gamelib/rendering/selection_highlight.py [L166]
  │  ⮕ Set outline thickness.
  │  ⤷ Uses: scale
  ├─ _build_model_matrix(self, obj: SceneObject) -> Matrix44 @ src/gamelib/rendering/selection_highlight.py [L175]
  │  ⮕ Build model matrix from object position, rotation, and scale.
  │  ⤷ Uses: Matrix44, Matrix44.from_scale, Matrix44.from_translation, Matrix44.from_x_rotation, Matrix44.from_y_rotation (+17 more)

src.gamelib.rendering.shader_manager.ShaderManager @ src/gamelib/rendering/shader_manager.py [L14]
  ⮕ Loads and manages shader programs.
  ├─ __init__(self, ctx: moderngl.Context, shader_dir: Path) -> None @ src/gamelib/rendering/shader_manager.py [L21]
  │  ⮕ Initialize shader manager.
  │  ⤷ Uses: Dict, FileNotFoundError, Path, SHADERS_DIR, ctx (+6 more)
  ├─ load_program(self, name: str, vert_file: str, frag_file: str) -> moderngl.Program @ src/gamelib/rendering/shader_manager.py [L37]
  │  ⮕ Load a shader program from vertex and fragment shader files.
  │  ⤷ Uses: FileNotFoundError, e, f, f.read, frag_file (+17 more)
  ├─ get(self, name: str) -> moderngl.Program @ src/gamelib/rendering/shader_manager.py [L79]
  │  ⮕ Get a loaded shader program by name.
  │  ⤷ Uses: KeyError, moderngl, moderngl.Program, name, self.programs (+1 more)
  ├─ has(self, name: str) -> bool @ src/gamelib/rendering/shader_manager.py [L96]
  │  ⮕ Check if a program is loaded
  │  ⤷ Uses: name, self.programs
  ├─ reload(self, name: str) -> moderngl.Program @ src/gamelib/rendering/shader_manager.py [L100]
  │  ⮕ Reload a shader program (useful for hot-reloading during development).
  │  ⤷ Uses: NotImplementedError, moderngl, moderngl.Program
  ├─ __contains__(self, name: str) -> bool @ src/gamelib/rendering/shader_manager.py [L116]
  │  ⮕ Support 'in' operator
  │  ⤷ Uses: name, self.has
  ├─ __getitem__(self, name: str) -> moderngl.Program @ src/gamelib/rendering/shader_manager.py [L120]
  │  ⮕ Support subscript access: shader_manager['shadow']
  │  ⤷ Uses: moderngl, moderngl.Program, name, self.get

src.gamelib.rendering.shadow_renderer.ShadowRenderer @ src/gamelib/rendering/shadow_renderer.py [L22]
  ⮕ Renders shadow maps for shadow-casting lights.
  ├─ __init__(self, ctx: moderngl.Context, shadow_program: moderngl.Program, shadow_size: int) -> None @ src/gamelib/rendering/shadow_renderer.py [L29]
  │  ⮕ Initialize shadow renderer.
  │  ⤷ Uses: Dict, Optional, SHADOW_MAP_SIZE, Tuple, ctx (+5 more)
  ├─ set_screen_viewport(self, viewport: Tuple[int, int, int, int]) -> None @ src/gamelib/rendering/shadow_renderer.py [L49]
  │  ⮕ Persist the default screen viewport to restore after shadow passes.
  │  ⤷ Uses: Tuple, viewport
  ├─ create_shadow_map(self, resolution: Optional[int]) -> Tuple[moderngl.Texture, moderngl.Framebuffer] @ src/gamelib/rendering/shadow_renderer.py [L53]
  │  ⮕ Create a shadow map texture and framebuffer.
  │  ⤷ Uses: Optional, Tuple, moderngl, moderngl.Framebuffer, moderngl.Texture (+7 more)
  ├─ _calculate_shadow_resolution(self, light: Light, camera_position) -> int @ src/gamelib/rendering/shadow_renderer.py [L77]
  │  ⮕ Calculate appropriate shadow map resolution for a light based on importance.
  │  ⤷ Uses: ENABLE_ADAPTIVE_SHADOW_RES, Light, SHADOW_MAP_SIZE_HIGH, SHADOW_MAP_SIZE_LOW, SHADOW_MAP_SIZE_MED (+10 more)
  ├─ initialize_light_shadow_maps(self, lights: List[Light], camera_position) -> None @ src/gamelib/rendering/shadow_renderer.py [L113]
  │  ⮕ Create shadow maps for shadow-casting lights that don't have them.
  │  ⤷ Uses: Light, List, camera_position, light, light.cast_shadows (+6 more)
  ├─ render_shadow_maps(self, lights: List[Light], scene: Scene) -> None @ src/gamelib/rendering/shadow_renderer.py [L134]
  │  ⮕ Render shadow maps for all lights with optimizations.
  │  ⤷ Uses: DEBUG_SHADOW_RENDERING, Light, List, SHADOW_MAP_MIN_INTENSITY, SHADOW_UPDATE_THROTTLE_FRAMES (+17 more)
  ├─ render_single_shadow_map(self, light: Light, scene: Scene) -> None @ src/gamelib/rendering/shadow_renderer.py [L200]
  │  ⮕ Render shadow map for a single light with frustum culling.
  │  ⤷ Uses: ENABLE_FRUSTUM_CULLING, Frustum, Light, Scene, frustum (+19 more)

src.gamelib.rendering.skybox_renderer.SkyboxRenderer @ src/gamelib/rendering/skybox_renderer.py [L14]
  ⮕ Render a skybox cube map using a dedicated shader.
  ├─ __init__(self, ctx: moderngl.Context, program: moderngl.Program) -> None @ src/gamelib/rendering/skybox_renderer.py [L17]
  │  ⤷ Uses: ctx, geometry, geometry.cube, moderngl, moderngl.Context (+2 more)
  ├─ render(self, camera: Camera, skybox: Optional[Skybox], viewport: Tuple[int, int, int, int]) -> None @ src/gamelib/rendering/skybox_renderer.py [L22]
  │  ⮕ Render the provided skybox using the current framebuffer.
  │  ⤷ Uses: Camera, Optional, Skybox, Tuple, alpha (+46 more)

src.gamelib.rendering.smaa_renderer.SMAARenderer @ src/gamelib/rendering/smaa_renderer.py [L32]
  ⮕ SMAA (Subpixel Morphological Antialiasing) Renderer.
  ├─ __init__(self, ctx: moderngl.Context, size: Tuple[int, int], edge_program: moderngl.Program, blend_program: moderngl.Program, neighborhood_program: moderngl.Program) -> None @ src/gamelib/rendering/smaa_renderer.py [L44]
  │  ⮕ Initialize SMAA renderer.
  │  ⤷ Uses: Tuple, blend_program, ctx, edge_program, moderngl (+9 more)
  ├─ _create_fullscreen_quad(self) -> None @ src/gamelib/rendering/smaa_renderer.py [L85]
  │  ⮕ Create geometry for full-screen quad
  │  ⤷ Uses: indices, indices.tobytes, np, np.array, np.float32 (+9 more)
  ├─ _create_vao(self, program: moderngl.Program) -> moderngl.VertexArray @ src/gamelib/rendering/smaa_renderer.py [L110]
  │  ⮕ Create VAO for a specific program
  │  ⤷ Uses: moderngl, moderngl.Program, moderngl.VertexArray, program, self.ctx (+3 more)
  ├─ _create_framebuffers(self) -> None @ src/gamelib/rendering/smaa_renderer.py [L118]
  │  ⮕ Create framebuffers for SMAA passes
  │  ⤷ Uses: h, moderngl, moderngl.LINEAR, self.blend_texture, self.ctx (+5 more)
  ├─ _create_lookup_textures(self) -> None @ src/gamelib/rendering/smaa_renderer.py [L132]
  │  ⮕ Create precomputed lookup textures for SMAA using official SMAA 1.0 data
  │  ⤷ Uses: AREA_TEX_COMPONENTS, AREA_TEX_HEIGHT, AREA_TEX_WIDTH, SEARCH_TEX_COMPONENTS, SEARCH_TEX_HEIGHT (+14 more)
  ├─ apply_smaa(self, input_texture: moderngl.Texture, output_fbo: moderngl.Framebuffer) -> None @ src/gamelib/rendering/smaa_renderer.py [L154]
  │  ⮕ Apply SMAA to input texture and render to output framebuffer.
  │  ⤷ Uses: h, input_texture, moderngl, moderngl.Framebuffer, moderngl.Texture (+7 more)
  ├─ _edge_detection_pass(self, input_texture: moderngl.Texture, rt_metrics: tuple) -> None @ src/gamelib/rendering/smaa_renderer.py [L174]
  │  ⮕ Pass 1: Edge Detection
  │  ⤷ Uses: input_texture, input_texture.use, moderngl, moderngl.Texture, rt_metrics (+6 more)
  ├─ _blending_weight_pass(self, rt_metrics: tuple) -> None @ src/gamelib/rendering/smaa_renderer.py [L189]
  │  ⮕ Pass 2: Blending Weight Calculation
  │  ⤷ Uses: self.area_texture, self.area_texture.use, self.blend_fbo, self.blend_fbo.clear, self.blend_fbo.use (+7 more)
  ├─ _neighborhood_blending_pass(self, input_texture: moderngl.Texture, output_fbo: moderngl.Framebuffer, rt_metrics: tuple) -> None @ src/gamelib/rendering/smaa_renderer.py [L209]
  │  ⮕ Pass 3: Neighborhood Blending
  │  ⤷ Uses: input_texture, input_texture.use, moderngl, moderngl.Framebuffer, moderngl.Texture (+8 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/smaa_renderer.py [L226]
  │  ⮕ Resize framebuffers for new screen size.
  │  ⤷ Uses: Tuple, self._cleanup_framebuffers, self._create_framebuffers, self.size, size
  ├─ _cleanup_framebuffers(self) -> None @ src/gamelib/rendering/smaa_renderer.py [L238]
  │  ⮕ Clean up framebuffers
  │  ⤷ Uses: self.blend_fbo, self.blend_fbo.release, self.blend_texture, self.blend_texture.release, self.edges_fbo (+3 more)
  ├─ cleanup(self) -> None @ src/gamelib/rendering/smaa_renderer.py [L253]
  │  ⮕ Clean up all resources
  │  ⤷ Uses: hasattr, self._cleanup_framebuffers, self.area_texture, self.area_texture.release, self.blend_vao (+11 more)

src.gamelib.rendering.ssao_renderer.SSAORenderer @ src/gamelib/rendering/ssao_renderer.py [L13]
  ⮕ Screen Space Ambient Occlusion renderer.
  ├─ __init__(self, ctx: moderngl.Context, size: Tuple[int, int], ssao_program: moderngl.Program, blur_program: moderngl.Program) -> None @ src/gamelib/rendering/ssao_renderer.py [L27]
  │  ⮕ Initialize SSAO renderer.
  │  ⤷ Uses: Tuple, blur_program, ctx, moderngl, moderngl.Context (+8 more)
  ├─ _create_textures(self) -> None @ src/gamelib/rendering/ssao_renderer.py [L55]
  │  ⮕ Create SSAO textures.
  │  ⤷ Uses: moderngl, moderngl.NEAREST, self.ctx, self.ctx.texture, self.size (+2 more)
  ├─ _create_framebuffers(self) -> None @ src/gamelib/rendering/ssao_renderer.py [L73]
  │  ⮕ Create framebuffers for SSAO passes.
  │  ⤷ Uses: self.ctx, self.ctx.framebuffer, self.ssao_blur_texture, self.ssao_texture
  ├─ _generate_kernel(self, kernel_size: int) -> None @ src/gamelib/rendering/ssao_renderer.py [L85]
  │  ⮕ Generate sample kernel for SSAO.
  │  ⤷ Uses: kernel, kernel.extend, kernel_size, np, np.array (+7 more)
  ├─ _generate_noise_texture(self, noise_size: int) -> None @ src/gamelib/rendering/ssao_renderer.py [L121]
  │  ⮕ Generate random rotation noise texture.
  │  ⤷ Uses: moderngl, moderngl.NEAREST, noise, noise.extend, noise_data (+9 more)
  ├─ _create_fullscreen_quad(self) -> None @ src/gamelib/rendering/ssao_renderer.py [L153]
  │  ⮕ Create a fullscreen quad for post-processing passes.
  │  ⤷ Uses: np, np.array, self.blur_program, self.ctx, self.ctx.buffer (+5 more)
  ├─ render(self, position_texture: moderngl.Texture, normal_texture: moderngl.Texture, projection_matrix: np.ndarray, radius: float, bias: float, intensity: float) -> None @ src/gamelib/rendering/ssao_renderer.py [L175]
  │  ⮕ Render SSAO effect.
  │  ⤷ Uses: bias, moderngl, moderngl.TRIANGLE_STRIP, moderngl.Texture, noise_scale (+34 more)
  ├─ resize(self, size: Tuple[int, int]) -> None @ src/gamelib/rendering/ssao_renderer.py [L239]
  │  ⮕ Resize SSAO buffers.
  │  ⤷ Uses: Tuple, self._create_framebuffers, self._create_textures, self.blur_fbo, self.blur_fbo.release (+8 more)
  ├─ get_ssao_texture(self) -> moderngl.Texture @ src/gamelib/rendering/ssao_renderer.py [L262]
  │  ⮕ Get final blurred SSAO texture.
  │  ⤷ Uses: moderngl, moderngl.Texture, self.ssao_blur_texture
  ├─ release(self) -> None @ src/gamelib/rendering/ssao_renderer.py [L271]
  │  ⮕ Release all SSAO resources.
  │  ⤷ Uses: self.blur_fbo, self.blur_fbo.release, self.blur_vao, self.blur_vao.release, self.noise_texture (+11 more)

src.gamelib.rendering.text_manager.TextManager @ src/gamelib/rendering/text_manager.py [L41]
  ⮕ Manages text objects and generates geometry from alpha masks.
  ⤖ Siblings: _CachedGeometry, _LayerGeometry, _TextObject
  ├─ __init__(self, font_path: str, font_size: int, line_spacing: Optional[int]) -> None @ src/gamelib/rendering/text_manager.py [L44]
  │  ⤷ Uses: Dict, ImageFont, ImageFont.truetype, Optional, Path (+9 more)
  ├─ add_text(self, text: str, position: Tuple[float, float], color: Tuple[float, float, float, float], scale: float, layer: str, background_color: Optional[Tuple[float, float, float, float]], background_padding: float) -> int @ src/gamelib/rendering/text_manager.py [L65]
  │  ⤷ Uses: Optional, Tuple, background_color, background_padding, color (+9 more)
  ├─ update_text(self, text_id: int, text: str) -> None @ src/gamelib/rendering/text_manager.py [L91]
  │  ⤷ Uses: obj, obj.layer, obj.text, self._dirty_layers, self._dirty_layers.add (+4 more)
  ├─ update_position(self, text_id: int, position: Tuple[float, float]) -> None @ src/gamelib/rendering/text_manager.py [L99]
  │  ⤷ Uses: Tuple, obj, obj.layer, position, self._dirty_layers (+4 more)
  ├─ update_color(self, text_id: int, color: Tuple[float, float, float, float]) -> None @ src/gamelib/rendering/text_manager.py [L105]
  │  ⤷ Uses: Tuple, color, obj, obj.layer, self._dirty_layers (+4 more)
  ├─ update_background(self, text_id: int, background_color: Optional[Tuple[float, float, float, float]], background_padding: Optional[float]) -> None @ src/gamelib/rendering/text_manager.py [L111]
  │  ⤷ Uses: Optional, Tuple, background_color, background_padding, obj (+6 more)
  ├─ update_scale(self, text_id: int, scale: float) -> None @ src/gamelib/rendering/text_manager.py [L124]
  │  ⤷ Uses: obj, obj.layer, scale, self._dirty_layers, self._dirty_layers.add (+3 more)
  ├─ remove_text(self, text_id: int) -> None @ src/gamelib/rendering/text_manager.py [L130]
  │  ⤷ Uses: obj, obj.layer, self._dirty_layers, self._dirty_layers.add, self._text_objects (+2 more)
  ├─ clear_layer(self, layer: str) -> None @ src/gamelib/rendering/text_manager.py [L135]
  │  ⤷ Uses: layer, obj, obj.layer, self._dirty_layers, self._dirty_layers.discard (+7 more)
  ├─ get_all_layers(self) -> List[str] @ src/gamelib/rendering/text_manager.py [L142]
  │  ⤷ Uses: List, layers, obj, obj.layer, self._text_objects (+2 more)
  ├─ get_layer_geometry(self, layer: str) -> Optional[Dict[str, np.ndarray]] @ src/gamelib/rendering/text_manager.py [L146]
  │  ⤷ Uses: Dict, Optional, geometry, geometry.colors, geometry.index_count (+11 more)
  ├─ get_line_height(self) -> int @ src/gamelib/rendering/text_manager.py [L163]
  │  ⤷ Uses: self._line_height
  ├─ refresh_layout_metrics(self) -> None @ src/gamelib/rendering/text_manager.py [L166]
  │  ⮕ Mark all layers dirty so cached geometry is rebuilt after layout changes.
  │  ⤷ Uses: self._dirty_layers, self._dirty_layers.update, self._layer_geometry, self._layer_geometry.keys
  ├─ release(self) -> None @ src/gamelib/rendering/text_manager.py [L170]
  │  ⤷ Uses: self._dirty_layers, self._dirty_layers.clear, self._geometry_cache, self._geometry_cache.clear, self._layer_geometry (+1 more)
  ├─ _rebuild_layer_geometry(self, layer: str) -> None @ src/gamelib/rendering/text_manager.py [L175]
  │  ⤷ Uses: List, background_vertices, base_vertices, base_vertices[:, 0].max, base_vertices[:, 0].min (+46 more)
  ├─ _get_text_geometry(self, text: str) -> _CachedGeometry @ src/gamelib/rendering/text_manager.py [L257]
  │  ⤷ Uses: cached, geometry, key, self._geometry_cache, self._geometry_cache.get (+2 more)
  ├─ _rasterize_text(self, text: str) -> _CachedGeometry @ src/gamelib/rendering/text_manager.py [L267]
  │  ⤷ Uses: Image, Image.new, ImageDraw, ImageDraw.Draw, List (+33 more)

src.gamelib.rendering.text_manager._CachedGeometry @ src/gamelib/rendering/text_manager.py [L25]
  ⤖ Siblings: TextManager, _LayerGeometry, _TextObject

src.gamelib.rendering.text_manager._LayerGeometry @ src/gamelib/rendering/text_manager.py [L33]
  ⤖ Siblings: TextManager, _CachedGeometry, _TextObject

src.gamelib.rendering.text_manager._TextObject @ src/gamelib/rendering/text_manager.py [L14]
  ⤖ Siblings: TextManager, _CachedGeometry, _LayerGeometry

src.gamelib.rendering.thumbnail_generator.ThumbnailGenerator @ src/gamelib/rendering/thumbnail_generator.py [L24]
  ⮕ Generates and caches thumbnail images for assets.
  ├─ __init__(self, ctx: moderngl.Context, thumbnail_size: int) -> None @ src/gamelib/rendering/thumbnail_generator.py [L70]
  │  ⮕ Initialize thumbnail generator.
  │  ⤷ Uses: Exception, Path, Path(__file__).parent, Path(__file__).parent.parent, Path(__file__).parent.parent.parent (+17 more)
  ├─ _create_framebuffer(self) -> None @ src/gamelib/rendering/thumbnail_generator.py [L104]
  │  ⮕ Create framebuffer and texture for thumbnail rendering.
  │  ⤷ Uses: Exception, depth_texture, e, self.ctx, self.ctx.framebuffer (+3 more)
  ├─ generate_model_thumbnail(self, model_path: str, model_name: str, force_regenerate: bool) -> Optional[Path] @ src/gamelib/rendering/thumbnail_generator.py [L130]
  │  ⮕ Generate thumbnail for a 3D model.
  │  ⤷ Uses: ''.join, Exception, GltfLoader, Optional, Path (+17 more)
  ├─ generate_light_preset_thumbnails(self, light_presets: dict) -> dict @ src/gamelib/rendering/thumbnail_generator.py [L178]
  │  ⮕ Generate thumbnails for light presets.
  │  ⤷ Uses: Exception, color, e, light_presets, light_presets.items (+9 more)
  ├─ _render_model_thumbnail(self, model: SceneObject) -> None @ src/gamelib/rendering/thumbnail_generator.py [L210]
  │  ⮕ Render model to thumbnail framebuffer.
  │  ⤷ Uses: Exception, Matrix44, Matrix44.look_at, Matrix44.orthogonal_projection, SceneObject (+16 more)
  ├─ _render_light_thumbnail(self, color: tuple) -> None @ src/gamelib/rendering/thumbnail_generator.py [L250]
  │  ⮕ Render light preset thumbnail (colored sphere).
  │  ⤷ Uses: Exception, Matrix44, Matrix44.identity, Matrix44.look_at, Matrix44.orthogonal_projection (+23 more)
  ├─ _render_with_basic_shader(self, model: SceneObject, view: Matrix44, projection: Matrix44) -> None @ src/gamelib/rendering/thumbnail_generator.py [L294]
  │  ⮕ Fallback rendering using basic shader.
  │  ⤷ Uses: Exception, Matrix44, SceneObject, e, hasattr (+14 more)
  ├─ _build_model_matrix(self, obj: SceneObject) -> Matrix44 @ src/gamelib/rendering/thumbnail_generator.py [L317]
  │  ⮕ Build model matrix from object transform.
  │  ⤷ Uses: Matrix44, Matrix44.from_scale, Matrix44.from_translation, Matrix44.from_x_rotation, Matrix44.from_y_rotation (+15 more)
  ├─ _save_framebuffer_to_png(self, path: Path) -> None @ src/gamelib/rendering/thumbnail_generator.py [L327]
  │  ⮕ Save framebuffer contents to PNG file.
  │  ⤷ Uses: Path, data, image_data, image_data.reshape, np (+8 more)
  ├─ _write_png(self, path: Path, image_data: np.ndarray) -> None @ src/gamelib/rendering/thumbnail_generator.py [L347]
  │  ⮕ Write simple PNG file (without external PNG library).
  │  ⤷ Uses: Exception, Path, compressed, e, height (+20 more)

src.gamelib.rendering.transparent_renderer.TransparentRenderer @ src/gamelib/rendering/transparent_renderer.py [L18]
  ⮕ Renders transparent objects using forward rendering with alpha blending.
  ├─ __init__(self, ctx: moderngl.Context, transparent_program: moderngl.Program) -> None @ src/gamelib/rendering/transparent_renderer.py [L29]
  │  ⮕ Initialize transparent renderer.
  │  ⤷ Uses: Optional, Tuple, ctx, moderngl, moderngl.Context (+2 more)
  ├─ render(self, scene: Scene, camera: Camera, lights: List[Light], screen_fbo: moderngl.Framebuffer, shadow_maps: List[moderngl.Texture], viewport_size: Tuple[int, int], time: float) -> None @ src/gamelib/rendering/transparent_renderer.py [L41]
  │  ⮕ Render transparent objects with forward rendering and depth sorting.
  │  ⤷ Uses: Camera, Light, List, Scene, Tuple (+35 more)
  ├─ resize(self, viewport_size: Tuple[int, int]) -> None @ src/gamelib/rendering/transparent_renderer.py [L106]
  │  ⮕ Hook for future resize-specific logic (currently no cached resources).
  │  ⤷ Uses: Tuple, viewport_size
  ├─ _set_camera_uniforms(self, camera: Camera, aspect_ratio: float) -> None @ src/gamelib/rendering/transparent_renderer.py [L110]
  │  ⮕ Set camera-related shader uniforms.
  │  ⤷ Uses: Camera, aspect_ratio, camera, camera.get_projection_matrix, camera.get_view_matrix (+13 more)
  ├─ _set_lighting_uniforms(self, lights: List[Light], shadow_maps: List[moderngl.Texture]) -> None @ src/gamelib/rendering/transparent_renderer.py [L125]
  │  ⮕ Set lighting uniforms for forward rendering.
  │  ⤷ Uses: AMBIENT_STRENGTH, Light, List, SHADOW_BIAS, i (+31 more)
  ├─ _set_fog_uniforms(self, time: float) -> None @ src/gamelib/rendering/transparent_renderer.py [L179]
  │  ⮕ Populate fog configuration uniforms for the transparent shader.
  │  ⤷ Uses: np, np.array, np.array(settings.FOG_COLOR, dtype='f4').tobytes, np.array(settings.FOG_WIND_DIRECTION, dtype='f4').tobytes, self.transparent_program (+15 more)
  ├─ _depth_sort_meshes(self, meshes: List[Tuple], camera_pos: Vector3) -> List[Tuple] @ src/gamelib/rendering/transparent_renderer.py [L209]
  │  ⮕ Sort transparent meshes back-to-front based on distance from camera.
  │  ⤷ Uses: (mesh_pos - camera_pos).length, List, Tuple, Vector3, camera_pos (+6 more)

src.gamelib.rendering.ui_renderer.UIRenderer @ src/gamelib/rendering/ui_renderer.py [L10]
  ⮕ Render prebuilt text geometry as the final overlay pass.
  ├─ __init__(self, ctx: moderngl.Context, shader_program: moderngl.Program) -> None @ src/gamelib/rendering/ui_renderer.py [L13]
  │  ⤷ Uses: Dict, Tuple, ctx, moderngl, moderngl.Buffer (+4 more)
  ├─ render(self, text_manager: TextManager, screen_size: Tuple[int, int]) -> None @ src/gamelib/rendering/ui_renderer.py [L19]
  │  ⤷ Uses: TextManager, Tuple, geometry, layer, layers (+16 more)
  ├─ _get_or_create_vao(self, layer: str, geometry: Dict) -> moderngl.VertexArray @ src/gamelib/rendering/ui_renderer.py [L39]
  │  ⤷ Uses: Dict, buffer, buffer.release, colors_vbo, geometry (+16 more)
  ├─ _setup_ui_state(self) -> None @ src/gamelib/rendering/ui_renderer.py [L64]
  │  ⤷ Uses: moderngl, moderngl.BLEND, moderngl.CULL_FACE, moderngl.DEPTH_TEST, moderngl.ONE_MINUS_SRC_ALPHA (+4 more)
  ├─ _restore_state(self) -> None @ src/gamelib/rendering/ui_renderer.py [L70]
  │  ⤷ Uses: moderngl, moderngl.BLEND, moderngl.CULL_FACE, moderngl.DEPTH_TEST, self.ctx (+2 more)
  ├─ _create_ortho_matrix(self, screen_size: Tuple[int, int]) -> np.ndarray @ src/gamelib/rendering/ui_renderer.py [L75]
  │  ⤷ Uses: Tuple, height, matrix44, matrix44.create_orthogonal_projection_matrix, np (+4 more)
  ├─ resize(self, screen_size: Tuple[int, int]) -> None @ src/gamelib/rendering/ui_renderer.py [L90]
  │  ⤷ Uses: Tuple, self.release
  ├─ release(self) -> None @ src/gamelib/rendering/ui_renderer.py [L94]
  │  ⤷ Uses: buffer, buffer.release, buffers, self._vao_cache, self._vao_cache.clear (+6 more)

src.gamelib.rendering.ui_sprite_renderer.UISpriteRenderer @ src/gamelib/rendering/ui_sprite_renderer.py [L13]
  ⮕ Render icon quads in screen space as part of the UI pass.
  ├─ __init__(self, ctx: moderngl.Context, shader_program: moderngl.Program) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L16]
  │  ⤷ Uses: ctx, moderngl, moderngl.Context, moderngl.Program, shader_program
  ├─ render(self, icon_manager: IconManager, screen_size: Tuple[int, int]) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L20]
  │  ⤷ Uses: IconManager, Tuple, draw, draws, icon_manager (+13 more)
  ├─ _render_icon(self, draw) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L35]
  │  ⤷ Uses: draw, draw.color, draw.position, draw.size, draw.texture (+24 more)
  ├─ _setup_state(self) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L70]
  │  ⤷ Uses: moderngl, moderngl.BLEND, moderngl.CULL_FACE, moderngl.DEPTH_TEST, moderngl.ONE_MINUS_SRC_ALPHA (+4 more)
  ├─ _restore_state(self) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L76]
  │  ⤷ Uses: moderngl, moderngl.BLEND, moderngl.CULL_FACE, moderngl.DEPTH_TEST, self.ctx (+2 more)
  ├─ _create_ortho_matrix(self, screen_size: Tuple[int, int]) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L81]
  │  ⤷ Uses: Tuple, height, matrix44, matrix44.create_orthogonal_projection_matrix, np (+3 more)
  ├─ resize(self, _screen_size: Tuple[int, int]) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L95]
  │  ⤷ Uses: Tuple
  ├─ release(self) -> None @ src/gamelib/rendering/ui_sprite_renderer.py [L99]

src.gamelib.tools.editor.delete_tool.DeleteTool(EditorTool) @ src/gamelib/tools/editor/delete_tool.py [L18]
  ⮕ Tool for deleting objects and lights via raycast selection.
  ├─ __init__(self, definition: 'ToolDefinition', ctx) -> None @ src/gamelib/tools/editor/delete_tool.py [L27]
  │  ⮕ Initialize delete tool.
  │  ⤷ Uses: Dict, Optional, ctx, definition, super().__init__
  ├─ use(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/delete_tool.py [L46]
  │  ⮕ Delete object under cursor.
  │  ⤷ Uses: DeleteObjectOperation, camera, hit, obj, obj.name (+9 more)
  ├─ use_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/delete_tool.py [L83]
  │  ⮕ Secondary action (unused for delete tool).
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/delete_tool.py [L97]
  │  ⮕ Update tool state and highlight object under cursor.
  │  ⤷ Uses: camera, delta_time, enumerate, hasattr, hit (+22 more)
  ├─ on_equipped(self) -> None @ src/gamelib/tools/editor/delete_tool.py [L147]
  │  ⮕ Called when tool is equipped.
  │  ⤷ Uses: self.name
  ├─ on_unequipped(self) -> None @ src/gamelib/tools/editor/delete_tool.py [L152]
  │  ⮕ Called when tool is unequipped.
  │  ⤷ Uses: hasattr, mesh_idx, original_emissive, self.original_color, self.original_emissive_factors (+6 more)
  ├─ _raycast_objects(self, camera: 'Camera', scene: 'Scene') -> Optional[tuple] @ src/gamelib/tools/editor/delete_tool.py [L171]
  │  ⮕ Raycast from camera to find object under cursor.
  │  ⤷ Uses: (closest_point - obj.position).length, Optional, Vector3, camera, camera._front (+21 more)
  ├─ get_highlighted_object(self) -> Optional['SceneObject'] @ src/gamelib/tools/editor/delete_tool.py [L222]
  │  ⮕ Get the currently highlighted object.
  │  ⤷ Uses: Optional, self.highlighted_object

src.gamelib.tools.editor.light_editor_tool.LightEditorTool(EditorTool) @ src/gamelib/tools/editor/light_editor_tool.py [L20]
  ⮕ Tool for editing lights in the scene.
  ├─ __init__(self, definition: 'ToolDefinition', ctx) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L37]
  │  ⮕ Initialize light editor tool.
  │  ⤷ Uses: List, Optional, Vector3, ctx, definition (+2 more)
  ├─ use(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/light_editor_tool.py [L71]
  │  ⮕ Place a new light at cursor position.
  │  ⤷ Uses: Light, PlaceLightOperation, Vector3, camera, light_position (+18 more)
  ├─ use_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/light_editor_tool.py [L127]
  │  ⮕ Select or move existing light.
  │  ⤷ Uses: Vector3, camera, kwargs, kwargs.get, mouse_held (+8 more)
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/light_editor_tool.py [L164]
  │  ⮕ Update placement position and light preview.
  │  ⤷ Uses: camera, delta_time, hit, hit_pos, scene (+6 more)
  ├─ finish_move(self) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L191]
  │  ⮕ Finish moving a light and record in history.
  │  ⤷ Uses: Vector3, Vector3(self.selected_light.position).allclose, self.is_moving, self.move_original_position, self.selected_light (+1 more)
  ├─ delete_selected(self) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L203]
  │  ⮕ Delete the currently selected light.
  │  ⤷ Uses: DeleteLightOperation, operation, self.editor_history, self.editor_history.execute, self.lights_list (+3 more)
  ├─ set_light_type(self, light_type: str) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L222]
  │  ⮕ Set the type of light to place.
  │  ⤷ Uses: light_type, self.light_type
  ├─ set_light_color(self, color: Vector3) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L235]
  │  ⮕ Set the color of lights to place.
  │  ⤷ Uses: Vector3, color, self.light_color
  ├─ set_light_intensity(self, intensity: float) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L245]
  │  ⮕ Set the intensity of lights to place.
  │  ⤷ Uses: intensity, self.light_intensity
  ├─ on_equipped(self) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L255]
  │  ⮕ Called when tool is equipped.
  │  ⤷ Uses: self.light_type, self.name
  ├─ on_unequipped(self) -> None @ src/gamelib/tools/editor/light_editor_tool.py [L264]
  │  ⮕ Called when tool is unequipped.
  │  ⤷ Uses: self.finish_move, self.is_moving
  ├─ _update_light_move(self, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/light_editor_tool.py [L271]
  │  ⮕ Update light position during move operation.
  │  ⤷ Uses: Vector3, camera, hit, hit_pos, new_position (+7 more)
  ├─ _select_nearest_light(self, camera: 'Camera') -> Optional['Light'] @ src/gamelib/tools/editor/light_editor_tool.py [L300]
  │  ⮕ Select the light nearest to the cursor.
  │  ⤷ Uses: (closest_point - light.position).length, Optional, camera, camera._front, camera.position (+13 more)
  ├─ _get_light_at_cursor(self, camera: 'Camera') -> Optional['Light'] @ src/gamelib/tools/editor/light_editor_tool.py [L337]
  │  ⮕ Get light under cursor (for highlighting).
  │  ⤷ Uses: Optional, camera, self._select_nearest_light
  ├─ get_selected_light(self) -> Optional['Light'] @ src/gamelib/tools/editor/light_editor_tool.py [L349]
  │  ⮕ Get the currently selected light.
  │  ⤷ Uses: Optional, self.selected_light
  ├─ get_highlighted_light(self) -> Optional['Light'] @ src/gamelib/tools/editor/light_editor_tool.py [L353]
  │  ⮕ Get the currently highlighted light.
  │  ⤷ Uses: Optional, self.highlighted_light

src.gamelib.tools.editor.model_placement_tool.ModelPlacementTool(EditorTool) @ src/gamelib/tools/editor/model_placement_tool.py [L22]
  ⮕ Tool for placing models from a library.
  ├─ __init__(self, definition: 'ToolDefinition', ctx) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L41]
  │  ⮕ Initialize model placement tool.
  │  ⤷ Uses: Dict, List, Optional, PlacementPreview, Vector3 (+4 more)
  ├─ _load_model_library(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L72]
  │  ⮕ Load available models from configured directory.
  │  ⤷ Uses: PROJECT_ROOT, glb_path, glb_path.exists, gltf_path, gltf_path.exists (+13 more)
  ├─ select_model_by_index(self, index: int) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L105]
  │  ⮕ Select a model from the library by index.
  │  ⤷ Uses: index, self._load_preview_model, self.available_models, self.model_library, self.selected_model_name
  ├─ select_next_model(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L121]
  │  ⮕ Select next model in library (cycle).
  │  ⤷ Uses: next_index, self.available_models, self.current_model_index, self.select_model_by_index
  ├─ select_previous_model(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L128]
  │  ⮕ Select previous model in library (cycle).
  │  ⤷ Uses: prev_index, self.available_models, self.current_model_index, self.select_model_by_index
  ├─ _load_preview_model(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L135]
  │  ⮕ Load the selected model for preview.
  │  ⤷ Uses: Exception, GltfLoader, e, loader, loader.load (+6 more)
  ├─ use(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/model_placement_tool.py [L149]
  │  ⮕ Place model at current preview position.
  │  ⤷ Uses: Exception, GltfLoader, PlaceObjectOperation, Vector3, e (+17 more)
  ├─ use_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/model_placement_tool.py [L200]
  │  ⮕ Rotate preview (continuous drag).
  │  ⤷ Uses: abs, kwargs, kwargs.get, math, math.pi (+4 more)
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/model_placement_tool.py [L226]
  │  ⮕ Update preview position and validation.
  │  ⤷ Uses: Vector3, camera, delta_time, hit, hit_pos (+13 more)
  ├─ _validate_placement(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor/model_placement_tool.py [L263]
  │  ⮕ Check if current placement is valid.
  │  ⤷ Uses: self.preview_position, self.preview_position.y
  ├─ rotate_preview(self, angle_degrees: float) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L286]
  │  ⮕ Rotate preview by fixed angle (discrete rotation).
  │  ⤷ Uses: angle_degrees, math, math.pi, math.radians, self.preview_rotation
  ├─ on_equipped(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L297]
  │  ⮕ Called when tool is equipped.
  │  ⤷ Uses: InputCommand, InputCommand.TOOL_MODEL_NEXT, InputCommand.TOOL_MODEL_PREVIOUS, self.available_models, self.input_manager (+6 more)
  ├─ on_unequipped(self) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L318]
  │  ⮕ Called when tool is unequipped.
  │  ⤷ Uses: AttributeError, InputCommand, InputCommand.TOOL_MODEL_NEXT, InputCommand.TOOL_MODEL_PREVIOUS, KeyError (+4 more)
  ├─ render_preview(self, program, textured_program, preview_program, camera, lights, shadow_maps) -> None @ src/gamelib/tools/editor/model_placement_tool.py [L335]
  │  ⮕ Render placement preview.
  │  ⤷ Uses: camera, preview_program, program, self.preview, self.preview.render (+1 more)
  ├─ get_current_model_name(self) -> str @ src/gamelib/tools/editor/model_placement_tool.py [L350]
  │  ⮕ Get the name of the currently selected model.
  │  ⤷ Uses: self.selected_model_name
  ├─ get_model_count(self) -> int @ src/gamelib/tools/editor/model_placement_tool.py [L354]
  │  ⮕ Get the number of available models.
  │  ⤷ Uses: self.available_models

src.gamelib.tools.editor.object_editor_tool.ObjectEditorTool(EditorTool) @ src/gamelib/tools/editor/object_editor_tool.py [L25]
  ⮕ Multi-purpose object manipulation tool.
  ├─ __init__(self, definition: 'ToolDefinition', ctx) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L43]
  │  ⮕ Initialize object editor tool.
  │  ⤷ Uses: Dict, Optional, Quaternion, Vector3, ctx (+2 more)
  ├─ use(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/object_editor_tool.py [L76]
  │  ⮕ Primary action: Select object or start move operation.
  │  ⤷ Uses: Vector3, camera, hit, hit_pos, kwargs (+11 more)
  ├─ use_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/editor/object_editor_tool.py [L118]
  │  ⮕ Secondary action: Rotate selected object (continuous drag).
  │  ⤷ Uses: Quaternion, Quaternion.from_y_rotation, delta_angle, kwargs, kwargs.get (+11 more)
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/object_editor_tool.py [L158]
  │  ⮕ Update tool state and highlight objects.
  │  ⤷ Uses: camera, delta_time, enumerate, hasattr, hit (+24 more)
  ├─ finish_move(self) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L209]
  │  ⮕ Finish move operation and record in history.
  │  ⤷ Uses: MoveObjectOperation, Vector3, current_pos, np, np.allclose (+10 more)
  ├─ finish_rotate(self) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L230]
  │  ⮕ Finish rotate operation and record in history.
  │  ⤷ Uses: Quaternion, RotateObjectOperation, current_rot, operation, self.editor_history (+6 more)
  ├─ rotate_selected(self, angle_degrees: float) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L250]
  │  ⮕ Rotate selected object by a fixed angle (discrete rotation).
  │  ⤷ Uses: Quaternion, Quaternion.from_y_rotation, RotateObjectOperation, angle_degrees, angle_radians (+10 more)
  ├─ delete_selected(self, scene: 'Scene') -> None @ src/gamelib/tools/editor/object_editor_tool.py [L280]
  │  ⮕ Delete the currently selected object.
  │  ⤷ Uses: DeleteObjectOperation, operation, scene, self.editor_history, self.editor_history.execute (+2 more)
  ├─ duplicate_selected(self) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L294]
  │  ⮕ Duplicate the currently selected object.
  │  ⤷ Uses: self.selected_object
  ├─ on_equipped(self) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L304]
  │  ⮕ Called when tool is equipped.
  │  ⤷ Uses: self.name
  ├─ on_unequipped(self) -> None @ src/gamelib/tools/editor/object_editor_tool.py [L312]
  │  ⮕ Called when tool is unequipped.
  │  ⤷ Uses: hasattr, mesh_idx, original_emissive, self.finish_move, self.finish_rotate (+10 more)
  ├─ _update_move(self, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/editor/object_editor_tool.py [L338]
  │  ⮕ Update object position during move operation.
  │  ⤷ Uses: camera, hit, hit_pos, new_position, scene (+4 more)
  ├─ _raycast_objects(self, camera: 'Camera', scene: 'Scene') -> Optional[tuple] @ src/gamelib/tools/editor/object_editor_tool.py [L360]
  │  ⮕ Raycast from camera to find object under cursor.
  │  ⤷ Uses: (closest_point - obj.position).length, Optional, Vector3, camera, camera._front (+21 more)
  ├─ get_selected_object(self) -> Optional['SceneObject'] @ src/gamelib/tools/editor/object_editor_tool.py [L411]
  │  ⮕ Get the currently selected object.
  │  ⤷ Uses: Optional, self.selected_object
  ├─ get_highlighted_object(self) -> Optional['SceneObject'] @ src/gamelib/tools/editor/object_editor_tool.py [L415]
  │  ⮕ Get the currently highlighted object.
  │  ⤷ Uses: Optional, self.highlighted_object

src.gamelib.tools.editor_history.DeleteLightOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L246]
  ⮕ Delete a light from the scene.
  ⤖ Siblings: DeleteObjectOperation, EditorHistory, EditorOperation (+5 more)
  ├─ __init__(self, light: 'Light', lights_list: List['Light']) -> None @ src/gamelib/tools/editor_history.py [L249]
  │  ⮕ Initialize delete light operation.
  │  ⤷ Uses: List, Optional, light, lights_list
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L261]
  │  ⮕ Remove light from lights list.
  │  ⤷ Uses: self.light, self.lights_list, self.lights_list.index, self.lights_list.remove
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L269]
  │  ⮕ Restore light to lights list.
  │  ⤷ Uses: self.index, self.light, self.lights_list, self.lights_list.append, self.lights_list.insert
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L277]

src.gamelib.tools.editor_history.DeleteObjectOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L88]
  ⮕ Delete an object from the scene.
  ⤖ Siblings: DeleteLightOperation, EditorHistory, EditorOperation (+5 more)
  ├─ __init__(self, obj: 'SceneObject') -> None @ src/gamelib/tools/editor_history.py [L91]
  │  ⮕ Initialize delete operation.
  │  ⤷ Uses: Optional, obj
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L101]
  │  ⮕ Remove object from scene.
  │  ⤷ Uses: scene, scene.objects, scene.objects.index, scene.objects.remove, self.obj
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L109]
  │  ⮕ Restore object to scene.
  │  ⤷ Uses: scene, scene.objects, scene.objects.append, scene.objects.insert, self.index (+1 more)
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L118]
  │  ⤷ Uses: self.obj, self.obj.name

src.gamelib.tools.editor_history.EditorHistory @ src/gamelib/tools/editor_history.py [L281]
  ⮕ Manages undo/redo history for the level editor.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorOperation (+5 more)
  ├─ __init__(self, max_history: int) -> None @ src/gamelib/tools/editor_history.py [L291]
  │  ⮕ Initialize editor history.
  │  ⤷ Uses: EditorOperation, List, max_history
  ├─ execute(self, operation: EditorOperation, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L302]
  │  ⮕ Execute an operation and add it to history.
  │  ⤷ Uses: EditorOperation, operation, operation.execute, operation.get_description, scene (+6 more)
  ├─ undo(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L320]
  │  ⮕ Undo the last operation.
  │  ⤷ Uses: operation, operation.get_description, operation.undo, scene, self.redo_stack (+3 more)
  ├─ redo(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L341]
  │  ⮕ Redo the last undone operation.
  │  ⤷ Uses: operation, operation.execute, operation.get_description, scene, self.redo_stack (+3 more)
  ├─ can_undo(self) -> bool @ src/gamelib/tools/editor_history.py [L362]
  │  ⮕ Check if there are operations to undo.
  │  ⤷ Uses: self.undo_stack
  ├─ can_redo(self) -> bool @ src/gamelib/tools/editor_history.py [L366]
  │  ⮕ Check if there are operations to redo.
  │  ⤷ Uses: self.redo_stack
  ├─ get_undo_description(self) -> Optional[str] @ src/gamelib/tools/editor_history.py [L370]
  │  ⮕ Get description of next undo operation.
  │  ⤷ Uses: Optional, self.undo_stack, self.undo_stack[-1].get_description
  ├─ get_redo_description(self) -> Optional[str] @ src/gamelib/tools/editor_history.py [L376]
  │  ⮕ Get description of next redo operation.
  │  ⤷ Uses: Optional, self.redo_stack, self.redo_stack[-1].get_description
  ├─ clear(self) -> None @ src/gamelib/tools/editor_history.py [L382]
  │  ⮕ Clear all history.
  │  ⤷ Uses: self.redo_stack, self.redo_stack.clear, self.undo_stack, self.undo_stack.clear
  ├─ __repr__(self) -> None @ src/gamelib/tools/editor_history.py [L387]
  │  ⤷ Uses: self.redo_stack, self.undo_stack

src.gamelib.tools.editor_history.EditorOperation(ABC) @ src/gamelib/tools/editor_history.py [L18]
  ⮕ Abstract base class for undoable editor operations.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L27]
  │  ⮕ Execute the operation.
  │  ⤷ Uses: abstractmethod
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L40]
  │  ⮕ Undo the operation.
  │  ⤷ Uses: abstractmethod
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L50]
  │  ⮕ Get human-readable description of this operation.
  │  ⤷ Uses: abstractmethod

src.gamelib.tools.editor_history.MoveObjectOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L122]
  ⮕ Move an object to a new position.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ __init__(self, obj: 'SceneObject', old_position: Vector3, new_position: Vector3) -> None @ src/gamelib/tools/editor_history.py [L125]
  │  ⮕ Initialize move operation.
  │  ⤷ Uses: Vector3, new_position, obj, old_position
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L138]
  │  ⮕ Move object to new position.
  │  ⤷ Uses: Vector3, self.new_position, self.obj
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L143]
  │  ⮕ Restore object to old position.
  │  ⤷ Uses: Vector3, self.obj, self.old_position
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L147]
  │  ⤷ Uses: self.obj, self.obj.name

src.gamelib.tools.editor_history.PlaceLightOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L209]
  ⮕ Place a new light in the scene.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ __init__(self, light: 'Light', lights_list: List['Light'], render_pipeline, camera) -> None @ src/gamelib/tools/editor_history.py [L212]
  │  ⮕ Initialize place light operation.
  │  ⤷ Uses: List, camera, light, lights_list, render_pipeline
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L228]
  │  ⮕ Add light to lights list and initialize shadow map.
  │  ⤷ Uses: self.camera, self.light, self.lights_list, self.lights_list.append, self.render_pipeline (+1 more)
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L237]
  │  ⮕ Remove light from lights list.
  │  ⤷ Uses: self.light, self.lights_list, self.lights_list.remove, self.was_placed
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L242]

src.gamelib.tools.editor_history.PlaceObjectOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L60]
  ⮕ Place a new object in the scene.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ __init__(self, obj: 'SceneObject') -> None @ src/gamelib/tools/editor_history.py [L63]
  │  ⮕ Initialize place operation.
  │  ⤷ Uses: obj
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L73]
  │  ⮕ Add object to scene.
  │  ⤷ Uses: scene, scene.add_object, self.obj
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L79]
  │  ⮕ Remove object from scene.
  │  ⤷ Uses: scene, scene.objects, scene.objects.remove, self.obj, self.was_placed
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L84]
  │  ⤷ Uses: self.obj, self.obj.name

src.gamelib.tools.editor_history.RotateObjectOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L151]
  ⮕ Rotate an object.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ __init__(self, obj: 'SceneObject', old_rotation, new_rotation) -> None @ src/gamelib/tools/editor_history.py [L154]
  │  ⮕ Initialize rotate operation.
  │  ⤷ Uses: copy, copy.deepcopy, new_rotation, obj, old_rotation
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L167]
  │  ⮕ Rotate object to new orientation.
  │  ⤷ Uses: copy, copy.deepcopy, self.new_rotation, self.obj
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L172]
  │  ⮕ Restore object to old orientation.
  │  ⤷ Uses: copy, copy.deepcopy, self.obj, self.old_rotation
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L176]
  │  ⤷ Uses: self.obj, self.obj.name

src.gamelib.tools.editor_history.ScaleObjectOperation(EditorOperation) @ src/gamelib/tools/editor_history.py [L180]
  ⮕ Scale an object.
  ⤖ Siblings: DeleteLightOperation, DeleteObjectOperation, EditorHistory (+5 more)
  ├─ __init__(self, obj: 'SceneObject', old_scale: Vector3, new_scale: Vector3) -> None @ src/gamelib/tools/editor_history.py [L183]
  │  ⮕ Initialize scale operation.
  │  ⤷ Uses: Vector3, new_scale, obj, old_scale
  ├─ execute(self, scene: 'Scene') -> bool @ src/gamelib/tools/editor_history.py [L196]
  │  ⮕ Scale object to new size.
  │  ⤷ Uses: Vector3, self.new_scale, self.obj
  ├─ undo(self, scene: 'Scene') -> None @ src/gamelib/tools/editor_history.py [L201]
  │  ⮕ Restore object to old size.
  │  ⤷ Uses: Vector3, self.obj, self.old_scale
  ├─ get_description(self) -> str @ src/gamelib/tools/editor_history.py [L205]
  │  ⤷ Uses: self.obj, self.obj.name

src.gamelib.tools.grid_overlay.GridOverlay @ src/gamelib/tools/grid_overlay.py [L16]
  ⮕ Renders a visual grid overlay for level editing.
  ├─ __init__(self, ctx: moderngl.Context, grid_size: float, grid_extent: int) -> None @ src/gamelib/tools/grid_overlay.py [L27]
  │  ⮕ Initialize grid overlay.
  │  ⤷ Uses: ctx, grid_extent, grid_size, moderngl, moderngl.Context (+2 more)
  ├─ _generate_grid_geometry(self) -> None @ src/gamelib/tools/grid_overlay.py [L47]
  │  ⮕ Generate grid line vertices with much larger extent.
  │  ⤷ Uses: half_extent, i, np, np.array, self.ctx (+9 more)
  ├─ _create_shader_program(self) -> None @ src/gamelib/tools/grid_overlay.py [L77]
  │  ⮕ Create simple shader for grid lines.
  │  ⤷ Uses: fragment_shader, self.ctx, self.ctx.program, self.ctx.vertex_array, self.program (+2 more)
  ├─ render(self, view_matrix: Matrix44, projection_matrix: Matrix44, camera_pos: Vector3 | None) -> None @ src/gamelib/tools/grid_overlay.py [L114]
  │  ⮕ Render the grid overlay.
  │  ⤷ Uses: Matrix44, Matrix44.identity, Vector3, model, moderngl (+17 more)
  ├─ set_visible(self, visible: bool) -> None @ src/gamelib/tools/grid_overlay.py [L146]
  │  ⮕ Set grid visibility.
  │  ⤷ Uses: visible
  ├─ toggle_visible(self) -> None @ src/gamelib/tools/grid_overlay.py [L155]
  │  ⮕ Toggle grid visibility.
  │  ⤷ Uses: self.visible
  ├─ set_grid_size(self, size: float) -> None @ src/gamelib/tools/grid_overlay.py [L160]
  │  ⮕ Change grid cell size.
  │  ⤷ Uses: self._generate_grid_geometry, size
  ├─ set_grid_extent(self, extent: int) -> None @ src/gamelib/tools/grid_overlay.py [L170]
  │  ⮕ Change grid extent (number of lines).
  │  ⤷ Uses: extent, self._generate_grid_geometry
  ├─ close(self) -> None @ src/gamelib/tools/grid_overlay.py [L180]
  │  ⮕ Explicitly release GL resources.
  │  ⤷ Uses: hasattr, self.program, self.program.release, self.vao, self.vao.release (+2 more)
  ├─ __del__(self) -> None @ src/gamelib/tools/grid_overlay.py [L189]
  │  ⮕ Destructor: attempt to release resources safely.
  │  ⤷ Uses: Exception, self.close

src.gamelib.tools.inventory.Inventory @ src/gamelib/tools/inventory.py [L12]
  ⮕ Manages tool inventory with hotbar and storage.
  ├─ __init__(self) -> None @ src/gamelib/tools/inventory.py [L25]
  │  ⮕ Initialize empty inventory.
  │  ⤷ Uses: Dict, List, Optional, ToolCategory, defaultdict (+1 more)
  ├─ add_tool(self, tool_id: str, category: ToolCategory) -> None @ src/gamelib/tools/inventory.py [L31]
  │  ⮕ Add a tool to inventory.
  │  ⤷ Uses: ToolCategory, category, self.categories, self.categories[category].append, self.storage (+2 more)
  ├─ remove_tool(self, tool_id: str) -> None @ src/gamelib/tools/inventory.py [L43]
  │  ⮕ Remove a tool from inventory.
  │  ⤷ Uses: category_tools, category_tools.remove, i, self.HOTBAR_SIZE, self.categories (+5 more)
  ├─ assign_to_hotbar(self, tool_id: str, slot: int) -> bool @ src/gamelib/tools/inventory.py [L63]
  │  ⮕ Assign a tool to a hotbar slot.
  │  ⤷ Uses: self.HOTBAR_SIZE, self.hotbar, self.storage, slot, tool_id
  ├─ clear_hotbar_slot(self, slot: int) -> None @ src/gamelib/tools/inventory.py [L83]
  │  ⮕ Clear a hotbar slot.
  │  ⤷ Uses: self.HOTBAR_SIZE, self.hotbar, slot
  ├─ get_hotbar_tool(self, slot: int) -> Optional[str] @ src/gamelib/tools/inventory.py [L93]
  │  ⮕ Get tool ID in a hotbar slot.
  │  ⤷ Uses: Optional, self.HOTBAR_SIZE, self.hotbar, slot
  ├─ get_tools_by_category(self, category: ToolCategory) -> List[str] @ src/gamelib/tools/inventory.py [L107]
  │  ⮕ Get all tools in a category.
  │  ⤷ Uses: List, ToolCategory, category, self.categories, self.categories[category].copy
  ├─ has_tool(self, tool_id: str) -> bool @ src/gamelib/tools/inventory.py [L119]
  │  ⮕ Check if inventory contains a tool.
  │  ⤷ Uses: self.storage, tool_id
  ├─ get_all_tools(self) -> List[str] @ src/gamelib/tools/inventory.py [L131]
  │  ⮕ Get all tool IDs in inventory.
  │  ⤷ Uses: List, self.storage, self.storage.copy
  ├─ find_next_hotbar_slot(self, current_slot: int, direction: int) -> Optional[int] @ src/gamelib/tools/inventory.py [L140]
  │  ⮕ Find the next non-empty hotbar slot.
  │  ⤷ Uses: Optional, any, current_slot, direction, i (+3 more)
  ├─ auto_assign_to_hotbar(self) -> None @ src/gamelib/tools/inventory.py [L163]
  │  ⮕ Auto-assign tools to hotbar slots.
  │  ⤷ Uses: self.HOTBAR_SIZE, self.hotbar, self.storage, slot, tool_index
  ├─ __repr__(self) -> None @ src/gamelib/tools/inventory.py [L176]
  │  ⤷ Uses: ', '.join, hotbar_str, i, self.HOTBAR_SIZE, self.hotbar (+1 more)

src.gamelib.tools.placement_preview.PlacementPreview @ src/gamelib/tools/placement_preview.py [L17]
  ⮕ Renders a transparent preview of an object being placed.
  ├─ __init__(self, ctx: moderngl.Context) -> None @ src/gamelib/tools/placement_preview.py [L27]
  │  ⮕ Initialize placement preview.
  │  ⤷ Uses: Optional, Vector3, ctx, moderngl, moderngl.Context
  ├─ set_model(self, model: 'Model') -> None @ src/gamelib/tools/placement_preview.py [L44]
  │  ⮕ Set a Model to preview.
  │  ⤷ Uses: model
  ├─ set_scene_object(self, scene_object: 'SceneObject') -> None @ src/gamelib/tools/placement_preview.py [L55]
  │  ⮕ Set a SceneObject to preview.
  │  ⤷ Uses: scene_object
  ├─ update_transform(self, position: Vector3, rotation: Vector3, is_valid: bool) -> None @ src/gamelib/tools/placement_preview.py [L66]
  │  ⮕ Update preview position, rotation, and validity.
  │  ⤷ Uses: Vector3, is_valid, position, rotation
  ├─ hide(self) -> None @ src/gamelib/tools/placement_preview.py [L80]
  │  ⮕ Hide the preview.
  ├─ render_to_scene(self, scene: 'Scene') -> None @ src/gamelib/tools/placement_preview.py [L84]
  │  ⮕ Add preview model to scene for rendering via normal pipeline.
  │  ⤷ Uses: Vector3, current_color, hasattr, mesh, mesh.material (+15 more)
  ├─ remove_from_scene(self, scene: 'Scene') -> None @ src/gamelib/tools/placement_preview.py [L150]
  │  ⮕ Remove preview model from scene after rendering.
  │  ⤷ Uses: enumerate, hasattr, i, mesh, mesh.material (+7 more)
  ├─ get_transform_matrix(self) -> Matrix44 @ src/gamelib/tools/placement_preview.py [L172]
  │  ⮕ Get the current transform matrix.
  │  ⤷ Uses: Matrix44, Matrix44.from_quaternion, Matrix44.from_scale, Matrix44.from_translation, Quaternion (+6 more)
  ├─ __repr__(self) -> None @ src/gamelib/tools/placement_preview.py [L191]
  │  ⤷ Uses: self.is_valid, self.position, self.visible, status, visible

src.gamelib.tools.tool_base.EditorTool(Tool) @ src/gamelib/tools/tool_base.py [L182]
  ⮕ Base class for level editor tools.
  ⤖ Siblings: Tool
  ├─ __init__(self, definition: ToolDefinition) -> None @ src/gamelib/tools/tool_base.py [L192]
  │  ⤷ Uses: ToolDefinition, definition, self.get_property, super().__init__
  ├─ snap_to_grid(self, position: Vector3) -> Vector3 @ src/gamelib/tools/tool_base.py [L202]
  │  ⮕ Snap a position to the grid.
  │  ⤷ Uses: Vector3, position, position.x, position.y, position.z (+4 more)
  ├─ raycast_scene(self, camera: 'Camera', scene: 'Scene') -> Optional[tuple] @ src/gamelib/tools/tool_base.py [L222]
  │  ⮕ Raycast from camera into scene.
  │  ⤷ Uses: Optional, Vector3, abs, camera, camera._front (+9 more)

src.gamelib.tools.tool_base.Tool(ABC) @ src/gamelib/tools/tool_base.py [L19]
  ⮕ Abstract base class for all tools.
  ⤖ Siblings: EditorTool
  ├─ __init__(self, definition: ToolDefinition) -> None @ src/gamelib/tools/tool_base.py [L37]
  │  ⮕ Initialize tool from definition.
  │  ⤷ Uses: ToolDefinition, ToolState, ToolState.IDLE, definition, definition.category (+6 more)
  ├─ use(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/tool_base.py [L61]
  │  ⮕ Use the tool (primary action, typically left click).
  │  ⤷ Uses: abstractmethod
  ├─ use_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/tool_base.py [L76]
  │  ⮕ Use tool's secondary action (typically right click).
  │  ⤷ Uses: abstractmethod
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/tool_base.py [L90]
  │  ⮕ Update tool state (cooldowns, continuous actions, previews).
  │  ⤷ Uses: ToolState, ToolState.COOLDOWN, ToolState.IDLE, ToolState.USING, delta_time (+4 more)
  ├─ _start_use(self) -> None @ src/gamelib/tools/tool_base.py [L113]
  │  ⮕ Begin using the tool.
  │  ⤷ Uses: ToolState, ToolState.USING, self._finish_use, self.use_duration
  ├─ _finish_use(self) -> None @ src/gamelib/tools/tool_base.py [L126]
  │  ⮕ Finish using the tool.
  │  ⤷ Uses: ToolState, ToolState.COOLDOWN, ToolState.IDLE, self.cooldown_time
  ├─ can_use(self) -> bool @ src/gamelib/tools/tool_base.py [L138]
  │  ⮕ Check if tool can be used right now.
  │  ⤷ Uses: ToolState, ToolState.IDLE, self.state
  ├─ on_equipped(self) -> None @ src/gamelib/tools/tool_base.py [L148]
  │  ⮕ Called when tool becomes active (equipped by player).
  │  ⤷ Uses: abstractmethod
  ├─ on_unequipped(self) -> None @ src/gamelib/tools/tool_base.py [L157]
  │  ⮕ Called when tool is deactivated (switched to another tool).
  │  ⤷ Uses: abstractmethod
  ├─ get_property(self, key: str, default) -> None @ src/gamelib/tools/tool_base.py [L165]
  │  ⮕ Get a property from the tool's JSON definition.
  │  ⤷ Uses: default, key, self.properties, self.properties.get
  ├─ __repr__(self) -> None @ src/gamelib/tools/tool_base.py [L178]
  │  ⤷ Uses: self.id, self.name, self.state, self.state.name

src.gamelib.tools.tool_category.ToolCategory(Enum) @ src/gamelib/tools/tool_category.py [L10]
  ⮕ Tool categories for organization and filtering.

src.gamelib.tools.tool_definition.ToolDefinition @ src/gamelib/tools/tool_definition.py [L14]
  ⮕ Data descriptor for a tool loaded from JSON.
  ⤖ Siblings: ToolsetDefinition
  ├─ from_dict(cls, data: Dict[str, Any]) -> 'ToolDefinition' @ src/gamelib/tools/tool_definition.py [L33]
  │  ⮕ Create a tool definition from JSON data.
  │  ⤷ Uses: Any, Dict, KeyError, ToolCategory, ValueError (+5 more)

src.gamelib.tools.tool_definition.ToolsetDefinition @ src/gamelib/tools/tool_definition.py [L85]
  ⮕ Container for multiple tool definitions loaded from a JSON file.
  ⤖ Siblings: ToolDefinition
  ├─ from_dict(cls, data: Dict[str, Any]) -> 'ToolsetDefinition' @ src/gamelib/tools/tool_definition.py [L94]
  │  ⮕ Load a toolset from JSON data.
  │  ⤷ Uses: Any, Dict, ToolDefinition, ToolDefinition.from_dict, classmethod (+4 more)

src.gamelib.tools.tool_manager.ToolManager @ src/gamelib/tools/tool_manager.py [L20]
  ⮕ Central manager for all tools in the game.
  ├─ __init__(self, ctx) -> None @ src/gamelib/tools/tool_manager.py [L32]
  │  ⮕ Initialize tool manager.
  │  ⤷ Uses: Dict, Inventory, Optional, Tool, ctx
  ├─ register_tool(self, tool: Tool) -> None @ src/gamelib/tools/tool_manager.py [L45]
  │  ⮕ Register a tool instance.
  │  ⤷ Uses: Tool, self.inventory, self.inventory.add_tool, self.tools, tool (+2 more)
  ├─ load_tools_from_json(self, path: Path | str) -> None @ src/gamelib/tools/tool_manager.py [L55]
  │  ⮕ Load tools from a JSON file.
  │  ⤷ Uses: Exception, Path, ToolsetDefinition, ToolsetDefinition.from_dict, data (+21 more)
  ├─ _instantiate_tool(self, definition) -> Optional[Tool] @ src/gamelib/tools/tool_manager.py [L105]
  │  ⮕ Instantiate a tool from its definition.
  │  ⤷ Uses: DeleteTool, ImportError, LightEditorTool, ModelPlacementTool, ObjectEditorTool (+12 more)
  ├─ equip_tool(self, tool_id: str) -> bool @ src/gamelib/tools/tool_manager.py [L147]
  │  ⮕ Equip a tool by its ID.
  │  ⤷ Uses: self.active_tool, self.active_tool.name, self.active_tool.on_equipped, self.active_tool.on_unequipped, self.tools (+1 more)
  ├─ equip_hotbar_slot(self, slot: int) -> bool @ src/gamelib/tools/tool_manager.py [L172]
  │  ⮕ Equip tool from hotbar slot.
  │  ⤷ Uses: self.equip_tool, self.inventory, self.inventory.get_hotbar_tool, slot, tool_id
  ├─ next_tool(self) -> None @ src/gamelib/tools/tool_manager.py [L188]
  │  ⮕ Cycle to next tool in hotbar (scroll wheel up).
  │  ⤷ Uses: next_slot, self.active_slot, self.active_tool, self.active_tool.name, self.equip_hotbar_slot (+2 more)
  ├─ previous_tool(self) -> None @ src/gamelib/tools/tool_manager.py [L198]
  │  ⮕ Cycle to previous tool in hotbar (scroll wheel down).
  │  ⤷ Uses: prev_slot, self.active_slot, self.active_tool, self.active_tool.name, self.equip_hotbar_slot (+2 more)
  ├─ use_active_tool(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/tool_manager.py [L208]
  │  ⮕ Use the active tool's primary action.
  │  ⤷ Uses: camera, kwargs, scene, self.active_tool, self.active_tool.use
  ├─ use_active_tool_secondary(self, camera: 'Camera', scene: 'Scene', **kwargs) -> bool @ src/gamelib/tools/tool_manager.py [L224]
  │  ⮕ Use the active tool's secondary action.
  │  ⤷ Uses: camera, kwargs, scene, self.active_tool, self.active_tool.use_secondary
  ├─ update(self, delta_time: float, camera: 'Camera', scene: 'Scene') -> None @ src/gamelib/tools/tool_manager.py [L240]
  │  ⮕ Update active tool.
  │  ⤷ Uses: camera, delta_time, scene, self.active_tool, self.active_tool.update
  ├─ get_active_tool(self) -> Optional[Tool] @ src/gamelib/tools/tool_manager.py [L252]
  │  ⮕ Get the currently active tool.
  │  ⤷ Uses: Optional, Tool, self.active_tool
  ├─ get_active_slot(self) -> int @ src/gamelib/tools/tool_manager.py [L261]
  │  ⮕ Get the currently active hotbar slot.
  │  ⤷ Uses: self.active_slot
  ├─ __repr__(self) -> None @ src/gamelib/tools/tool_manager.py [L270]
  │  ⤷ Uses: active, self.active_slot, self.active_tool, self.active_tool.name, self.tools

src.gamelib.tools.tool_state.ToolState(Enum) @ src/gamelib/tools/tool_state.py [L10]
  ⮕ State machine for tool usage.

src.gamelib.ui.menus.main_menu.MainMenu @ src/gamelib/ui/menus/main_menu.py [L17]
  ⮕ Main menu for scene selection and game start.
  ├─ __init__(self, scene_manager: SceneManager) -> None @ src/gamelib/ui/menus/main_menu.py [L20]
  │  ⮕ Initialize main menu.
  │  ⤷ Uses: Optional, SceneManager, iter, next, scene_manager (+3 more)
  ├─ draw(self, screen_width: int, screen_height: int) -> tuple[bool, Optional[str]] @ src/gamelib/ui/menus/main_menu.py [L36]
  │  ⮕ Draw main menu.
  │  ⤷ Uses: Optional, available_width, button_height, button_width, button_x (+36 more)

src.gamelib.ui.menus.object_inspector.ObjectInspector @ src/gamelib/ui/menus/object_inspector.py [L22]
  ⮕ Inspector panel for editing selected object properties.
  ├─ __init__(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L25]
  │  ⮕ Initialize object inspector.
  │  ⤷ Uses: EditorHistory, Optional, SceneObject, Vector3
  ├─ draw(self, screen_width: int, screen_height: int, force_show: bool) -> None @ src/gamelib/ui/menus/object_inspector.py [L41]
  │  ⮕ Draw object inspector panel (docked on right side).
  │  ⤷ Uses: expanded, force_show, has_selection, imgui, imgui.ALWAYS (+17 more)
  ├─ _draw_preview_mode(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L88]
  │  ⮕ Draw preview mode for items from thumbnail menu.
  │  ⤷ Uses: imgui, imgui.collapsing_header, imgui.separator, imgui.text, item (+7 more)
  ├─ _draw_edit_mode(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L117]
  │  ⮕ Draw edit mode for scene objects.
  │  ⤷ Uses: Vector3, button_width, hasattr, imgui, imgui.button (+13 more)
  ├─ _draw_transform_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L157]
  │  ⮕ Draw transform properties (position, rotation, scale).
  │  ⤷ Uses: Vector3, changed, edit_vector3, obj, obj.position (+13 more)
  ├─ _draw_appearance_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L205]
  │  ⮕ Draw appearance properties (color, material, etc.).
  │  ⤷ Uses: changed, color, current_color, edit_color, edit_text (+11 more)
  ├─ _draw_physics_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L230]
  │  ⮕ Draw physics properties.
  │  ⤷ Uses: changed, edit_float, getattr, hasattr, imgui (+8 more)
  ├─ _draw_advanced_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L262]
  │  ⮕ Draw advanced properties.
  │  ⤷ Uses: hasattr, id, imgui, imgui.separator, imgui.text (+9 more)
  ├─ _draw_preview_transform_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L282]
  │  ⮕ Draw transform settings for preview item.
  │  ⤷ Uses: changed, hasattr, imgui, imgui.slider_float, isinstance (+14 more)
  ├─ _draw_preview_appearance_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L320]
  │  ⮕ Draw appearance settings for preview item.
  │  ⤷ Uses: changed, color, imgui, imgui.color_edit4, imgui.text (+5 more)
  ├─ _draw_preview_physics_section(self) -> None @ src/gamelib/ui/menus/object_inspector.py [L340]
  │  ⮕ Draw physics settings for preview item.
  │  ⤷ Uses: casts_shadow, changed, imgui, imgui.checkbox, imgui.slider_float (+8 more)
  ├─ set_selected_object(self, obj: Optional[SceneObject]) -> None @ src/gamelib/ui/menus/object_inspector.py [L365]
  │  ⮕ Set the currently selected object.
  │  ⤷ Uses: Optional, SceneObject, Vector3, hasattr, obj (+4 more)
  ├─ set_preview_item(self, item: Optional[dict]) -> None @ src/gamelib/ui/menus/object_inspector.py [L381]
  │  ⮕ Set preview item from thumbnail menu.
  │  ⤷ Uses: Optional, item

src.gamelib.ui.menus.pause_menu.PauseMenu @ src/gamelib/ui/menus/pause_menu.py [L17]
  ⮕ Pause menu for in-game controls.
  ├─ __init__(self, scene_manager: SceneManager) -> None @ src/gamelib/ui/menus/pause_menu.py [L20]
  │  ⮕ Initialize pause menu.
  │  ⤷ Uses: Optional, SceneManager, scene_manager
  ├─ draw(self, screen_width: int, screen_height: int) -> tuple[bool, Optional[str]] @ src/gamelib/ui/menus/pause_menu.py [L34]
  │  ⮕ Draw pause menu.
  │  ⤷ Uses: Optional, action, available_width, button_height, button_width (+28 more)
  ├─ _draw_scene_picker(self, screen_width: int, screen_height: int) -> tuple[bool, Optional[str]] @ src/gamelib/ui/menus/pause_menu.py [L146]
  │  ⮕ Draw scene picker submenu.
  │  ⤷ Uses: Optional, action, available_width, button_height, button_width (+27 more)

src.gamelib.ui.menus.settings_menu.SettingsMenu @ src/gamelib/ui/menus/settings_menu.py [L18]
  ⮕ Settings menu with tabs for different categories.
  ├─ __init__(self, render_pipeline: RenderPipeline, key_bindings: KeyBindings, ui_manager) -> None @ src/gamelib/ui/menus/settings_menu.py [L21]
  │  ⮕ Initialize settings menu.
  │  ⤷ Uses: KeyBindings, RenderPipeline, key_bindings, render_pipeline, ui_manager
  ├─ draw(self, screen_width: int, screen_height: int) -> tuple[bool, Optional[str]] @ src/gamelib/ui/menus/settings_menu.py [L39]
  │  ⮕ Draw settings menu.
  │  ⤷ Uses: Optional, available_width, button_width, button_x, expanded (+29 more)
  ├─ _draw_graphics_tab(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L131]
  │  ⮕ Draw graphics settings tab.
  │  ⤷ Uses: aa_modes, changed, current_aa, current_shadow_size, enabled (+21 more)
  ├─ _draw_controls_tab(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L179]
  │  ⮕ Draw controls rebinding tab.
  │  ⤷ Uses: imgui, imgui.separator, imgui.spacing, imgui.text, imgui.text_colored
  ├─ _draw_gameplay_tab(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L190]
  │  ⮕ Draw gameplay settings tab.
  │  ⤷ Uses: fov, imgui, imgui.separator, imgui.slider_float, imgui.text (+3 more)
  ├─ _draw_ui_tab(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L228]
  │  ⮕ Draw UI settings tab.
  │  ⤷ Uses: current_theme, dim_alpha, imgui, imgui.radio_button, imgui.separator (+14 more)
  ├─ _apply_settings(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L271]
  │  ⮕ Apply all pending settings changes.
  │  ⤷ Uses: self.pending_changes, self.pending_changes.clear
  ├─ reset_to_defaults(self) -> None @ src/gamelib/ui/menus/settings_menu.py [L277]
  │  ⮕ Reset all settings to defaults.
  │  ⤷ Uses: self.pending_changes, self.pending_changes.clear, self.render_pipeline, self.render_pipeline.config, self.ui_manager (+1 more)

src.gamelib.ui.menus.thumbnail_menu.ThumbnailItem @ src/gamelib/ui/menus/thumbnail_menu.py [L22]
  ⮕ Represents an asset thumbnail in the menu.
  ⤖ Siblings: ThumbnailMenu

src.gamelib.ui.menus.thumbnail_menu.ThumbnailMenu @ src/gamelib/ui/menus/thumbnail_menu.py [L31]
  ⮕ Bottom menu bar with tool icons and asset thumbnails.
  ⤖ Siblings: ThumbnailItem
  ├─ __init__(self, tool_manager: ToolManager, thumbnail_size: int, visible_count: int, bottom_menu_height: int, tool_icon_size: int) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L34]
  │  ⮕ Initialize thumbnail menu.
  │  ⤷ Uses: Optional, ThumbnailItem, ToolManager, bottom_menu_height, thumbnail_size (+3 more)
  ├─ add_asset(self, category: str, item: ThumbnailItem) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L83]
  │  ⮕ Add an asset to a category.
  │  ⤷ Uses: ThumbnailItem, category, item, self.assets, self.assets[category].append
  ├─ draw(self, screen_width: int, screen_height: int) -> Tuple[Optional[str], Optional[str], Optional[str]] @ src/gamelib/ui/menus/thumbnail_menu.py [L95]
  │  ⮕ Draw thumbnail menu at bottom of screen.
  │  ⤷ Uses: Optional, Tuple, expanded, frame_selected_category, frame_selected_item (+18 more)
  ├─ _draw_tool_icons(self) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L145]
  │  ⮕ Draw top row with small editor tool icons.
  │  ⤷ Uses: button_label, enumerate, idx, imgui, imgui.COLOR_BUTTON (+20 more)
  ├─ _draw_asset_thumbnails(self) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L197]
  │  ⮕ Draw main section with scrollable asset thumbnails.
  │  ⤷ Uses: categories, category, imgui, imgui.begin_child, imgui.begin_tab_bar (+10 more)
  ├─ _draw_category_thumbnails(self, category: str) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L223]
  │  ⮕ Draw thumbnail grid for a specific category.
  │  ⤷ Uses: asset, asset.id, asset.name, asset_idx, assets (+28 more)
  ├─ populate_from_scene(self, scene) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L304]
  │  ⮕ Populate asset list from scene objects.
  │  ⤷ Uses: ThumbnailItem, category, getattr, hasattr, id (+9 more)
  ├─ set_selected(self, category: Optional[str], item_id: Optional[str], tool_id: Optional[str]) -> None @ src/gamelib/ui/menus/thumbnail_menu.py [L338]
  │  ⮕ Programmatically set selected item.
  │  ⤷ Uses: Optional, category, item_id, tool_id
  ├─ get_selected(self) -> Tuple[Optional[str], Optional[str], Optional[str]] @ src/gamelib/ui/menus/thumbnail_menu.py [L359]
  │  ⮕ Get currently selected items.
  │  ⤷ Uses: Optional, Tuple, self.selected_category, self.selected_item_id, self.selected_tool_id
  ├─ load_thumbnail_image(self, filepath: str) -> Optional[tuple] @ src/gamelib/ui/menus/thumbnail_menu.py [L368]
  │  ⮕ Load thumbnail image from file and cache it for ImGui.
  │  ⤷ Uses: Exception, Optional, Path, e, filepath (+11 more)
  ├─ _parse_png(self, png_data: bytes) -> Tuple[Optional[int], Optional[int], Optional[bytes]] @ src/gamelib/ui/menus/thumbnail_menu.py [L415]
  │  ⮕ Parse PNG file and extract image dimensions and RGBA data.
  │  ⤷ Uses: Exception, Optional, Tuple, bytes, chunk_type (+14 more)
  ├─ _unfilter_png_data(self, raw_data: bytes, width: int, height: int) -> bytes @ src/gamelib/ui/menus/thumbnail_menu.py [L474]
  │  ⮕ Unfilter PNG scanlines and convert to proper image format.
  │  ⤷ Uses: bytearray, bytes, bytes_per_pixel, height, raw_data (+7 more)
  ├─ _convert_to_rgba8(self, image_data: bytes, width: int, height: int) -> bytes @ src/gamelib/ui/menus/thumbnail_menu.py [L500]
  │  ⮕ Convert image data to RGBA8 format for ImGui.
  │  ⤷ Uses: bytes, height, image_data, width

src.gamelib.ui.player_hud.PlayerHUD @ src/gamelib/ui/player_hud.py [L27]
  ⮕ High-level HUD controller that mirrors the debug overlay system.
  ⤖ Siblings: _HUDRow
  ├─ __init__(self, pipeline: 'RenderPipeline') -> None @ src/gamelib/ui/player_hud.py [L30]
  │  ⤷ Uses: Dict, List, NotImplementedError, Optional, Path (+40 more)
  ├─ set_health(self, current: float, maximum: float) -> None @ src/gamelib/ui/player_hud.py [L84]
  │  ⤷ Uses: current, max, maximum
  ├─ set_minimap_status(self, status: str) -> None @ src/gamelib/ui/player_hud.py [L88]
  │  ⤷ Uses: status
  ├─ set_equipped_tool(self, tool_name: str, icon_path: Optional[str]) -> None @ src/gamelib/ui/player_hud.py [L91]
  │  ⤷ Uses: Optional, Path, icon_path, path, path.is_absolute (+10 more)
  ├─ set_hints(self, hints: Sequence[str]) -> None @ src/gamelib/ui/player_hud.py [L103]
  │  ⤷ Uses: Sequence, hint, hints, self._hint_slots
  ├─ clear_hints(self) -> None @ src/gamelib/ui/player_hud.py [L106]
  │  ⤷ Uses: self._hints, self._hints.clear
  ├─ set_section_value_color(self, section: str, color: Tuple[float, float, float, float]) -> None @ src/gamelib/ui/player_hud.py [L109]
  │  ⤷ Uses: Tuple, color, row, row.value_ids, section (+5 more)
  ├─ update(self, camera, frametime: float) -> None @ src/gamelib/ui/player_hud.py [L117]
  │  ⮕ Refresh HUD content based on current state.
  │  ⤷ Uses: camera, self._ensure_layout, self._update_compass, self._update_health, self._update_hints (+2 more)
  ├─ _create_rows(self) -> None @ src/gamelib/ui/player_hud.py [L130]
  │  ⤷ Uses: absolute, config, config.get, icon_path, label_text (+27 more)
  ├─ _apply_default_layout(self) -> None @ src/gamelib/ui/player_hud.py [L184]
  │  ⤷ Uses: self._ensure_layout
  ├─ _ensure_layout(self) -> None @ src/gamelib/ui/player_hud.py [L191]
  │  ⤷ Uses: self._last_viewport, self._layout_rows, self.pipeline, self.pipeline.viewport_size, viewport
  ├─ _layout_rows(self, viewport: Tuple[int, int]) -> None @ src/gamelib/ui/player_hud.py [L198]
  │  ⤷ Uses: Tuple, base_x, cursor_y, direction, height (+14 more)
  ├─ _compute_row_height(self, name: str) -> float @ src/gamelib/ui/player_hud.py [L224]
  │  ⤷ Uses: lines, max, name, self._hint_line_spacing, self._hint_slots (+5 more)
  ├─ _position_row(self, row: _HUDRow, base_x: float, row_top: float, row_height: float) -> None @ src/gamelib/ui/player_hud.py [L233]
  │  ⤷ Uses: base_x, current_y, icon_y, lines, max (+23 more)
  ├─ _update_compass(self, camera) -> None @ src/gamelib/ui/player_hud.py [L264]
  │  ⤷ Uses: camera, camera.get_front, directions, forward, heading_deg (+14 more)
  ├─ _update_health(self) -> None @ src/gamelib/ui/player_hud.py [L279]
  │  ⤷ Uses: color, max, ratio, row, row.value_ids (+13 more)
  ├─ _update_minimap(self) -> None @ src/gamelib/ui/player_hud.py [L296]
  │  ⤷ Uses: row, row.value_ids, self._minimap_status, self._rows, self._rows.get (+4 more)
  ├─ _update_tool(self) -> None @ src/gamelib/ui/player_hud.py [L303]
  │  ⤷ Uses: row, row.value_ids, self._equipped_tool, self._rows, self._rows.get (+4 more)
  ├─ _update_hints(self) -> None @ src/gamelib/ui/player_hud.py [L310]
  │  ⤷ Uses: hint, hints, max, row, row.value_ids (+10 more)

src.gamelib.ui.player_hud._HUDRow @ src/gamelib/ui/player_hud.py [L17]
  ⮕ Container for HUD layout primitives.
  ⤖ Siblings: PlayerHUD

src.gamelib.ui.theme.ColorPalette @ src/gamelib/ui/theme.py [L25]
  ⮕ Color palette for a theme.
  ⤖ Siblings: ThemeConfig, ThemeManager

src.gamelib.ui.theme.ThemeConfig @ src/gamelib/ui/theme.py [L59]
  ⮕ Complete theme configuration.
  ⤖ Siblings: ColorPalette, ThemeManager
  ├─ from_dict(cls, data: Dict) -> ThemeConfig @ src/gamelib/ui/theme.py [L90]
  │  ⮕ Load theme from dictionary (JSON compatible).
  │  ⤷ Uses: ColorPalette, Dict, ThemeConfig, classmethod, colors (+8 more)
  ├─ to_dict(self) -> Dict @ src/gamelib/ui/theme.py [L120]
  │  ⮕ Convert theme to dictionary (JSON serializable).
  │  ⤷ Uses: Dict, asdict, colors_dict, colors_dict.items, data (+4 more)

src.gamelib.ui.theme.ThemeManager @ src/gamelib/ui/theme.py [L132]
  ⮕ Manages ImGui themes and styling.
  ⤖ Siblings: ColorPalette, ThemeConfig
  ├─ __init__(self, theme_name: str) -> None @ src/gamelib/ui/theme.py [L169]
  │  ⮕ Initialize theme manager.
  │  ⤷ Uses: self._load_theme, self.apply_theme, self.current_theme, theme_name
  ├─ _load_theme(self, theme_name: str) -> ThemeConfig @ src/gamelib/ui/theme.py [L179]
  │  ⮕ Load theme from JSON or built-in.
  │  ⤷ Uses: PROJECT_ROOT, ThemeConfig, ThemeConfig.from_dict, data, f (+7 more)
  ├─ apply_theme(self, theme: ThemeConfig) -> None @ src/gamelib/ui/theme.py [L204]
  │  ⮕ Apply theme colors and styling to ImGui.
  │  ⤷ Uses: ThemeConfig, colors, colors.accent, colors.accent_dark, colors.bg_primary (+55 more)
  ├─ switch_theme(self, theme_name: str) -> None @ src/gamelib/ui/theme.py [L274]
  │  ⮕ Switch to a different theme.
  │  ⤷ Uses: self._load_theme, self.apply_theme, theme, theme_name
  ├─ get_color(self, color_name: str) -> Color3 @ src/gamelib/ui/theme.py [L284]
  │  ⮕ Get a color from the current theme palette.
  │  ⤷ Uses: Color3, color_name, colors, colors.primary, getattr (+2 more)

src.gamelib.ui.ui_manager.UIManager @ src/gamelib/ui/ui_manager.py [L25]
  ⮕ Central UI manager for ImGui integration.
  ├─ __init__(self, ctx: moderngl.Context, window_size: tuple[int, int], theme_name: str) -> None @ src/gamelib/ui/ui_manager.py [L37]
  │  ⮕ Initialize UI manager.
  │  ⤷ Uses: InputManager, Optional, PauseEffects, ProgrammablePipelineRenderer, ThemeManager (+11 more)
  ├─ set_input_manager(self, input_manager: InputManager) -> None @ src/gamelib/ui/ui_manager.py [L85]
  │  ⮕ Set reference to input manager for context switching.
  │  ⤷ Uses: InputManager, input_manager
  ├─ handle_mouse_position(self, x: float, y: float) -> None @ src/gamelib/ui/ui_manager.py [L89]
  │  ⮕ Update ImGui mouse position.
  │  ⤷ Uses: imgui, imgui.get_io, io, x, y
  ├─ handle_mouse_button(self, button: int, pressed: bool) -> None @ src/gamelib/ui/ui_manager.py [L94]
  │  ⮕ Handle mouse button events.
  │  ⤷ Uses: button, imgui, imgui.get_io, io, io.mouse_down (+1 more)
  ├─ handle_mouse_scroll(self, x_offset: float, y_offset: float) -> None @ src/gamelib/ui/ui_manager.py [L106]
  │  ⮕ Handle mouse scroll.
  │  ⤷ Uses: imgui, imgui.get_io, io, x_offset, y_offset
  ├─ handle_keyboard_event(self, key: int, pressed: bool) -> None @ src/gamelib/ui/ui_manager.py [L112]
  │  ⮕ Handle keyboard events.
  │  ⤷ Uses: imgui, imgui.get_io, io, io.keys_down, key (+1 more)
  ├─ handle_character_input(self, char: str) -> None @ src/gamelib/ui/ui_manager.py [L124]
  │  ⮕ Handle text input.
  │  ⤷ Uses: char, imgui, imgui.get_io, io, io.add_input_character (+1 more)
  ├─ resize(self, width: int, height: int) -> None @ src/gamelib/ui/ui_manager.py [L129]
  │  ⮕ Handle window resize.
  │  ⤷ Uses: height, imgui, imgui.get_io, io, self.pause_effects (+2 more)
  ├─ pause_game(self) -> None @ src/gamelib/ui/ui_manager.py [L144]
  │  ⮕ Pause the game and show pause menu.
  │  ⤷ Uses: InputContext, InputContext.MENU, self.input_manager, self.input_manager.context_manager, self.input_manager.context_manager.push_context
  ├─ resume_game(self) -> None @ src/gamelib/ui/ui_manager.py [L151]
  │  ⮕ Resume the game and hide pause menu.
  │  ⤷ Uses: self.input_manager, self.input_manager.context_manager, self.input_manager.context_manager.pop_context
  ├─ show_main_menu_screen(self) -> None @ src/gamelib/ui/ui_manager.py [L158]
  │  ⮕ Show main menu (before game starts).
  │  ⤷ Uses: InputContext, InputContext.MENU, self.input_manager, self.input_manager.context_manager, self.input_manager.context_manager.set_context
  ├─ hide_main_menu_screen(self) -> None @ src/gamelib/ui/ui_manager.py [L164]
  │  ⮕ Hide main menu and return to gameplay.
  │  ⤷ Uses: InputContext, InputContext.GAMEPLAY, self.input_manager, self.input_manager.context_manager, self.input_manager.context_manager.set_context
  ├─ toggle_pause_menu(self) -> None @ src/gamelib/ui/ui_manager.py [L170]
  │  ⮕ Toggle pause menu on/off.
  │  ⤷ Uses: self.is_paused, self.pause_game, self.resume_game
  ├─ is_input_captured_by_imgui(self) -> bool @ src/gamelib/ui/ui_manager.py [L177]
  │  ⮕ Check if ImGui has captured input focus.
  │  ⤷ Uses: imgui, imgui.get_io, io, io.want_capture_keyboard, io.want_capture_mouse
  ├─ start_frame(self) -> None @ src/gamelib/ui/ui_manager.py [L186]
  │  ⮕ Called at the start of each frame.
  │  ⤷ Uses: imgui, imgui.get_io, imgui.new_frame
  ├─ end_frame(self) -> None @ src/gamelib/ui/ui_manager.py [L195]
  │  ⮕ Called at the end of each frame.
  │  ⤷ Uses: imgui, imgui.end_frame, imgui.render
  ├─ render(self) -> None @ src/gamelib/ui/ui_manager.py [L204]
  │  ⮕ Render ImGui to screen.
  │  ⤷ Uses: imgui, imgui.get_draw_data, imgui.render, self.renderer, self.renderer.render
  ├─ render_pause_overlay(self) -> None @ src/gamelib/ui/ui_manager.py [L209]
  │  ⮕ Render dim overlay when paused.
  │  ⤷ Uses: self.dim_alpha, self.is_paused, self.pause_effects, self.pause_effects.render_dim_overlay
  ├─ shutdown(self) -> None @ src/gamelib/ui/ui_manager.py [L214]
  │  ⮕ Clean up ImGui resources.
  │  ⤷ Uses: self.pause_effects, self.pause_effects.shutdown, self.renderer, self.renderer.shutdown
  ├─ switch_theme(self, theme_name: str) -> None @ src/gamelib/ui/ui_manager.py [L219]
  │  ⮕ Switch to a different theme.
  │  ⤷ Uses: self.theme_manager, self.theme_manager.switch_theme, theme_name

tests.test_fractal_perlin.TestFBM(unittest.TestCase) @ tests/test_fractal_perlin.py [L53]
  ⮕ Test fractal Brownian motion.
  ⤖ Siblings: TestGenerateNoiseGrid, TestOBJExport, TestPerlinNoise (+1 more)
  ├─ test_fbm_scalar_input(self) -> None @ tests/test_fractal_perlin.py [L56]
  │  ⮕ Test fbm with scalar inputs.
  │  ⤷ Uses: fbm, np, np.ndarray, result, self.assertIsInstance
  ├─ test_fbm_array_input(self) -> None @ tests/test_fractal_perlin.py [L61]
  │  ⮕ Test fbm with array inputs.
  │  ⤷ Uses: fbm, np, np.array, result, result.shape (+3 more)
  ├─ test_fbm_value_range(self) -> None @ tests/test_fractal_perlin.py [L68]
  │  ⮕ Test that fbm output is normalized.
  │  ⤷ Uses: fbm, np, np.abs, np.linspace, np.max (+7 more)
  ├─ test_fbm_deterministic(self) -> None @ tests/test_fractal_perlin.py [L77]
  │  ⮕ Test that same seed produces same fbm output.
  │  ⤷ Uses: fbm, np, np.testing, np.testing.assert_allclose, result1 (+1 more)
  ├─ test_fbm_octaves_effect(self) -> None @ tests/test_fractal_perlin.py [L83]
  │  ⮕ Test that more octaves add detail (different from fewer octaves).
  │  ⤷ Uses: fbm, np, np.allclose, np.linspace, result_high (+4 more)

tests.test_fractal_perlin.TestGenerateNoiseGrid(unittest.TestCase) @ tests/test_fractal_perlin.py [L93]
  ⮕ Test generate_noise_grid function.
  ⤖ Siblings: TestFBM, TestOBJExport, TestPerlinNoise (+1 more)
  ├─ test_grid_shape(self) -> None @ tests/test_fractal_perlin.py [L96]
  │  ⮕ Test that generate_noise_grid returns correct shape.
  │  ⤷ Uses: generate_noise_grid, heights, heights.shape, self.assertEqual
  ├─ test_grid_metadata(self) -> None @ tests/test_fractal_perlin.py [L101]
  │  ⮕ Test that metadata is returned with correct keys.
  │  ⤷ Uses: generate_noise_grid, meta, self.assertEqual, self.assertIn
  ├─ test_grid_deterministic(self) -> None @ tests/test_fractal_perlin.py [L110]
  │  ⮕ Test that same parameters produce same grid.
  │  ⤷ Uses: generate_noise_grid, heights1, heights2, np, np.testing (+1 more)
  ├─ test_grid_different_seeds(self) -> None @ tests/test_fractal_perlin.py [L116]
  │  ⮕ Test that different seeds produce different grids.
  │  ⤷ Uses: generate_noise_grid, heights1, heights2, np, np.array_equal (+1 more)
  ├─ test_grid_presets(self) -> None @ tests/test_fractal_perlin.py [L122]
  │  ⮕ Test that all presets work.
  │  ⤷ Uses: PRESETS, PRESETS.keys, generate_noise_grid, heights, heights.shape (+3 more)
  ├─ test_grid_custom_params(self) -> None @ tests/test_fractal_perlin.py [L129]
  │  ⮕ Test that custom parameters override preset.
  │  ⤷ Uses: generate_noise_grid, meta, self.assertEqual
  ├─ test_grid_resolution_100(self) -> None @ tests/test_fractal_perlin.py [L140]
  │  ⮕ Test default test resolution of 100.
  │  ⤷ Uses: generate_noise_grid, heights, heights.shape, np, np.all (+3 more)

tests.test_fractal_perlin.TestOBJExport(unittest.TestCase) @ tests/test_fractal_perlin.py [L186]
  ⮕ Test OBJ mesh export.
  ⤖ Siblings: TestFBM, TestGenerateNoiseGrid, TestPerlinNoise (+1 more)
  ├─ test_export_obj(self) -> None @ tests/test_fractal_perlin.py [L189]
  │  ⮕ Test that OBJ file is created.
  │  ⤷ Uses: content, export_obj, fh, fh.read, heights (+14 more)
  ├─ test_obj_vertex_count(self) -> None @ tests/test_fractal_perlin.py [L203]
  │  ⮕ Test that OBJ has correct number of vertices.
  │  ⤷ Uses: export_obj, fh, fh.readlines, heights, l (+15 more)
  ├─ test_obj_face_count(self) -> None @ tests/test_fractal_perlin.py [L216]
  │  ⮕ Test that OBJ has correct number of faces.
  │  ⤷ Uses: expected_faces, export_obj, face_lines, fh, fh.readlines (+16 more)

tests.test_fractal_perlin.TestPerlinNoise(unittest.TestCase) @ tests/test_fractal_perlin.py [L14]
  ⮕ Test basic Perlin noise function.
  ⤖ Siblings: TestFBM, TestGenerateNoiseGrid, TestOBJExport (+1 more)
  ├─ test_perlin_scalar_input(self) -> None @ tests/test_fractal_perlin.py [L17]
  │  ⮕ Test that perlin accepts scalar inputs.
  │  ⤷ Uses: np, np.isscalar, perlin, result, result.ndim (+1 more)
  ├─ test_perlin_array_input(self) -> None @ tests/test_fractal_perlin.py [L23]
  │  ⮕ Test that perlin accepts array inputs.
  │  ⤷ Uses: np, np.array, perlin, result, result.shape (+3 more)
  ├─ test_perlin_value_range(self) -> None @ tests/test_fractal_perlin.py [L30]
  │  ⮕ Test that perlin output is roughly in expected range.
  │  ⤷ Uses: np, np.abs, np.linspace, np.max, np.meshgrid (+7 more)
  ├─ test_perlin_deterministic(self) -> None @ tests/test_fractal_perlin.py [L39]
  │  ⮕ Test that same seed produces same output.
  │  ⤷ Uses: np, np.testing, np.testing.assert_array_equal, perlin, result1 (+1 more)
  ├─ test_perlin_different_seeds(self) -> None @ tests/test_fractal_perlin.py [L45]
  │  ⮕ Test that different seeds produce different output.
  │  ⤷ Uses: perlin, result1, result2, self.assertNotAlmostEqual

tests.test_fractal_perlin.TestSaveAndLoadHeightmap(unittest.TestCase) @ tests/test_fractal_perlin.py [L148]
  ⮕ Test saving and loading heightmap files.
  ⤖ Siblings: TestFBM, TestGenerateNoiseGrid, TestOBJExport (+1 more)
  ├─ test_save_and_load_npz(self) -> None @ tests/test_fractal_perlin.py [L151]
  │  ⮕ Test that heightmap can be saved and loaded.
  │  ⤷ Uses: generate_noise_grid, heights, json, json.loads, loaded (+16 more)
  ├─ test_save_with_json_fallback(self) -> None @ tests/test_fractal_perlin.py [L168]
  │  ⮕ Test that JSON metadata file is created when requested.
  │  ⤷ Uses: fh, generate_noise_grid, heights, json, json.load (+16 more)

tests.test_terrain_integration.TestTerrainGenerationIntegration(unittest.TestCase) @ tests/test_terrain_integration.py [L13]
  ⮕ Test integration of fractal_perlin with terrain_generation.
  ├─ test_fractal_noise_backward_compatibility(self) -> None @ tests/test_terrain_integration.py [L16]
  │  ⮕ Test that fractal_noise still works without use_perlin flag.
  │  ⤷ Uses: abs, fractal_noise, result, self.assertIsInstance, self.assertLessEqual
  ├─ test_fractal_noise_deterministic(self) -> None @ tests/test_terrain_integration.py [L23]
  │  ⮕ Test that fractal_noise is deterministic.
  │  ⤷ Uses: fractal_noise, result1, result2, self.assertAlmostEqual
  ├─ test_fractal_noise_with_perlin(self) -> None @ tests/test_terrain_integration.py [L30]
  │  ⮕ Test that fractal_noise can use Perlin when requested.
  │  ⤷ Uses: HAS_PERLIN, fractal_noise, result_perlin, result_sine, self.assertIsInstance (+3 more)
  ├─ test_generate_donut_backward_compatibility(self) -> None @ tests/test_terrain_integration.py [L42]
  │  ⮕ Test that generate_donut_height_data works without use_perlin.
  │  ⤷ Uses: generate_donut_height_data, heights, heights.min, heights.shape, np (+5 more)
  ├─ test_generate_donut_with_perlin(self) -> None @ tests/test_terrain_integration.py [L57]
  │  ⮕ Test that generate_donut_height_data can use Perlin noise.
  │  ⤷ Uses: HAS_PERLIN, generate_donut_height_data, heights, heights.min, heights.shape (+8 more)
  ├─ test_generate_fractal_terrain(self) -> None @ tests/test_terrain_integration.py [L73]
  │  ⮕ Test the new generate_fractal_terrain function.
  │  ⤷ Uses: HAS_PERLIN, generate_fractal_terrain, heights, heights.shape, np (+6 more)
  ├─ test_generate_fractal_terrain_deterministic(self) -> None @ tests/test_terrain_integration.py [L86]
  │  ⮕ Test that generate_fractal_terrain is deterministic.
  │  ⤷ Uses: HAS_PERLIN, generate_fractal_terrain, heights1, heights2, np (+4 more)
  ├─ test_generate_fractal_terrain_presets(self) -> None @ tests/test_terrain_integration.py [L94]
  │  ⮕ Test that all presets work.
  │  ⤷ Uses: HAS_PERLIN, generate_fractal_terrain, heights, heights.shape, np (+7 more)

================================================================================
SUMMARY: 140 classes, 906 methods, 96 functions
================================================================================